{
    "filename": "chmod",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun unconstrained_ret_mbrtowc_2971_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_2879_64 () (_ BitVec 64))\n(declare-fun sym_argv_0_80 () (_ BitVec 80))\n(declare-fun strlen_2496_64 () (_ BitVec 64))\n(assert\n (let (($x27167 (= (_ bv0 64) unconstrained_ret_mbrtowc_2971_64)))\n (not $x27167)))\n(assert\n (let (($x71131 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_2971_64)))\n (not $x71131)))\n(assert\n (let (($x37552 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_2971_64)))\n (not $x37552)))\n(assert\n (let (($x23677 (= (_ bv0 64) unconstrained_ret_mbrtowc_2879_64)))\n (not $x23677)))\n(assert\n (let (($x16662 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_2879_64)))\n (not $x16662)))\n(assert\n (let (($x27142 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_2879_64)))\n (not $x27142)))\n(assert\n (let ((?x168 ((_ extract 55 55) sym_argv_0_80)))\n (= (_ bv0 1) ?x168)))\n(assert\n (let ((?x178 ((_ extract 47 47) sym_argv_0_80)))\n (= (_ bv0 1) ?x178)))\n(assert\n (let ((?x188 ((_ extract 39 39) sym_argv_0_80)))\n (= (_ bv0 1) ?x188)))\n(assert\n (let ((?x198 ((_ extract 31 31) sym_argv_0_80)))\n (= (_ bv0 1) ?x198)))\n(assert\n (let ((?x208 ((_ extract 23 23) sym_argv_0_80)))\n (= (_ bv0 1) ?x208)))\n(assert\n (let ((?x218 ((_ extract 15 15) sym_argv_0_80)))\n (= (_ bv0 1) ?x218)))\n(assert\n (let ((?x464 ((_ extract 7 7) sym_argv_0_80)))\n (= (_ bv0 1) ?x464)))\n(assert\n (let ((?x170 ((_ extract 54 48) sym_argv_0_80)))\n (bvule ?x170 (_ bv126 7))))\n(assert\n (let ((?x180 ((_ extract 46 40) sym_argv_0_80)))\n (bvule ?x180 (_ bv126 7))))\n(assert\n (let ((?x190 ((_ extract 38 32) sym_argv_0_80)))\n (bvule ?x190 (_ bv126 7))))\n(assert\n (let ((?x200 ((_ extract 30 24) sym_argv_0_80)))\n (bvule ?x200 (_ bv126 7))))\n(assert\n (let ((?x210 ((_ extract 22 16) sym_argv_0_80)))\n (bvule ?x210 (_ bv126 7))))\n(assert\n (let ((?x354 ((_ extract 14 8) sym_argv_0_80)))\n (bvule ?x354 (_ bv126 7))))\n(assert\n (let ((?x466 ((_ extract 6 0) sym_argv_0_80)))\n (bvule ?x466 (_ bv126 7))))\n(assert\n (let ((?x16 ((_ extract 79 72) sym_argv_0_80)))\n (= (_ bv52 8) ?x16)))\n(assert\n (let ((?x13641 ((_ extract 69 64) sym_argv_0_80)))\n (let (($x19675 (bvule ?x13641 (_ bv39 6))))\n (let ((?x7597 ((_ extract 71 70) sym_argv_0_80)))\n (let (($x13323 (= (_ bv0 2) ?x7597)))\n (let (($x9544 (and $x13323 $x19675)))\n (let ((?x10976 (ite $x9544 (_ bv2 8) (_ bv1 8))))\n (let (($x7253 (= (_ bv0 8) ?x10976)))\n (not $x7253)))))))))\n(assert\n (let ((?x24 ((_ extract 71 64) sym_argv_0_80)))\n (= (_ bv64 8) ?x24)))\n(assert\n (let ((?x5477 (bvadd (_ bv576460752303357896 64) strlen_2496_64)))\n (let ((?x35 ((_ extract 7 0) sym_argv_0_80)))\n (let (($x10067 (= (_ bv0 8) ?x35)))\n (let ((?x16356 (ite $x10067 (_ bv576460752303357905 64) (_ bv576460752303357906 64))))\n (let ((?x19 ((_ extract 15 8) sym_argv_0_80)))\n (let (($x5414 (= (_ bv0 8) ?x19)))\n (let ((?x19276 (ite $x5414 (_ bv576460752303357904 64) ?x16356)))\n (let ((?x21 ((_ extract 23 16) sym_argv_0_80)))\n (let (($x7569 (= (_ bv0 8) ?x21)))\n (let ((?x321 (ite $x7569 (_ bv576460752303357903 64) ?x19276)))\n (let ((?x23 ((_ extract 31 24) sym_argv_0_80)))\n (let (($x2137 (= (_ bv0 8) ?x23)))\n (let ((?x15698 (ite $x2137 (_ bv576460752303357902 64) ?x321)))\n (let ((?x27 ((_ extract 39 32) sym_argv_0_80)))\n (let (($x3357 (= (_ bv0 8) ?x27)))\n (let ((?x27330 (ite $x3357 (_ bv576460752303357901 64) ?x15698)))\n (let ((?x29 ((_ extract 47 40) sym_argv_0_80)))\n (let (($x2950 (= (_ bv0 8) ?x29)))\n (let ((?x19015 (ite $x2950 (_ bv576460752303357900 64) ?x27330)))\n (let ((?x31 ((_ extract 55 48) sym_argv_0_80)))\n (let (($x2252 (= (_ bv0 8) ?x31)))\n (let ((?x9822 (ite $x2252 (_ bv576460752303357899 64) ?x19015)))\n (= ?x9822 ?x5477))))))))))))))))))))))))\n(assert\n (let (($x17545 (= (_ bv18446744073709551615 64) strlen_2496_64)))\n (not $x17545)))\n(assert\n (bvule (_ bv3 64) strlen_2496_64))\n(assert\n (let ((?x16279 ((_ extract 61 56) sym_argv_0_80)))\n (let (($x24459 (bvule ?x16279 (_ bv39 6))))\n (let ((?x21457 ((_ extract 63 62) sym_argv_0_80)))\n (let (($x25387 (= (_ bv0 2) ?x21457)))\n (let (($x24757 (and $x25387 $x24459)))\n (let ((?x16263 (ite $x24757 (_ bv2 8) (_ bv1 8))))\n (let (($x6994 (= (_ bv0 8) ?x16263)))\n (not $x6994)))))))))\n(assert\n (let ((?x18 ((_ extract 63 56) sym_argv_0_80)))\n (= (_ bv64 8) ?x18)))\n(assert\n (let ((?x28638 (bvadd (_ bv2 64) unconstrained_ret_mbrtowc_2879_64)))\n (let ((?x77541 (bvadd ?x28638 unconstrained_ret_mbrtowc_2971_64)))\n (let (($x73871 (bvule strlen_2496_64 ?x77541)))\n (not $x73871)))))\n(assert\n (let ((?x23988 (bvadd (_ bv576460752303357898 64) unconstrained_ret_mbrtowc_2879_64)))\n (let ((?x18536 (bvadd ?x23988 unconstrained_ret_mbrtowc_2971_64)))\n (bvule (_ bv576460752303357896 64) ?x18536))))\n(assert\n (let ((?x23988 (bvadd (_ bv576460752303357898 64) unconstrained_ret_mbrtowc_2879_64)))\n (let ((?x18536 (bvadd ?x23988 unconstrained_ret_mbrtowc_2971_64)))\n (let ((?x16874 ((_ extract 63 59) ?x18536)))\n (= (_ bv0 5) ?x16874)))))\n(assert\n (let ((?x72756 ((_ extract 58 0) unconstrained_ret_mbrtowc_2971_64)))\n (let ((?x29864 ((_ extract 58 0) unconstrained_ret_mbrtowc_2879_64)))\n (let ((?x79873 (bvadd (_ bv576460752303357898 59) ?x29864)))\n (let ((?x77163 (bvadd ?x79873 ?x72756)))\n (bvule ?x77163 (_ bv576460752303357905 59)))))))\n(assert\n (let ((?x44081 (bvadd unconstrained_ret_mbrtowc_2879_64 unconstrained_ret_mbrtowc_2971_64)))\n (let ((?x33979 (bvadd ?x44081 (_ bv576460752303357898 64))))\n (let (($x16927 (and (distinct (_ bv576460752303357905 64) ?x33979) true)))\n (let (($x55599 (and (distinct (_ bv576460752303357904 64) ?x33979) true)))\n (let (($x20414 (and (distinct (_ bv576460752303357898 64) ?x33979) true)))\n (let (($x32961 (and (distinct (_ bv576460752303357896 64) ?x33979) true)))\n (and $x32961 $x20414 $x55599 $x16927))))))))\n(assert\n (let ((?x44081 (bvadd unconstrained_ret_mbrtowc_2879_64 unconstrained_ret_mbrtowc_2971_64)))\n (let ((?x33979 (bvadd ?x44081 (_ bv576460752303357898 64))))\n (and (distinct ?x33979 (_ bv576460752303357897 64)) true))))\n(assert\n (let ((?x44081 (bvadd unconstrained_ret_mbrtowc_2879_64 unconstrained_ret_mbrtowc_2971_64)))\n (let ((?x33979 (bvadd ?x44081 (_ bv576460752303357898 64))))\n (and (distinct ?x33979 (_ bv576460752303357899 64)) true))))\n(assert\n (let ((?x44081 (bvadd unconstrained_ret_mbrtowc_2879_64 unconstrained_ret_mbrtowc_2971_64)))\n (let ((?x33979 (bvadd ?x44081 (_ bv576460752303357898 64))))\n (and (distinct ?x33979 (_ bv576460752303357900 64)) true))))\n(assert\n (let ((?x44081 (bvadd unconstrained_ret_mbrtowc_2879_64 unconstrained_ret_mbrtowc_2971_64)))\n (let ((?x33979 (bvadd ?x44081 (_ bv576460752303357898 64))))\n (and (distinct ?x33979 (_ bv576460752303357901 64)) true))))\n(assert\n (let ((?x44081 (bvadd unconstrained_ret_mbrtowc_2879_64 unconstrained_ret_mbrtowc_2971_64)))\n (let ((?x33979 (bvadd ?x44081 (_ bv576460752303357898 64))))\n (and (distinct ?x33979 (_ bv576460752303357902 64)) true))))\n(assert\n (let ((?x44081 (bvadd unconstrained_ret_mbrtowc_2879_64 unconstrained_ret_mbrtowc_2971_64)))\n (let ((?x33979 (bvadd ?x44081 (_ bv576460752303357898 64))))\n (and (distinct ?x33979 (_ bv576460752303357903 64)) true))))\n(check-sat)\n",
    "time": 1.238490343093872,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=2, tm_hour=11, tm_min=11, tm_sec=30, tm_wday=2, tm_yday=337, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            0.9683985710144043
        ]
    }
}