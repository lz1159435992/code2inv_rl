{
    "filename": "runcon",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun unconstrained_ret_mbrtowc_830_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_625_64 () (_ BitVec 64))\n(declare-fun sym_argv_0_80 () (_ BitVec 80))\n(declare-fun strlen_594_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_707_64 () (_ BitVec 64))\n(assert\n (let (($x27255 (= (_ bv0 64) unconstrained_ret_mbrtowc_830_64)))\n (not $x27255)))\n(assert\n (let (($x10076 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_830_64)))\n (not $x10076)))\n(assert\n (let (($x18390 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_830_64)))\n (not $x18390)))\n(assert\n (let (($x15794 (= (_ bv0 64) unconstrained_ret_mbrtowc_625_64)))\n (not $x15794)))\n(assert\n (let (($x11252 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_625_64)))\n (not $x11252)))\n(assert\n (let (($x14113 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_625_64)))\n (not $x14113)))\n(assert\n (let ((?x133 ((_ extract 71 71) sym_argv_0_80)))\n (= (_ bv0 1) ?x133)))\n(assert\n (let ((?x330 ((_ extract 63 63) sym_argv_0_80)))\n (= (_ bv0 1) ?x330)))\n(assert\n (let ((?x168 ((_ extract 55 55) sym_argv_0_80)))\n (= (_ bv0 1) ?x168)))\n(assert\n (let ((?x178 ((_ extract 47 47) sym_argv_0_80)))\n (= (_ bv0 1) ?x178)))\n(assert\n (let ((?x188 ((_ extract 39 39) sym_argv_0_80)))\n (= (_ bv0 1) ?x188)))\n(assert\n (let ((?x198 ((_ extract 31 31) sym_argv_0_80)))\n (= (_ bv0 1) ?x198)))\n(assert\n (let ((?x208 ((_ extract 23 23) sym_argv_0_80)))\n (= (_ bv0 1) ?x208)))\n(assert\n (let ((?x218 ((_ extract 15 15) sym_argv_0_80)))\n (= (_ bv0 1) ?x218)))\n(assert\n (let ((?x462 ((_ extract 7 7) sym_argv_0_80)))\n (= (_ bv0 1) ?x462)))\n(assert\n (let ((?x84 ((_ extract 70 64) sym_argv_0_80)))\n (bvule ?x84 (_ bv126 7))))\n(assert\n (let ((?x160 ((_ extract 62 56) sym_argv_0_80)))\n (bvule ?x160 (_ bv126 7))))\n(assert\n (let ((?x170 ((_ extract 54 48) sym_argv_0_80)))\n (bvule ?x170 (_ bv126 7))))\n(assert\n (let ((?x180 ((_ extract 46 40) sym_argv_0_80)))\n (bvule ?x180 (_ bv126 7))))\n(assert\n (let ((?x190 ((_ extract 38 32) sym_argv_0_80)))\n (bvule ?x190 (_ bv126 7))))\n(assert\n (let ((?x200 ((_ extract 30 24) sym_argv_0_80)))\n (bvule ?x200 (_ bv126 7))))\n(assert\n (let ((?x210 ((_ extract 22 16) sym_argv_0_80)))\n (bvule ?x210 (_ bv126 7))))\n(assert\n (let ((?x222 ((_ extract 14 8) sym_argv_0_80)))\n (bvule ?x222 (_ bv126 7))))\n(assert\n (let ((?x464 ((_ extract 6 0) sym_argv_0_80)))\n (bvule ?x464 (_ bv126 7))))\n(assert\n (let ((?x12209 ((_ extract 77 72) sym_argv_0_80)))\n (let (($x15499 (bvule ?x12209 (_ bv39 6))))\n (let ((?x14415 ((_ extract 79 78) sym_argv_0_80)))\n (let (($x7178 (= (_ bv0 2) ?x14415)))\n (let (($x12362 (and $x7178 $x15499)))\n (let ((?x15280 (ite $x12362 (_ bv2 8) (_ bv1 8))))\n (let (($x5853 (= (_ bv0 8) ?x15280)))\n (not $x5853)))))))))\n(assert\n (let ((?x16 ((_ extract 79 72) sym_argv_0_80)))\n (= (_ bv64 8) ?x16)))\n(assert\n (let ((?x20256 (bvadd (_ bv576460752303357897 64) strlen_594_64)))\n (let ((?x35 ((_ extract 7 0) sym_argv_0_80)))\n (let (($x2192 (= (_ bv0 8) ?x35)))\n (let ((?x5328 (ite $x2192 (_ bv576460752303357906 64) (_ bv576460752303357907 64))))\n (let ((?x19 ((_ extract 15 8) sym_argv_0_80)))\n (let (($x6030 (= (_ bv0 8) ?x19)))\n (let ((?x3791 (ite $x6030 (_ bv576460752303357905 64) ?x5328)))\n (let ((?x21 ((_ extract 23 16) sym_argv_0_80)))\n (let (($x2984 (= (_ bv0 8) ?x21)))\n (let ((?x5466 (ite $x2984 (_ bv576460752303357904 64) ?x3791)))\n (let ((?x23 ((_ extract 31 24) sym_argv_0_80)))\n (let (($x5688 (= (_ bv0 8) ?x23)))\n (let ((?x4287 (ite $x5688 (_ bv576460752303357903 64) ?x5466)))\n (let ((?x27 ((_ extract 39 32) sym_argv_0_80)))\n (let (($x5824 (= (_ bv0 8) ?x27)))\n (let ((?x5897 (ite $x5824 (_ bv576460752303357902 64) ?x4287)))\n (let ((?x29 ((_ extract 47 40) sym_argv_0_80)))\n (let (($x4736 (= (_ bv0 8) ?x29)))\n (let ((?x5970 (ite $x4736 (_ bv576460752303357901 64) ?x5897)))\n (let ((?x31 ((_ extract 55 48) sym_argv_0_80)))\n (let (($x6462 (= (_ bv0 8) ?x31)))\n (let ((?x2423 (ite $x6462 (_ bv576460752303357900 64) ?x5970)))\n (let ((?x18 ((_ extract 63 56) sym_argv_0_80)))\n (let (($x4700 (= (_ bv0 8) ?x18)))\n (let ((?x3978 (ite $x4700 (_ bv576460752303357899 64) ?x2423)))\n (let ((?x24 ((_ extract 71 64) sym_argv_0_80)))\n (let (($x4731 (= (_ bv0 8) ?x24)))\n (let ((?x6414 (ite $x4731 (_ bv576460752303357898 64) ?x3978)))\n (= ?x6414 ?x20256))))))))))))))))))))))))))))))\n(assert\n (let (($x19766 (= (_ bv0 64) unconstrained_ret_mbrtowc_707_64)))\n (not $x19766)))\n(assert\n (let (($x2651 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_707_64)))\n (not $x2651)))\n(assert\n (let (($x24749 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_707_64)))\n (not $x24749)))\n(assert\n (let ((?x2573 (bvadd unconstrained_ret_mbrtowc_625_64 unconstrained_ret_mbrtowc_707_64)))\n (let ((?x5395 (bvadd ?x2573 unconstrained_ret_mbrtowc_830_64)))\n (let (($x32044 (bvule strlen_594_64 ?x5395)))\n (not $x32044)))))\n(assert\n (let ((?x22169 (bvadd (_ bv576460752303357897 64) unconstrained_ret_mbrtowc_625_64)))\n (let ((?x22439 (bvadd ?x22169 unconstrained_ret_mbrtowc_707_64)))\n (let ((?x7002 (bvadd ?x22439 unconstrained_ret_mbrtowc_830_64)))\n (bvule (_ bv576460752303357897 64) ?x7002)))))\n(assert\n (let ((?x22169 (bvadd (_ bv576460752303357897 64) unconstrained_ret_mbrtowc_625_64)))\n (let ((?x22439 (bvadd ?x22169 unconstrained_ret_mbrtowc_707_64)))\n (let ((?x7002 (bvadd ?x22439 unconstrained_ret_mbrtowc_830_64)))\n (let ((?x41164 ((_ extract 63 59) ?x7002)))\n (= (_ bv0 5) ?x41164))))))\n(assert\n (let ((?x39944 ((_ extract 58 0) unconstrained_ret_mbrtowc_830_64)))\n (let ((?x8695 ((_ extract 58 0) unconstrained_ret_mbrtowc_707_64)))\n (let ((?x9007 (bvadd (bvadd (_ bv576460752303357897 59) ((_ extract 58 0) unconstrained_ret_mbrtowc_625_64)) ?x8695)))\n (let ((?x33726 (bvadd ?x9007 ?x39944)))\n (bvule ?x33726 (_ bv576460752303357906 59)))))))\n(assert\n (let ((?x22169 (bvadd (_ bv576460752303357897 64) unconstrained_ret_mbrtowc_625_64)))\n (let ((?x22439 (bvadd ?x22169 unconstrained_ret_mbrtowc_707_64)))\n (let ((?x7002 (bvadd ?x22439 unconstrained_ret_mbrtowc_830_64)))\n (let (($x41929 (and (distinct (_ bv576460752303357906 64) ?x7002) true)))\n (let (($x39357 (and (distinct (_ bv576460752303357905 64) ?x7002) true)))\n (let (($x31489 (and (distinct (_ bv576460752303357904 64) ?x7002) true)))\n (let (($x35026 (and (distinct (_ bv576460752303357897 64) ?x7002) true)))\n (let (($x19031 (and (distinct (_ bv576460752303357903 64) ?x7002) true)))\n (and $x19031 $x35026 $x31489 $x39357 $x41929))))))))))\n(assert\n (let ((?x22169 (bvadd (_ bv576460752303357897 64) unconstrained_ret_mbrtowc_625_64)))\n (let ((?x22439 (bvadd ?x22169 unconstrained_ret_mbrtowc_707_64)))\n (let ((?x7002 (bvadd ?x22439 unconstrained_ret_mbrtowc_830_64)))\n (and (distinct ?x7002 (_ bv576460752303357899 64)) true)))))\n(assert\n (let ((?x22169 (bvadd (_ bv576460752303357897 64) unconstrained_ret_mbrtowc_625_64)))\n (let ((?x22439 (bvadd ?x22169 unconstrained_ret_mbrtowc_707_64)))\n (let ((?x7002 (bvadd ?x22439 unconstrained_ret_mbrtowc_830_64)))\n (and (distinct ?x7002 (_ bv576460752303357902 64)) true)))))\n(assert\n (let ((?x22169 (bvadd (_ bv576460752303357897 64) unconstrained_ret_mbrtowc_625_64)))\n (let ((?x22439 (bvadd ?x22169 unconstrained_ret_mbrtowc_707_64)))\n (let ((?x7002 (bvadd ?x22439 unconstrained_ret_mbrtowc_830_64)))\n (and (distinct ?x7002 (_ bv576460752303357901 64)) true)))))\n(assert\n (let ((?x22169 (bvadd (_ bv576460752303357897 64) unconstrained_ret_mbrtowc_625_64)))\n (let ((?x22439 (bvadd ?x22169 unconstrained_ret_mbrtowc_707_64)))\n (let ((?x7002 (bvadd ?x22439 unconstrained_ret_mbrtowc_830_64)))\n (and (distinct ?x7002 (_ bv576460752303357898 64)) true)))))\n(assert\n (let ((?x22169 (bvadd (_ bv576460752303357897 64) unconstrained_ret_mbrtowc_625_64)))\n (let ((?x22439 (bvadd ?x22169 unconstrained_ret_mbrtowc_707_64)))\n (let ((?x7002 (bvadd ?x22439 unconstrained_ret_mbrtowc_830_64)))\n (and (distinct ?x7002 (_ bv576460752303357900 64)) true)))))\n(check-sat)\n",
    "time": 100.000723361969,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=13, tm_hour=4, tm_min=27, tm_sec=10, tm_wday=6, tm_yday=348, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            12.876591205596924
        ]
    }
}