{
    "filename": "runcon",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun unconstrained_ret_mbrtowc_1003_64 () (_ BitVec 64))\n(declare-fun sym_argv_0_80 () (_ BitVec 80))\n(declare-fun strlen_890_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_905_64 () (_ BitVec 64))\n(assert\n (let (($x24272 (= (_ bv0 64) unconstrained_ret_mbrtowc_1003_64)))\n (not $x24272)))\n(assert\n (let (($x2310 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1003_64)))\n (not $x2310)))\n(assert\n (let (($x26690 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1003_64)))\n (not $x26690)))\n(assert\n (let ((?x168 ((_ extract 55 55) sym_argv_0_80)))\n (= (_ bv0 1) ?x168)))\n(assert\n (let ((?x178 ((_ extract 47 47) sym_argv_0_80)))\n (= (_ bv0 1) ?x178)))\n(assert\n (let ((?x188 ((_ extract 39 39) sym_argv_0_80)))\n (= (_ bv0 1) ?x188)))\n(assert\n (let ((?x198 ((_ extract 31 31) sym_argv_0_80)))\n (= (_ bv0 1) ?x198)))\n(assert\n (let ((?x208 ((_ extract 23 23) sym_argv_0_80)))\n (= (_ bv0 1) ?x208)))\n(assert\n (let ((?x218 ((_ extract 15 15) sym_argv_0_80)))\n (= (_ bv0 1) ?x218)))\n(assert\n (let ((?x462 ((_ extract 7 7) sym_argv_0_80)))\n (= (_ bv0 1) ?x462)))\n(assert\n (let ((?x170 ((_ extract 54 48) sym_argv_0_80)))\n (bvule ?x170 (_ bv126 7))))\n(assert\n (let ((?x180 ((_ extract 46 40) sym_argv_0_80)))\n (bvule ?x180 (_ bv126 7))))\n(assert\n (let ((?x190 ((_ extract 38 32) sym_argv_0_80)))\n (bvule ?x190 (_ bv126 7))))\n(assert\n (let ((?x200 ((_ extract 30 24) sym_argv_0_80)))\n (bvule ?x200 (_ bv126 7))))\n(assert\n (let ((?x210 ((_ extract 22 16) sym_argv_0_80)))\n (bvule ?x210 (_ bv126 7))))\n(assert\n (let ((?x222 ((_ extract 14 8) sym_argv_0_80)))\n (bvule ?x222 (_ bv126 7))))\n(assert\n (let ((?x464 ((_ extract 6 0) sym_argv_0_80)))\n (bvule ?x464 (_ bv126 7))))\n(assert\n (let ((?x16 ((_ extract 79 72) sym_argv_0_80)))\n (= (_ bv11 8) ?x16)))\n(assert\n (let ((?x22107 ((_ extract 69 64) sym_argv_0_80)))\n (let (($x22513 (bvule ?x22107 (_ bv39 6))))\n (let ((?x19185 ((_ extract 71 70) sym_argv_0_80)))\n (let (($x21542 (= (_ bv0 2) ?x19185)))\n (let (($x21864 (and $x21542 $x22513)))\n (let ((?x20050 (ite $x21864 (_ bv2 8) (_ bv1 8))))\n (let (($x20018 (= (_ bv0 8) ?x20050)))\n (not $x20018)))))))))\n(assert\n (let ((?x24 ((_ extract 71 64) sym_argv_0_80)))\n (= (_ bv65 8) ?x24)))\n(assert\n (let ((?x19994 ((_ extract 61 56) sym_argv_0_80)))\n (let (($x29148 (bvule ?x19994 (_ bv39 6))))\n (let ((?x4783 ((_ extract 63 62) sym_argv_0_80)))\n (let (($x3251 (= (_ bv0 2) ?x4783)))\n (let (($x23164 (and $x3251 $x29148)))\n (let ((?x24628 (ite $x23164 (_ bv2 8) (_ bv1 8))))\n (let (($x7965 (= (_ bv0 8) ?x24628)))\n (not $x7965)))))))))\n(assert\n (let ((?x18 ((_ extract 63 56) sym_argv_0_80)))\n (= (_ bv64 8) ?x18)))\n(assert\n (let ((?x10429 (bvadd (_ bv576460752303357897 64) strlen_890_64)))\n (let ((?x35 ((_ extract 7 0) sym_argv_0_80)))\n (let (($x2192 (= (_ bv0 8) ?x35)))\n (let ((?x5328 (ite $x2192 (_ bv576460752303357906 64) (_ bv576460752303357907 64))))\n (let ((?x19 ((_ extract 15 8) sym_argv_0_80)))\n (let (($x6030 (= (_ bv0 8) ?x19)))\n (let ((?x3791 (ite $x6030 (_ bv576460752303357905 64) ?x5328)))\n (let ((?x21 ((_ extract 23 16) sym_argv_0_80)))\n (let (($x2984 (= (_ bv0 8) ?x21)))\n (let ((?x5466 (ite $x2984 (_ bv576460752303357904 64) ?x3791)))\n (let ((?x23 ((_ extract 31 24) sym_argv_0_80)))\n (let (($x5688 (= (_ bv0 8) ?x23)))\n (let ((?x4287 (ite $x5688 (_ bv576460752303357903 64) ?x5466)))\n (let ((?x27 ((_ extract 39 32) sym_argv_0_80)))\n (let (($x5824 (= (_ bv0 8) ?x27)))\n (let ((?x5897 (ite $x5824 (_ bv576460752303357902 64) ?x4287)))\n (let ((?x29 ((_ extract 47 40) sym_argv_0_80)))\n (let (($x4736 (= (_ bv0 8) ?x29)))\n (let ((?x5970 (ite $x4736 (_ bv576460752303357901 64) ?x5897)))\n (let ((?x31 ((_ extract 55 48) sym_argv_0_80)))\n (let (($x6462 (= (_ bv0 8) ?x31)))\n (let ((?x2423 (ite $x6462 (_ bv576460752303357900 64) ?x5970)))\n (= ?x2423 ?x10429))))))))))))))))))))))))\n(assert\n (let (($x3937 (= (_ bv0 64) unconstrained_ret_mbrtowc_905_64)))\n (not $x3937)))\n(assert\n (let (($x4050 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_905_64)))\n (not $x4050)))\n(assert\n (let (($x28573 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_905_64)))\n (not $x28573)))\n(assert\n (let ((?x39622 (bvadd (_ bv2 64) unconstrained_ret_mbrtowc_905_64)))\n (let ((?x24569 (bvadd ?x39622 unconstrained_ret_mbrtowc_1003_64)))\n (let (($x26239 (bvule strlen_890_64 ?x24569)))\n (not $x26239)))))\n(assert\n (let ((?x46980 (bvadd (_ bv576460752303357899 64) unconstrained_ret_mbrtowc_905_64)))\n (let ((?x60973 (bvadd ?x46980 unconstrained_ret_mbrtowc_1003_64)))\n (bvule (_ bv576460752303357897 64) ?x60973))))\n(assert\n (let ((?x46980 (bvadd (_ bv576460752303357899 64) unconstrained_ret_mbrtowc_905_64)))\n (let ((?x60973 (bvadd ?x46980 unconstrained_ret_mbrtowc_1003_64)))\n (let ((?x14533 ((_ extract 63 59) ?x60973)))\n (= (_ bv0 5) ?x14533)))))\n(assert\n (let ((?x39828 ((_ extract 58 0) unconstrained_ret_mbrtowc_1003_64)))\n (let ((?x54899 ((_ extract 58 0) unconstrained_ret_mbrtowc_905_64)))\n (let ((?x15272 (bvadd (_ bv576460752303357899 59) ?x54899)))\n (let ((?x60851 (bvadd ?x15272 ?x39828)))\n (bvule ?x60851 (_ bv576460752303357906 59)))))))\n(assert\n (let ((?x31969 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1003_64)))\n (let ((?x61543 (bvadd (_ bv1 64) ?x31969)))\n (let (($x28724 (= unconstrained_ret_mbrtowc_905_64 ?x61543)))\n (let ((?x27658 (bvadd (_ bv5 64) ?x31969)))\n (let (($x27932 (= unconstrained_ret_mbrtowc_905_64 ?x27658)))\n (let (($x1066 (or $x27932 $x28724)))\n (let ((?x63774 (bvadd (_ bv2 64) ?x31969)))\n (let (($x29507 (= unconstrained_ret_mbrtowc_905_64 ?x63774)))\n (let (($x2397 (or $x29507 $x1066)))\n (let ((?x62444 (bvadd (_ bv4 64) ?x31969)))\n (let (($x31609 (= unconstrained_ret_mbrtowc_905_64 ?x62444)))\n (let (($x46995 (or $x31609 $x2397)))\n (let ((?x43935 (bvadd (_ bv6 64) ?x31969)))\n (let (($x34310 (= unconstrained_ret_mbrtowc_905_64 ?x43935)))\n (let (($x36163 (or $x34310 $x46995)))\n (let ((?x6119 (bvadd (_ bv18446744073709551615 64) ?x31969)))\n (let (($x43204 (= unconstrained_ret_mbrtowc_905_64 ?x6119)))\n (let (($x23449 (or $x43204 $x36163)))\n (let ((?x6934 (bvadd (_ bv7 64) ?x31969)))\n (let (($x45159 (= unconstrained_ret_mbrtowc_905_64 ?x6934)))\n (let (($x17004 (or $x45159 $x23449)))\n (let ((?x47831 (bvadd (_ bv18446744073709551614 64) ?x31969)))\n (let (($x49474 (= unconstrained_ret_mbrtowc_905_64 ?x47831)))\n (let (($x51744 (or $x49474 $x17004)))\n (let (($x51302 (= unconstrained_ret_mbrtowc_905_64 ?x31969)))\n (let (($x21994 (or $x51302 $x51744)))\n (let ((?x50942 (bvadd (_ bv3 64) ?x31969)))\n (let (($x55136 (= unconstrained_ret_mbrtowc_905_64 ?x50942)))\n (or $x55136 $x21994))))))))))))))))))))))))))))))\n(assert\n (let ((?x31969 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1003_64)))\n (let ((?x47831 (bvadd (_ bv18446744073709551614 64) ?x31969)))\n (let (($x49474 (= unconstrained_ret_mbrtowc_905_64 ?x47831)))\n (let ((?x46253 (ite $x49474 (_ bv11 8) (_ bv190 8))))\n (let ((?x35 ((_ extract 7 0) sym_argv_0_80)))\n (let ((?x6934 (bvadd (_ bv7 64) ?x31969)))\n (let (($x45159 (= unconstrained_ret_mbrtowc_905_64 ?x6934)))\n (let ((?x6829 (ite $x45159 ?x35 ?x46253)))\n (let ((?x6119 (bvadd (_ bv18446744073709551615 64) ?x31969)))\n (let (($x43204 (= unconstrained_ret_mbrtowc_905_64 ?x6119)))\n (let ((?x59241 (ite $x43204 (_ bv65 8) ?x6829)))\n (let ((?x19 ((_ extract 15 8) sym_argv_0_80)))\n (let ((?x43935 (bvadd (_ bv6 64) ?x31969)))\n (let (($x34310 (= unconstrained_ret_mbrtowc_905_64 ?x43935)))\n (let ((?x54214 (ite $x34310 ?x19 ?x59241)))\n (let (($x51302 (= unconstrained_ret_mbrtowc_905_64 ?x31969)))\n (let ((?x28065 (ite $x51302 (_ bv64 8) ?x54214)))\n (let ((?x21 ((_ extract 23 16) sym_argv_0_80)))\n (let ((?x27658 (bvadd (_ bv5 64) ?x31969)))\n (let (($x27932 (= unconstrained_ret_mbrtowc_905_64 ?x27658)))\n (let ((?x57032 (ite $x27932 ?x21 ?x28065)))\n (let ((?x31 ((_ extract 55 48) sym_argv_0_80)))\n (let ((?x61543 (bvadd (_ bv1 64) ?x31969)))\n (let (($x28724 (= unconstrained_ret_mbrtowc_905_64 ?x61543)))\n (let ((?x28113 (ite $x28724 ?x31 ?x57032)))\n (let ((?x23 ((_ extract 31 24) sym_argv_0_80)))\n (let ((?x62444 (bvadd (_ bv4 64) ?x31969)))\n (let (($x31609 (= unconstrained_ret_mbrtowc_905_64 ?x62444)))\n (let ((?x29192 (ite $x31609 ?x23 ?x28113)))\n (let ((?x29 ((_ extract 47 40) sym_argv_0_80)))\n (let ((?x63774 (bvadd (_ bv2 64) ?x31969)))\n (let (($x29507 (= unconstrained_ret_mbrtowc_905_64 ?x63774)))\n (let ((?x28820 (ite $x29507 ?x29 ?x29192)))\n (let ((?x27 ((_ extract 39 32) sym_argv_0_80)))\n (let ((?x50942 (bvadd (_ bv3 64) ?x31969)))\n (let (($x55136 (= unconstrained_ret_mbrtowc_905_64 ?x50942)))\n (let ((?x61475 (ite $x55136 ?x27 ?x28820)))\n (let (($x49317 (= (_ bv0 8) ?x61475)))\n (not $x49317))))))))))))))))))))))))))))))))))))))))\n(assert\n (let ((?x44726 (bvadd (_ bv3 64) unconstrained_ret_mbrtowc_905_64)))\n (let ((?x2190 (bvadd ?x44726 unconstrained_ret_mbrtowc_1003_64)))\n (let (($x27770 (bvule strlen_890_64 ?x2190)))\n (not $x27770)))))\n(assert\n (let ((?x28355 (bvadd (_ bv576460752303357900 64) unconstrained_ret_mbrtowc_905_64)))\n (let ((?x571 (bvadd ?x28355 unconstrained_ret_mbrtowc_1003_64)))\n (bvule (_ bv576460752303357898 64) ?x571))))\n(assert\n (let ((?x28355 (bvadd (_ bv576460752303357900 64) unconstrained_ret_mbrtowc_905_64)))\n (let ((?x571 (bvadd ?x28355 unconstrained_ret_mbrtowc_1003_64)))\n (let ((?x27468 ((_ extract 63 59) ?x571)))\n (= (_ bv0 5) ?x27468)))))\n(assert\n (let ((?x39828 ((_ extract 58 0) unconstrained_ret_mbrtowc_1003_64)))\n (let ((?x54899 ((_ extract 58 0) unconstrained_ret_mbrtowc_905_64)))\n (let ((?x14791 (bvadd (_ bv576460752303357900 59) ?x54899)))\n (let ((?x55285 (bvadd ?x14791 ?x39828)))\n (bvule ?x55285 (_ bv576460752303357906 59)))))))\n(assert\n (let ((?x63666 (bvadd unconstrained_ret_mbrtowc_905_64 unconstrained_ret_mbrtowc_1003_64)))\n (let ((?x37694 (bvadd ?x63666 (_ bv576460752303357900 64))))\n (let (($x62490 (and (distinct (_ bv576460752303357902 64) ?x37694) true)))\n (let (($x63354 (and (distinct (_ bv576460752303357901 64) ?x37694) true)))\n (let (($x57806 (and (distinct (_ bv576460752303357906 64) ?x37694) true)))\n (let (($x27740 (and (distinct (_ bv576460752303357900 64) ?x37694) true)))\n (let (($x19393 (and (distinct (_ bv576460752303357905 64) ?x37694) true)))\n (let (($x56730 (and (distinct (_ bv576460752303357899 64) ?x37694) true)))\n (let (($x61009 (and (distinct (_ bv576460752303357904 64) ?x37694) true)))\n (let (($x60953 (and (distinct (_ bv576460752303357898 64) ?x37694) true)))\n (let (($x6148 (and (distinct (_ bv576460752303357903 64) ?x37694) true)))\n (and $x6148 $x60953 $x61009 $x56730 $x19393 $x27740 $x57806 $x63354 $x62490)))))))))))))\n(check-sat)\n",
    "time": 1.3235187530517578,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=13, tm_hour=5, tm_min=2, tm_sec=43, tm_wday=6, tm_yday=348, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            0.2736365795135498
        ]
    }
}