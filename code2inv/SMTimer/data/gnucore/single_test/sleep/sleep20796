{
    "filename": "sleep",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun sym_argv_0_80 () (_ BitVec 80))\n(declare-fun strlen_1246_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_1335_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_1260_64 () (_ BitVec 64))\n(assert\n (let ((?x479 ((_ extract 55 55) sym_argv_0_80)))\n (= (_ bv0 1) ?x479)))\n(assert\n (let ((?x190 ((_ extract 47 47) sym_argv_0_80)))\n (= (_ bv0 1) ?x190)))\n(assert\n (let ((?x522 ((_ extract 39 39) sym_argv_0_80)))\n (= (_ bv0 1) ?x522)))\n(assert\n (let ((?x471 ((_ extract 31 31) sym_argv_0_80)))\n (= (_ bv0 1) ?x471)))\n(assert\n (let ((?x275 ((_ extract 23 23) sym_argv_0_80)))\n (= (_ bv0 1) ?x275)))\n(assert\n (let ((?x672 ((_ extract 15 15) sym_argv_0_80)))\n (= (_ bv0 1) ?x672)))\n(assert\n (let ((?x288 ((_ extract 7 7) sym_argv_0_80)))\n (= (_ bv0 1) ?x288)))\n(assert\n (let ((?x323 ((_ extract 54 48) sym_argv_0_80)))\n (bvule ?x323 (_ bv126 7))))\n(assert\n (let ((?x483 ((_ extract 46 40) sym_argv_0_80)))\n (bvule ?x483 (_ bv126 7))))\n(assert\n (let ((?x544 ((_ extract 38 32) sym_argv_0_80)))\n (bvule ?x544 (_ bv126 7))))\n(assert\n (let ((?x463 ((_ extract 30 24) sym_argv_0_80)))\n (bvule ?x463 (_ bv126 7))))\n(assert\n (let ((?x424 ((_ extract 22 16) sym_argv_0_80)))\n (bvule ?x424 (_ bv126 7))))\n(assert\n (let ((?x352 ((_ extract 14 8) sym_argv_0_80)))\n (bvule ?x352 (_ bv126 7))))\n(assert\n (let ((?x339 ((_ extract 6 0) sym_argv_0_80)))\n (bvule ?x339 (_ bv126 7))))\n(assert\n (let ((?x16 ((_ extract 79 72) sym_argv_0_80)))\n (= (_ bv39 8) ?x16)))\n(assert\n (let ((?x24 ((_ extract 71 64) sym_argv_0_80)))\n (= (_ bv11 8) ?x24)))\n(assert\n (let ((?x1041146 ((_ extract 61 56) sym_argv_0_80)))\n (let (($x1519808 (bvule ?x1041146 (_ bv39 6))))\n (let ((?x1249045 ((_ extract 63 62) sym_argv_0_80)))\n (let (($x909722 (= (_ bv0 2) ?x1249045)))\n (let (($x309817 (and $x909722 $x1519808)))\n (let ((?x169964 (ite $x309817 (_ bv2 8) (_ bv1 8))))\n (let (($x1247092 (= (_ bv0 8) ?x169964)))\n (not $x1247092)))))))))\n(assert\n (let ((?x18 ((_ extract 63 56) sym_argv_0_80)))\n (= (_ bv64 8) ?x18)))\n(assert\n (let ((?x953324 (bvadd (_ bv576460752303357896 64) strlen_1246_64)))\n (let ((?x35 ((_ extract 7 0) sym_argv_0_80)))\n (let (($x598480 (= (_ bv0 8) ?x35)))\n (let ((?x936069 (ite $x598480 (_ bv576460752303357905 64) (_ bv576460752303357906 64))))\n (let ((?x19 ((_ extract 15 8) sym_argv_0_80)))\n (let (($x713291 (= (_ bv0 8) ?x19)))\n (let ((?x354272 (ite $x713291 (_ bv576460752303357904 64) ?x936069)))\n (let ((?x21 ((_ extract 23 16) sym_argv_0_80)))\n (let (($x634450 (= (_ bv0 8) ?x21)))\n (let ((?x1593229 (ite $x634450 (_ bv576460752303357903 64) ?x354272)))\n (let ((?x23 ((_ extract 31 24) sym_argv_0_80)))\n (let (($x1584337 (= (_ bv0 8) ?x23)))\n (let ((?x1509636 (ite $x1584337 (_ bv576460752303357902 64) ?x1593229)))\n (let ((?x27 ((_ extract 39 32) sym_argv_0_80)))\n (let (($x1592305 (= (_ bv0 8) ?x27)))\n (let ((?x475932 (ite $x1592305 (_ bv576460752303357901 64) ?x1509636)))\n (let ((?x29 ((_ extract 47 40) sym_argv_0_80)))\n (let (($x1670495 (= (_ bv0 8) ?x29)))\n (let ((?x1181694 (ite $x1670495 (_ bv576460752303357900 64) ?x475932)))\n (let ((?x31 ((_ extract 55 48) sym_argv_0_80)))\n (let (($x1620016 (= (_ bv0 8) ?x31)))\n (let ((?x1571142 (ite $x1620016 (_ bv576460752303357899 64) ?x1181694)))\n (= ?x1571142 ?x953324))))))))))))))))))))))))\n(assert\n (let (($x901331 (= (_ bv0 64) unconstrained_ret_mbrtowc_1335_64)))\n (not $x901331)))\n(assert\n (let (($x349881 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1335_64)))\n (not $x349881)))\n(assert\n (let (($x611762 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1335_64)))\n (not $x611762)))\n(assert\n (let (($x738168 (= (_ bv0 64) unconstrained_ret_mbrtowc_1260_64)))\n (not $x738168)))\n(assert\n (let (($x1492945 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1260_64)))\n (not $x1492945)))\n(assert\n (let (($x344790 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1260_64)))\n (not $x344790)))\n(assert\n (let ((?x886970 (bvadd (_ bv2 64) unconstrained_ret_mbrtowc_1260_64)))\n (let ((?x880155 (bvadd ?x886970 unconstrained_ret_mbrtowc_1335_64)))\n (let (($x1276181 (bvule strlen_1246_64 ?x880155)))\n (not $x1276181)))))\n(assert\n (let ((?x989501 (bvadd (_ bv576460752303357898 64) unconstrained_ret_mbrtowc_1260_64)))\n (let ((?x1178541 (bvadd ?x989501 unconstrained_ret_mbrtowc_1335_64)))\n (bvule (_ bv576460752303357896 64) ?x1178541))))\n(assert\n (let ((?x989501 (bvadd (_ bv576460752303357898 64) unconstrained_ret_mbrtowc_1260_64)))\n (let ((?x1178541 (bvadd ?x989501 unconstrained_ret_mbrtowc_1335_64)))\n (let ((?x392899 ((_ extract 63 59) ?x1178541)))\n (= (_ bv0 5) ?x392899)))))\n(assert\n (let ((?x701198 ((_ extract 58 0) unconstrained_ret_mbrtowc_1335_64)))\n (let ((?x214292 ((_ extract 58 0) unconstrained_ret_mbrtowc_1260_64)))\n (let ((?x1436406 (bvadd (_ bv576460752303357898 59) ?x214292)))\n (let ((?x1057258 (bvadd ?x1436406 ?x701198)))\n (bvule ?x1057258 (_ bv576460752303357905 59)))))))\n(assert\n (let ((?x510703 (bvadd unconstrained_ret_mbrtowc_1260_64 unconstrained_ret_mbrtowc_1335_64)))\n (let ((?x1711645 (bvadd ?x510703 (_ bv576460752303357898 64))))\n (let (($x1160500 (and (distinct (_ bv576460752303357905 64) ?x1711645) true)))\n (let (($x655253 (and (distinct (_ bv576460752303357904 64) ?x1711645) true)))\n (let (($x795464 (and (distinct (_ bv576460752303357898 64) ?x1711645) true)))\n (let (($x357582 (and (distinct (_ bv576460752303357896 64) ?x1711645) true)))\n (let (($x661156 (and (distinct (_ bv576460752303357903 64) ?x1711645) true)))\n (and $x661156 $x357582 $x795464 $x655253 $x1160500)))))))))\n(assert\n (let ((?x510703 (bvadd unconstrained_ret_mbrtowc_1260_64 unconstrained_ret_mbrtowc_1335_64)))\n (let ((?x1711645 (bvadd ?x510703 (_ bv576460752303357898 64))))\n (and (distinct ?x1711645 (_ bv576460752303357902 64)) true))))\n(assert\n (let ((?x510703 (bvadd unconstrained_ret_mbrtowc_1260_64 unconstrained_ret_mbrtowc_1335_64)))\n (let ((?x1711645 (bvadd ?x510703 (_ bv576460752303357898 64))))\n (and (distinct ?x1711645 (_ bv576460752303357900 64)) true))))\n(assert\n (let ((?x510703 (bvadd unconstrained_ret_mbrtowc_1260_64 unconstrained_ret_mbrtowc_1335_64)))\n (let ((?x1711645 (bvadd ?x510703 (_ bv576460752303357898 64))))\n (and (distinct ?x1711645 (_ bv576460752303357899 64)) true))))\n(assert\n (let ((?x510703 (bvadd unconstrained_ret_mbrtowc_1260_64 unconstrained_ret_mbrtowc_1335_64)))\n (let ((?x1711645 (bvadd ?x510703 (_ bv576460752303357898 64))))\n (and (distinct ?x1711645 (_ bv576460752303357901 64)) true))))\n(assert\n (let ((?x510703 (bvadd unconstrained_ret_mbrtowc_1260_64 unconstrained_ret_mbrtowc_1335_64)))\n (let ((?x1711645 (bvadd ?x510703 (_ bv576460752303357898 64))))\n (and (distinct ?x1711645 (_ bv576460752303357897 64)) true))))\n(check-sat)\n",
    "time": 1.0036520957946777,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=2, tm_hour=10, tm_min=29, tm_sec=56, tm_wday=2, tm_yday=337, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            0.9759972095489502
        ]
    }
}