{
    "filename": "mkfifo",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun unconstrained_ret_mbrtowc_1732_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_1454_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_1584_64 () (_ BitVec 64))\n(assert\n (let (($x16748 (= (_ bv0 64) unconstrained_ret_mbrtowc_1732_64)))\n (not $x16748)))\n(assert\n (let (($x32096 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1732_64)))\n (not $x32096)))\n(assert\n (let (($x34493 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1732_64)))\n (not $x34493)))\n(assert\n (let (($x3423 (= (_ bv0 64) unconstrained_ret_mbrtowc_1454_64)))\n (not $x3423)))\n(assert\n (let (($x3379 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1454_64)))\n (not $x3379)))\n(assert\n (let (($x3416 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1454_64)))\n (not $x3416)))\n(assert\n (let (($x3424 (= (_ bv0 64) unconstrained_ret_mbrtowc_1584_64)))\n (not $x3424)))\n(assert\n (let (($x3058 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1584_64)))\n (not $x3058)))\n(assert\n (let (($x3354 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1584_64)))\n (not $x3354)))\n(assert\n (let ((?x26448 (bvadd (_ bv1 64) unconstrained_ret_mbrtowc_1454_64)))\n (let ((?x27630 (bvadd ?x26448 unconstrained_ret_mbrtowc_1584_64)))\n (let ((?x17949 (bvadd ?x27630 unconstrained_ret_mbrtowc_1732_64)))\n (let (($x10731 (bvule (_ bv2 64) ?x17949)))\n (not $x10731))))))\n(assert\n (let ((?x4781 (bvadd (_ bv576460752303357912 64) unconstrained_ret_mbrtowc_1454_64)))\n (let ((?x29023 (bvadd ?x4781 unconstrained_ret_mbrtowc_1584_64)))\n (let ((?x13785 (bvadd ?x29023 unconstrained_ret_mbrtowc_1732_64)))\n (bvule (_ bv576460752303357911 64) ?x13785)))))\n(assert\n (let ((?x4781 (bvadd (_ bv576460752303357912 64) unconstrained_ret_mbrtowc_1454_64)))\n (let ((?x29023 (bvadd ?x4781 unconstrained_ret_mbrtowc_1584_64)))\n (let ((?x13785 (bvadd ?x29023 unconstrained_ret_mbrtowc_1732_64)))\n (let ((?x29808 ((_ extract 63 59) ?x13785)))\n (= (_ bv0 5) ?x29808))))))\n(assert\n (let ((?x21698 ((_ extract 58 0) unconstrained_ret_mbrtowc_1732_64)))\n (let ((?x27917 ((_ extract 58 0) unconstrained_ret_mbrtowc_1584_64)))\n (let ((?x2681 (bvadd (bvadd (_ bv576460752303357912 59) ((_ extract 58 0) unconstrained_ret_mbrtowc_1454_64)) ?x27917)))\n (let ((?x14329 (bvadd ?x2681 ?x21698)))\n (bvule ?x14329 (_ bv576460752303357912 59)))))))\n(assert\n (let ((?x13514 (bvadd unconstrained_ret_mbrtowc_1454_64 unconstrained_ret_mbrtowc_1584_64)))\n (let ((?x19594 (bvadd ?x13514 unconstrained_ret_mbrtowc_1732_64)))\n (let ((?x15122 (bvadd ?x19594 (_ bv576460752303357912 64))))\n (let (($x16384 (and (distinct (_ bv576460752303357912 64) ?x15122) true)))\n (let (($x19666 (and (distinct (_ bv576460752303357911 64) ?x15122) true)))\n (and $x19666 $x16384)))))))\n(check-sat)\n",
    "time": 4.944473505020142,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=1, tm_hour=22, tm_min=1, tm_sec=2, tm_wday=1, tm_yday=336, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            0.6837360858917236
        ]
    }
}