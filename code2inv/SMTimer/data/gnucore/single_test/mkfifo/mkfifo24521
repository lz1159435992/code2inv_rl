{
    "filename": "mkfifo",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun unconstrained_ret_mbrtowc_1306_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_1594_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_1457_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_1739_64 () (_ BitVec 64))\n(assert\n (let (($x207 (= (_ bv0 64) unconstrained_ret_mbrtowc_1306_64)))\n (not $x207)))\n(assert\n (let (($x12106 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1306_64)))\n (not $x12106)))\n(assert\n (let (($x236 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1306_64)))\n (not $x236)))\n(assert\n (let (($x26059 (= (_ bv0 64) unconstrained_ret_mbrtowc_1594_64)))\n (not $x26059)))\n(assert\n (let (($x17608 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1594_64)))\n (not $x17608)))\n(assert\n (let (($x32386 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1594_64)))\n (not $x32386)))\n(assert\n (let (($x95 (= (_ bv0 64) unconstrained_ret_mbrtowc_1457_64)))\n (not $x95)))\n(assert\n (let (($x231 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1457_64)))\n (not $x231)))\n(assert\n (let (($x178 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1457_64)))\n (not $x178)))\n(assert\n (let (($x7612 (= (_ bv0 64) unconstrained_ret_mbrtowc_1739_64)))\n (not $x7612)))\n(assert\n (let (($x7583 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1739_64)))\n (not $x7583)))\n(assert\n (let (($x33083 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1739_64)))\n (not $x33083)))\n(assert\n (let ((?x17456 (bvadd (_ bv1 64) unconstrained_ret_mbrtowc_1306_64)))\n (let ((?x18186 (bvadd ?x17456 unconstrained_ret_mbrtowc_1457_64)))\n (let ((?x26375 (bvadd ?x18186 unconstrained_ret_mbrtowc_1594_64)))\n (let ((?x20493 (bvadd ?x26375 unconstrained_ret_mbrtowc_1739_64)))\n (let (($x7072 (bvule (_ bv2 64) ?x20493)))\n (not $x7072)))))))\n(assert\n (let ((?x17251 (bvadd (_ bv576460752303357909 64) unconstrained_ret_mbrtowc_1306_64)))\n (let ((?x26320 (bvadd ?x17251 unconstrained_ret_mbrtowc_1457_64)))\n (let ((?x24556 (bvadd ?x26320 unconstrained_ret_mbrtowc_1594_64)))\n (let ((?x8686 (bvadd ?x24556 unconstrained_ret_mbrtowc_1739_64)))\n (bvule (_ bv576460752303357908 64) ?x8686))))))\n(assert\n (let ((?x17251 (bvadd (_ bv576460752303357909 64) unconstrained_ret_mbrtowc_1306_64)))\n (let ((?x26320 (bvadd ?x17251 unconstrained_ret_mbrtowc_1457_64)))\n (let ((?x24556 (bvadd ?x26320 unconstrained_ret_mbrtowc_1594_64)))\n (let ((?x8686 (bvadd ?x24556 unconstrained_ret_mbrtowc_1739_64)))\n (let ((?x18329 ((_ extract 63 59) ?x8686)))\n (= (_ bv0 5) ?x18329)))))))\n(assert\n (let ((?x23104 ((_ extract 58 0) unconstrained_ret_mbrtowc_1739_64)))\n (let ((?x19062 ((_ extract 58 0) unconstrained_ret_mbrtowc_1594_64)))\n (let ((?x22524 ((_ extract 58 0) unconstrained_ret_mbrtowc_1457_64)))\n (let ((?x23795 (bvadd (bvadd (_ bv576460752303357909 59) ((_ extract 58 0) unconstrained_ret_mbrtowc_1306_64)) ?x22524)))\n (let ((?x10985 (bvadd ?x23795 ?x19062)))\n (let ((?x2722 (bvadd ?x10985 ?x23104)))\n (bvule ?x2722 (_ bv576460752303357909 59)))))))))\n(assert\n (let ((?x20914 (bvadd unconstrained_ret_mbrtowc_1306_64 unconstrained_ret_mbrtowc_1457_64)))\n (let ((?x26180 (bvadd ?x20914 unconstrained_ret_mbrtowc_1594_64)))\n (let ((?x19838 (bvadd ?x26180 unconstrained_ret_mbrtowc_1739_64)))\n (let ((?x24749 (bvadd ?x19838 (_ bv576460752303357909 64))))\n (let (($x32077 (and (distinct (_ bv576460752303357908 64) ?x24749) true)))\n (let (($x37786 (and (distinct (_ bv576460752303357909 64) ?x24749) true)))\n (and $x37786 $x32077))))))))\n(check-sat)\n",
    "time": 74.23768782615662,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=1, tm_hour=22, tm_min=16, tm_sec=4, tm_wday=1, tm_yday=336, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            24.28557062149048
        ]
    }
}