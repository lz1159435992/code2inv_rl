{
    "filename": "mkfifo",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun sym_argv2_1_16 () (_ BitVec 16))\n(declare-fun strlen_1118_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_1140_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_1273_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_1421_64 () (_ BitVec 64))\n(assert\n (let ((?x4552 ((_ extract 13 8) sym_argv2_1_16)))\n (let (($x4553 (bvule ?x4552 (_ bv39 6))))\n (let ((?x4550 ((_ extract 15 14) sym_argv2_1_16)))\n (let (($x4219 (= (_ bv0 2) ?x4550)))\n (let (($x2445 (and $x4219 $x4553)))\n (let ((?x2771 (ite $x2445 (_ bv2 8) (_ bv1 8))))\n (let ((?x2766 ((_ extract 15 8) sym_argv2_1_16)))\n (let (($x5517 (bvule (_ bv39 8) ?x2766)))\n (let ((?x1486 (ite $x5517 ?x2771 (_ bv255 8))))\n (let (($x3393 (= (_ bv39 8) ?x2766)))\n (let ((?x1039 (ite $x3393 (_ bv0 8) ?x1486)))\n (let (($x2854 (= (_ bv0 8) ?x1039)))\n (let (($x4526 (not $x2854)))\n (let (($x5398 (or $x3393 $x5517)))\n (let ((?x4107 (ite $x5398 (_ bv0 8) (_ bv255 8))))\n (let (($x4232 (= (_ bv0 8) ?x4107)))\n (let (($x4648 (not $x4232)))\n (or $x4648 $x4526)))))))))))))))))))\n(assert\n (let ((?x4076 ((_ extract 14 8) sym_argv2_1_16)))\n (let (($x4706 (bvule ?x4076 (_ bv126 7))))\n (let (($x3085 (not $x4706)))\n (let ((?x2956 ((_ extract 15 15) sym_argv2_1_16)))\n (let (($x5210 (= (_ bv0 1) ?x2956)))\n (let (($x5587 (not $x5210)))\n (or $x5587 $x3085))))))))\n(assert\n (let ((?x10733 (bvadd (_ bv576460752303357908 64) strlen_1118_64)))\n (let ((?x6436 ((_ extract 7 0) sym_argv2_1_16)))\n (let (($x5894 (= (_ bv0 8) ?x6436)))\n (let ((?x5409 (ite $x5894 (_ bv576460752303357909 64) (_ bv576460752303357910 64))))\n (let ((?x2766 ((_ extract 15 8) sym_argv2_1_16)))\n (let (($x1742 (= (_ bv0 8) ?x2766)))\n (let ((?x7020 (ite $x1742 (_ bv576460752303357908 64) ?x5409)))\n (= ?x7020 ?x10733)))))))))\n(assert\n (let (($x5209 (= (_ bv0 64) unconstrained_ret_mbrtowc_1140_64)))\n (not $x5209)))\n(assert\n (let (($x12925 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1140_64)))\n (not $x12925)))\n(assert\n (let (($x5601 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1140_64)))\n (not $x5601)))\n(assert\n (let (($x6643 (= (_ bv0 64) unconstrained_ret_mbrtowc_1273_64)))\n (not $x6643)))\n(assert\n (let (($x10344 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1273_64)))\n (not $x10344)))\n(assert\n (let (($x6871 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1273_64)))\n (not $x6871)))\n(assert\n (let (($x36721 (= (_ bv0 64) unconstrained_ret_mbrtowc_1421_64)))\n (not $x36721)))\n(assert\n (let (($x35082 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1421_64)))\n (not $x35082)))\n(assert\n (let (($x22341 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1421_64)))\n (not $x22341)))\n(assert\n (let ((?x10211 (bvadd unconstrained_ret_mbrtowc_1140_64 unconstrained_ret_mbrtowc_1273_64)))\n (let ((?x25024 (bvadd ?x10211 unconstrained_ret_mbrtowc_1421_64)))\n (let (($x26015 (bvule strlen_1118_64 ?x25024)))\n (not $x26015)))))\n(assert\n (let ((?x5484 (bvadd (_ bv576460752303357908 64) unconstrained_ret_mbrtowc_1140_64)))\n (let ((?x10718 (bvadd ?x5484 unconstrained_ret_mbrtowc_1273_64)))\n (let ((?x20000 (bvadd ?x10718 unconstrained_ret_mbrtowc_1421_64)))\n (bvule (_ bv576460752303357908 64) ?x20000)))))\n(assert\n (let ((?x5484 (bvadd (_ bv576460752303357908 64) unconstrained_ret_mbrtowc_1140_64)))\n (let ((?x10718 (bvadd ?x5484 unconstrained_ret_mbrtowc_1273_64)))\n (let ((?x20000 (bvadd ?x10718 unconstrained_ret_mbrtowc_1421_64)))\n (let ((?x29748 ((_ extract 63 59) ?x20000)))\n (= (_ bv0 5) ?x29748))))))\n(assert\n (let ((?x28645 ((_ extract 58 0) unconstrained_ret_mbrtowc_1421_64)))\n (let ((?x8672 ((_ extract 58 0) unconstrained_ret_mbrtowc_1273_64)))\n (let ((?x8610 ((_ extract 58 0) unconstrained_ret_mbrtowc_1140_64)))\n (let ((?x9895 (bvadd (_ bv576460752303357908 59) ?x8610)))\n (let ((?x17149 (bvadd ?x9895 ?x8672)))\n (let ((?x15919 (bvadd ?x17149 ?x28645)))\n (bvule ?x15919 (_ bv576460752303357909 59)))))))))\n(assert\n (let ((?x5484 (bvadd (_ bv576460752303357908 64) unconstrained_ret_mbrtowc_1140_64)))\n (let ((?x10718 (bvadd ?x5484 unconstrained_ret_mbrtowc_1273_64)))\n (let ((?x20000 (bvadd ?x10718 unconstrained_ret_mbrtowc_1421_64)))\n (let (($x19182 (and (distinct (_ bv576460752303357908 64) ?x20000) true)))\n (let (($x13044 (and (distinct (_ bv576460752303357909 64) ?x20000) true)))\n (and $x13044 $x19182)))))))\n(check-sat)\n",
    "time": 6.120936393737793,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=1, tm_hour=21, tm_min=30, tm_sec=34, tm_wday=1, tm_yday=336, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            0.9916749000549316
        ]
    }
}