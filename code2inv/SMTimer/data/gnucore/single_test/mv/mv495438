{
    "filename": "mv",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun unconstrained_ret_mbrtowc_8837_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_8889_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_8991_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_8936_64 () (_ BitVec 64))\n(assert\n (let (($x70052 (= (_ bv0 64) unconstrained_ret_mbrtowc_8837_64)))\n (not $x70052)))\n(assert\n (let (($x112261 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_8837_64)))\n (not $x112261)))\n(assert\n (let (($x57572 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_8837_64)))\n (not $x57572)))\n(assert\n (let (($x97347 (= (_ bv0 64) unconstrained_ret_mbrtowc_8889_64)))\n (not $x97347)))\n(assert\n (let (($x35688 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_8889_64)))\n (not $x35688)))\n(assert\n (let (($x115448 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_8889_64)))\n (not $x115448)))\n(assert\n (let (($x103043 (= (_ bv0 64) unconstrained_ret_mbrtowc_8991_64)))\n (not $x103043)))\n(assert\n (let (($x66383 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_8991_64)))\n (not $x66383)))\n(assert\n (let (($x38914 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_8991_64)))\n (not $x38914)))\n(assert\n (let (($x64467 (= (_ bv0 64) unconstrained_ret_mbrtowc_8936_64)))\n (not $x64467)))\n(assert\n (let (($x33554 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_8936_64)))\n (not $x33554)))\n(assert\n (let (($x77931 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_8936_64)))\n (not $x77931)))\n(assert\n (let ((?x83093 (bvadd (_ bv23 64) unconstrained_ret_mbrtowc_8837_64)))\n (let ((?x115688 (bvadd ?x83093 unconstrained_ret_mbrtowc_8889_64)))\n (let ((?x29356 (bvadd ?x115688 unconstrained_ret_mbrtowc_8936_64)))\n (let ((?x23519 (bvadd ?x29356 unconstrained_ret_mbrtowc_8991_64)))\n (let ((?x38718 ((_ extract 63 2) ?x23519)))\n (= (_ bv0 62) ?x38718)))))))\n(assert\n (let ((?x68468 (bvadd unconstrained_ret_mbrtowc_8837_64 unconstrained_ret_mbrtowc_8889_64)))\n (let ((?x86578 (bvadd ?x68468 unconstrained_ret_mbrtowc_8936_64)))\n (let ((?x82833 (bvadd ?x86578 unconstrained_ret_mbrtowc_8991_64)))\n (let ((?x27117 (bvadd ?x82833 (_ bv23 64))))\n (let (($x76784 (and (distinct (_ bv3 64) ?x27117) true)))\n (let (($x118632 (and (distinct (_ bv0 64) ?x27117) true)))\n (and $x118632 $x76784))))))))\n(assert\n (let ((?x68468 (bvadd unconstrained_ret_mbrtowc_8837_64 unconstrained_ret_mbrtowc_8889_64)))\n (let ((?x86578 (bvadd ?x68468 unconstrained_ret_mbrtowc_8936_64)))\n (let ((?x82833 (bvadd ?x86578 unconstrained_ret_mbrtowc_8991_64)))\n (let ((?x27117 (bvadd ?x82833 (_ bv23 64))))\n (and (distinct ?x27117 (_ bv2 64)) true))))))\n(assert\n (let ((?x68468 (bvadd unconstrained_ret_mbrtowc_8837_64 unconstrained_ret_mbrtowc_8889_64)))\n (let ((?x86578 (bvadd ?x68468 unconstrained_ret_mbrtowc_8936_64)))\n (let ((?x82833 (bvadd ?x86578 unconstrained_ret_mbrtowc_8991_64)))\n (let ((?x27117 (bvadd ?x82833 (_ bv23 64))))\n (and (distinct ?x27117 (_ bv1 64)) true))))))\n(check-sat)\n",
    "time": 100.00047445297241,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=1, tm_hour=10, tm_min=3, tm_sec=30, tm_wday=1, tm_yday=336, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            300.0118787288666
        ]
    }
}