{
    "filename": "mv",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun sym_argv2_1_16 () (_ BitVec 16))\n(declare-fun strlen_6801_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_7999_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_8066_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_8131_64 () (_ BitVec 64))\n(assert\n (let ((?x45280 ((_ extract 15 8) sym_argv2_1_16)))\n (let (($x30098 (bvule (_ bv39 8) ?x45280)))\n (let (($x32931 (= (_ bv39 8) ?x45280)))\n (let (($x20985 (or $x32931 $x30098)))\n (let ((?x66971 (ite $x20985 (_ bv0 8) (_ bv255 8))))\n (let (($x27345 (= (_ bv0 8) ?x66971)))\n (let (($x8527 (not $x27345)))\n (let ((?x9449 ((_ extract 13 8) sym_argv2_1_16)))\n (let (($x14147 (bvule ?x9449 (_ bv39 6))))\n (let ((?x43853 ((_ extract 15 14) sym_argv2_1_16)))\n (let (($x15917 (= (_ bv0 2) ?x43853)))\n (let (($x31669 (and $x15917 $x14147)))\n (let ((?x8370 (ite $x31669 (_ bv2 8) (_ bv1 8))))\n (let ((?x14721 (ite $x30098 ?x8370 (_ bv255 8))))\n (let ((?x58881 (ite $x32931 (_ bv0 8) ?x14721)))\n (let (($x53753 (= (_ bv0 8) ?x58881)))\n (let (($x15140 (not $x53753)))\n (or $x15140 $x8527)))))))))))))))))))\n(assert\n (let ((?x21890 ((_ extract 14 8) sym_argv2_1_16)))\n (let (($x30910 (bvule ?x21890 (_ bv126 7))))\n (let (($x68351 (not $x30910)))\n (let ((?x4349 ((_ extract 15 15) sym_argv2_1_16)))\n (let (($x45478 (= (_ bv0 1) ?x4349)))\n (let (($x61512 (not $x45478)))\n (or $x61512 $x68351))))))))\n(assert\n (let ((?x89393 (bvadd (_ bv576460752303357904 64) strlen_6801_64)))\n (let ((?x53953 ((_ extract 7 0) sym_argv2_1_16)))\n (let (($x68908 (= (_ bv0 8) ?x53953)))\n (let ((?x61835 (ite $x68908 (_ bv576460752303357905 64) (_ bv576460752303357906 64))))\n (let ((?x45280 ((_ extract 15 8) sym_argv2_1_16)))\n (let (($x43146 (= (_ bv0 8) ?x45280)))\n (let ((?x6530 (ite $x43146 (_ bv576460752303357904 64) ?x61835)))\n (= ?x6530 ?x89393)))))))))\n(assert\n (let (($x16353 (= (_ bv8 64) strlen_6801_64)))\n (not $x16353)))\n(assert\n (let (($x114229 (= (_ bv9 64) strlen_6801_64)))\n (not $x114229)))\n(assert\n (let (($x44901 (= (_ bv10 64) strlen_6801_64)))\n (not $x44901)))\n(assert\n (let (($x125323 (bvule (_ bv14 64) strlen_6801_64)))\n (not $x125323)))\n(assert\n (let (($x55444 (= (_ bv0 64) unconstrained_ret_mbrtowc_7999_64)))\n (not $x55444)))\n(assert\n (let (($x90716 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_7999_64)))\n (not $x90716)))\n(assert\n (let (($x66645 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_7999_64)))\n (not $x66645)))\n(assert\n (let (($x115801 (= (_ bv0 64) unconstrained_ret_mbrtowc_8066_64)))\n (not $x115801)))\n(assert\n (let (($x44495 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_8066_64)))\n (not $x44495)))\n(assert\n (let (($x124306 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_8066_64)))\n (not $x124306)))\n(assert\n (let (($x59576 (= (_ bv0 64) unconstrained_ret_mbrtowc_8131_64)))\n (not $x59576)))\n(assert\n (let (($x34767 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_8131_64)))\n (not $x34767)))\n(assert\n (let (($x67820 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_8131_64)))\n (not $x67820)))\n(assert\n (let ((?x96906 (bvadd (_ bv13 64) unconstrained_ret_mbrtowc_7999_64)))\n (let ((?x61695 (bvadd ?x96906 unconstrained_ret_mbrtowc_8066_64)))\n (let ((?x99287 (bvadd ?x61695 unconstrained_ret_mbrtowc_8131_64)))\n (let (($x50906 (bvule strlen_6801_64 ?x99287)))\n (not $x50906))))))\n(assert\n (let ((?x35611 ((_ extract 3 0) strlen_6801_64)))\n (bvule ?x35611 (_ bv10 4))))\n(assert\n (let ((?x46443 (bvadd (_ bv576460752303357917 64) unconstrained_ret_mbrtowc_7999_64)))\n (let ((?x33143 (bvadd ?x46443 unconstrained_ret_mbrtowc_8066_64)))\n (let ((?x96450 (bvadd ?x33143 unconstrained_ret_mbrtowc_8131_64)))\n (bvule (_ bv576460752303357904 64) ?x96450)))))\n(assert\n (let ((?x46443 (bvadd (_ bv576460752303357917 64) unconstrained_ret_mbrtowc_7999_64)))\n (let ((?x33143 (bvadd ?x46443 unconstrained_ret_mbrtowc_8066_64)))\n (let ((?x96450 (bvadd ?x33143 unconstrained_ret_mbrtowc_8131_64)))\n (let ((?x95291 ((_ extract 63 59) ?x96450)))\n (= (_ bv0 5) ?x95291))))))\n(assert\n (let ((?x93259 ((_ extract 58 0) unconstrained_ret_mbrtowc_8131_64)))\n (let ((?x75516 ((_ extract 58 0) unconstrained_ret_mbrtowc_8066_64)))\n (let ((?x60243 ((_ extract 58 0) unconstrained_ret_mbrtowc_7999_64)))\n (let ((?x62103 (bvadd (_ bv576460752303357917 59) ?x60243)))\n (let ((?x7032 (bvadd ?x62103 ?x75516)))\n (let ((?x87850 (bvadd ?x7032 ?x93259)))\n (bvule ?x87850 (_ bv576460752303357905 59)))))))))\n(assert\n (let ((?x67286 (bvadd unconstrained_ret_mbrtowc_7999_64 unconstrained_ret_mbrtowc_8066_64)))\n (let ((?x112769 (bvadd ?x67286 unconstrained_ret_mbrtowc_8131_64)))\n (let ((?x31010 (bvadd ?x112769 (_ bv576460752303357917 64))))\n (let (($x21114 (and (distinct (_ bv576460752303357905 64) ?x31010) true)))\n (let (($x55276 (and (distinct (_ bv576460752303357904 64) ?x31010) true)))\n (and $x55276 $x21114)))))))\n(check-sat)\n",
    "time": 39.38323712348938,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=1, tm_hour=8, tm_min=52, tm_sec=32, tm_wday=1, tm_yday=336, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            1.2161602973937988
        ]
    }
}