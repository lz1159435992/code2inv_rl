{
    "filename": "nice",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun unconstrained_ret_mbrtowc_1877_64 () (_ BitVec 64))\n(declare-fun sym_argv_0_80 () (_ BitVec 80))\n(declare-fun num_bytes_744_64 () (_ BitVec 64))\n(declare-fun num_bytes_745_64 () (_ BitVec 64))\n(declare-fun strlen_1472_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_1790_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_2000_64 () (_ BitVec 64))\n(assert\n (let (($x50517 (= (_ bv0 64) unconstrained_ret_mbrtowc_1877_64)))\n (not $x50517)))\n(assert\n (let (($x107032 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1877_64)))\n (not $x107032)))\n(assert\n (let (($x71426 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1877_64)))\n (not $x71426)))\n(assert\n (let ((?x227 ((_ extract 31 31) sym_argv_0_80)))\n (= (_ bv0 1) ?x227)))\n(assert\n (let ((?x40 ((_ extract 23 23) sym_argv_0_80)))\n (= (_ bv0 1) ?x40)))\n(assert\n (let ((?x228 ((_ extract 15 15) sym_argv_0_80)))\n (= (_ bv0 1) ?x228)))\n(assert\n (let ((?x51 ((_ extract 7 7) sym_argv_0_80)))\n (= (_ bv0 1) ?x51)))\n(assert\n (let ((?x16 ((_ extract 79 72) sym_argv_0_80)))\n (= (_ bv45 8) ?x16)))\n(assert\n (let ((?x24 ((_ extract 71 64) sym_argv_0_80)))\n (= (_ bv45 8) ?x24)))\n(assert\n (let ((?x1281 ((_ extract 61 56) sym_argv_0_80)))\n (let (($x1197 (bvule ?x1281 (_ bv57 6))))\n (let (($x3697 (not $x1197)))\n (let ((?x1237 ((_ extract 63 62) sym_argv_0_80)))\n (let (($x272 (= (_ bv0 2) ?x1237)))\n (let (($x3775 (not $x272)))\n (let (($x4278 (or $x3775 $x3697)))\n (let (($x47501 (not $x4278)))\n (let (($x1774 (= (_ bv0 64) num_bytes_744_64)))\n (let (($x4518 (not $x1774)))\n (let (($x46181 (or $x4518 $x47501)))\n (let (($x29010 (not $x46181)))\n (let (($x3195 (= (_ bv1 64) num_bytes_744_64)))\n (let (($x4568 (not $x3195)))\n (let (($x24638 (or $x4568 $x4278)))\n (let (($x16394 (not $x24638)))\n (or $x16394 $x29010))))))))))))))))))\n(assert\n (let ((?x1281 ((_ extract 61 56) sym_argv_0_80)))\n (let (($x1197 (bvule ?x1281 (_ bv57 6))))\n (let (($x3697 (not $x1197)))\n (let ((?x1237 ((_ extract 63 62) sym_argv_0_80)))\n (let (($x272 (= (_ bv0 2) ?x1237)))\n (let (($x3775 (not $x272)))\n (let (($x4278 (or $x3775 $x3697)))\n (let (($x3210 (= (_ bv1 64) num_bytes_745_64)))\n (let (($x4723 (not $x3210)))\n (let (($x17190 (or $x4723 $x4278)))\n (let (($x21427 (not $x17190)))\n (let (($x47501 (not $x4278)))\n (let (($x2858 (= (_ bv0 64) num_bytes_745_64)))\n (let (($x4991 (not $x2858)))\n (let (($x7915 (or $x4991 $x47501)))\n (let (($x6200 (not $x7915)))\n (or $x6200 $x21427))))))))))))))))))\n(assert\n (let ((?x197 ((_ extract 30 24) sym_argv_0_80)))\n (bvule ?x197 (_ bv126 7))))\n(assert\n (let ((?x229 ((_ extract 22 16) sym_argv_0_80)))\n (bvule ?x229 (_ bv126 7))))\n(assert\n (let ((?x46 ((_ extract 14 8) sym_argv_0_80)))\n (bvule ?x46 (_ bv126 7))))\n(assert\n (let ((?x61 ((_ extract 6 0) sym_argv_0_80)))\n (bvule ?x61 (_ bv126 7))))\n(assert\n (let ((?x3229 (bvadd (_ bv1 64) num_bytes_744_64)))\n (let ((?x1281 ((_ extract 61 56) sym_argv_0_80)))\n (let (($x1197 (bvule ?x1281 (_ bv57 6))))\n (let ((?x1237 ((_ extract 63 62) sym_argv_0_80)))\n (let (($x272 (= (_ bv0 2) ?x1237)))\n (let (($x9063 (and $x272 $x1197)))\n (let ((?x26346 (ite $x9063 ?x3229 (_ bv0 64))))\n (let (($x47596 (= (_ bv2 64) ?x26346)))\n (let ((?x11742 (ite $x47596 (_ bv31 8) (_ bv190 8))))\n (let (($x16119 (= (_ bv9 64) ?x26346)))\n (let ((?x42960 (ite $x16119 (_ bv0 8) ?x11742)))\n (let (($x37132 (= (_ bv3 64) ?x26346)))\n (let ((?x2384 (ite $x37132 (_ bv39 8) ?x42960)))\n (let ((?x35 ((_ extract 7 0) sym_argv_0_80)))\n (let (($x30997 (= (_ bv8 64) ?x26346)))\n (let ((?x2379 (ite $x30997 ?x35 ?x2384)))\n (let (($x44740 (= (_ bv4 64) ?x26346)))\n (let ((?x90237 (ite $x44740 (_ bv64 8) ?x2379)))\n (let ((?x19 ((_ extract 15 8) sym_argv_0_80)))\n (let (($x49298 (= (_ bv7 64) ?x26346)))\n (let ((?x130678 (ite $x49298 ?x19 ?x90237)))\n (let ((?x23 ((_ extract 31 24) sym_argv_0_80)))\n (let (($x44783 (= (_ bv5 64) ?x26346)))\n (let ((?x30234 (ite $x44783 ?x23 ?x130678)))\n (let ((?x21 ((_ extract 23 16) sym_argv_0_80)))\n (let (($x46425 (= (_ bv6 64) ?x26346)))\n (let ((?x63169 (ite $x46425 ?x21 ?x30234)))\n (let (($x42143 (= (_ bv0 8) ?x63169)))\n (not $x42143))))))))))))))))))))))))))))))\n(assert\n (let ((?x4053 ((_ extract 53 48) sym_argv_0_80)))\n (let ((?x3229 (bvadd (_ bv1 64) num_bytes_744_64)))\n (let ((?x1281 ((_ extract 61 56) sym_argv_0_80)))\n (let (($x1197 (bvule ?x1281 (_ bv57 6))))\n (let ((?x1237 ((_ extract 63 62) sym_argv_0_80)))\n (let (($x272 (= (_ bv0 2) ?x1237)))\n (let (($x9063 (and $x272 $x1197)))\n (let ((?x26346 (ite $x9063 ?x3229 (_ bv0 64))))\n (let (($x47596 (= (_ bv2 64) ?x26346)))\n (let ((?x22428 (ite $x47596 ?x4053 (_ bv62 6))))\n (let ((?x3101 ((_ extract 5 0) sym_argv_0_80)))\n (let (($x30997 (= (_ bv8 64) ?x26346)))\n (let ((?x28127 (ite $x30997 ?x3101 ?x22428)))\n (let ((?x3225 ((_ extract 45 40) sym_argv_0_80)))\n (let (($x37132 (= (_ bv3 64) ?x26346)))\n (let ((?x55774 (ite $x37132 ?x3225 ?x28127)))\n (let ((?x1144 ((_ extract 13 8) sym_argv_0_80)))\n (let (($x49298 (= (_ bv7 64) ?x26346)))\n (let ((?x36500 (ite $x49298 ?x1144 ?x55774)))\n (let ((?x3098 ((_ extract 37 32) sym_argv_0_80)))\n (let (($x44740 (= (_ bv4 64) ?x26346)))\n (let ((?x39336 (ite $x44740 ?x3098 ?x36500)))\n (let ((?x3133 ((_ extract 21 16) sym_argv_0_80)))\n (let (($x46425 (= (_ bv6 64) ?x26346)))\n (let ((?x10148 (ite $x46425 ?x3133 ?x39336)))\n (let ((?x3000 ((_ extract 29 24) sym_argv_0_80)))\n (let (($x44783 (= (_ bv5 64) ?x26346)))\n (let ((?x36454 (ite $x44783 ?x3000 ?x10148)))\n (let ((?x37435 (bvadd (_ bv62 6) ?x36454)))\n (let (($x14820 (bvule ?x37435 (_ bv53 6))))\n (let (($x53300 (not $x14820)))\n (let ((?x11742 (ite $x47596 (_ bv31 8) (_ bv190 8))))\n (let ((?x35 ((_ extract 7 0) sym_argv_0_80)))\n (let ((?x33245 (ite $x30997 ?x35 ?x11742)))\n (let ((?x16681 (ite $x37132 (_ bv39 8) ?x33245)))\n (let ((?x19 ((_ extract 15 8) sym_argv_0_80)))\n (let ((?x56010 (ite $x49298 ?x19 ?x16681)))\n (let ((?x79278 (ite $x44740 (_ bv64 8) ?x56010)))\n (let ((?x21 ((_ extract 23 16) sym_argv_0_80)))\n (let ((?x89547 (ite $x46425 ?x21 ?x79278)))\n (let ((?x23 ((_ extract 31 24) sym_argv_0_80)))\n (let ((?x67706 (ite $x44783 ?x23 ?x89547)))\n (let ((?x124035 (concat (_ bv0 24) ?x67706)))\n (let ((?x59666 (bvadd (_ bv4294967230 32) ?x124035)))\n (let ((?x121425 ((_ extract 31 6) ?x59666)))\n (let (($x13665 (= (_ bv0 26) ?x121425)))\n (let (($x96360 (not $x13665)))\n (or $x96360 $x53300)))))))))))))))))))))))))))))))))))))))))))))))))\n(assert\n (let ((?x18 ((_ extract 63 56) sym_argv_0_80)))\n (= (_ bv53 8) ?x18)))\n(assert\n (let ((?x31 ((_ extract 55 48) sym_argv_0_80)))\n (= (_ bv31 8) ?x31)))\n(assert\n (let ((?x87207 (bvadd (_ bv576460752303357896 64) strlen_1472_64)))\n (let ((?x35 ((_ extract 7 0) sym_argv_0_80)))\n (let (($x53641 (= (_ bv0 8) ?x35)))\n (let ((?x52770 (ite $x53641 (_ bv576460752303357904 64) (_ bv576460752303357905 64))))\n (let ((?x19 ((_ extract 15 8) sym_argv_0_80)))\n (let (($x21778 (= (_ bv0 8) ?x19)))\n (let ((?x51073 (ite $x21778 (_ bv576460752303357903 64) ?x52770)))\n (let ((?x21 ((_ extract 23 16) sym_argv_0_80)))\n (let (($x15752 (= (_ bv0 8) ?x21)))\n (let ((?x44733 (ite $x15752 (_ bv576460752303357902 64) ?x51073)))\n (let ((?x23 ((_ extract 31 24) sym_argv_0_80)))\n (let (($x50681 (= (_ bv0 8) ?x23)))\n (let ((?x45585 (ite $x50681 (_ bv576460752303357901 64) ?x44733)))\n (= ?x45585 ?x87207)))))))))))))))\n(assert\n (let (($x28881 (= (_ bv18446744073709551615 64) strlen_1472_64)))\n (not $x28881)))\n(assert\n (let ((?x29 ((_ extract 47 40) sym_argv_0_80)))\n (= (_ bv39 8) ?x29)))\n(assert\n (bvule (_ bv5 64) strlen_1472_64))\n(assert\n (let ((?x3098 ((_ extract 37 32) sym_argv_0_80)))\n (let (($x43187 (bvule ?x3098 (_ bv39 6))))\n (let ((?x3189 ((_ extract 39 38) sym_argv_0_80)))\n (let (($x3097 (= (_ bv0 2) ?x3189)))\n (let (($x21741 (and $x3097 $x43187)))\n (let ((?x68816 (ite $x21741 (_ bv2 8) (_ bv1 8))))\n (let (($x55375 (= (_ bv0 8) ?x68816)))\n (not $x55375)))))))))\n(assert\n (let ((?x27 ((_ extract 39 32) sym_argv_0_80)))\n (= (_ bv64 8) ?x27)))\n(assert\n (let (($x75705 (= (_ bv0 64) unconstrained_ret_mbrtowc_1790_64)))\n (not $x75705)))\n(assert\n (let (($x107043 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1790_64)))\n (not $x107043)))\n(assert\n (let (($x41069 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1790_64)))\n (not $x41069)))\n(assert\n (let (($x55695 (= (_ bv0 64) unconstrained_ret_mbrtowc_2000_64)))\n (not $x55695)))\n(assert\n (let (($x66184 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_2000_64)))\n (not $x66184)))\n(assert\n (let (($x115417 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_2000_64)))\n (not $x115417)))\n(assert\n (let ((?x22079 (bvadd (_ bv4 64) unconstrained_ret_mbrtowc_1790_64)))\n (let ((?x98993 (bvadd ?x22079 unconstrained_ret_mbrtowc_1877_64)))\n (let ((?x57974 (bvadd ?x98993 unconstrained_ret_mbrtowc_2000_64)))\n (let (($x40278 (bvule strlen_1472_64 ?x57974)))\n (not $x40278))))))\n(assert\n (let ((?x45572 (bvadd (_ bv576460752303357900 64) unconstrained_ret_mbrtowc_1790_64)))\n (let ((?x22200 (bvadd ?x45572 unconstrained_ret_mbrtowc_1877_64)))\n (let ((?x105594 (bvadd ?x22200 unconstrained_ret_mbrtowc_2000_64)))\n (bvule (_ bv576460752303357896 64) ?x105594)))))\n(assert\n (let ((?x45572 (bvadd (_ bv576460752303357900 64) unconstrained_ret_mbrtowc_1790_64)))\n (let ((?x22200 (bvadd ?x45572 unconstrained_ret_mbrtowc_1877_64)))\n (let ((?x105594 (bvadd ?x22200 unconstrained_ret_mbrtowc_2000_64)))\n (let ((?x21912 ((_ extract 63 59) ?x105594)))\n (= (_ bv0 5) ?x21912))))))\n(assert\n (let ((?x103857 ((_ extract 58 0) unconstrained_ret_mbrtowc_2000_64)))\n (let ((?x122990 ((_ extract 58 0) unconstrained_ret_mbrtowc_1877_64)))\n (let ((?x65844 ((_ extract 58 0) unconstrained_ret_mbrtowc_1790_64)))\n (let ((?x125696 (bvadd (_ bv576460752303357900 59) ?x65844)))\n (let ((?x16994 (bvadd ?x125696 ?x122990)))\n (let ((?x5957 (bvadd ?x16994 ?x103857)))\n (bvule ?x5957 (_ bv576460752303357904 59)))))))))\n(assert\n (let ((?x75843 (bvadd unconstrained_ret_mbrtowc_1790_64 unconstrained_ret_mbrtowc_1877_64)))\n (let ((?x134492 (bvadd ?x75843 unconstrained_ret_mbrtowc_2000_64)))\n (let ((?x136136 (bvadd ?x134492 (_ bv576460752303357900 64))))\n (let (($x74685 (and (distinct (_ bv576460752303357900 64) ?x136136) true)))\n (let (($x117325 (and (distinct (_ bv576460752303357896 64) ?x136136) true)))\n (let (($x97292 (and (distinct (_ bv576460752303357904 64) ?x136136) true)))\n (and $x97292 $x117325 $x74685))))))))\n(assert\n (let ((?x75843 (bvadd unconstrained_ret_mbrtowc_1790_64 unconstrained_ret_mbrtowc_1877_64)))\n (let ((?x134492 (bvadd ?x75843 unconstrained_ret_mbrtowc_2000_64)))\n (let ((?x136136 (bvadd ?x134492 (_ bv576460752303357900 64))))\n (and (distinct ?x136136 (_ bv576460752303357902 64)) true)))))\n(assert\n (let ((?x75843 (bvadd unconstrained_ret_mbrtowc_1790_64 unconstrained_ret_mbrtowc_1877_64)))\n (let ((?x134492 (bvadd ?x75843 unconstrained_ret_mbrtowc_2000_64)))\n (let ((?x136136 (bvadd ?x134492 (_ bv576460752303357900 64))))\n (and (distinct ?x136136 (_ bv576460752303357901 64)) true)))))\n(assert\n (let ((?x75843 (bvadd unconstrained_ret_mbrtowc_1790_64 unconstrained_ret_mbrtowc_1877_64)))\n (let ((?x134492 (bvadd ?x75843 unconstrained_ret_mbrtowc_2000_64)))\n (let ((?x136136 (bvadd ?x134492 (_ bv576460752303357900 64))))\n (and (distinct ?x136136 (_ bv576460752303357903 64)) true)))))\n(assert\n (let ((?x75843 (bvadd unconstrained_ret_mbrtowc_1790_64 unconstrained_ret_mbrtowc_1877_64)))\n (let ((?x134492 (bvadd ?x75843 unconstrained_ret_mbrtowc_2000_64)))\n (let ((?x136136 (bvadd ?x134492 (_ bv576460752303357900 64))))\n (and (distinct ?x136136 (_ bv576460752303357897 64)) true)))))\n(assert\n (let ((?x75843 (bvadd unconstrained_ret_mbrtowc_1790_64 unconstrained_ret_mbrtowc_1877_64)))\n (let ((?x134492 (bvadd ?x75843 unconstrained_ret_mbrtowc_2000_64)))\n (let ((?x136136 (bvadd ?x134492 (_ bv576460752303357900 64))))\n (and (distinct ?x136136 (_ bv576460752303357898 64)) true)))))\n(assert\n (let ((?x75843 (bvadd unconstrained_ret_mbrtowc_1790_64 unconstrained_ret_mbrtowc_1877_64)))\n (let ((?x134492 (bvadd ?x75843 unconstrained_ret_mbrtowc_2000_64)))\n (let ((?x136136 (bvadd ?x134492 (_ bv576460752303357900 64))))\n (and (distinct ?x136136 (_ bv576460752303357899 64)) true)))))\n(check-sat)\n",
    "time": 72.44676494598389,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=1, tm_hour=7, tm_min=57, tm_sec=58, tm_wday=1, tm_yday=336, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            13.855433464050293
        ]
    }
}