{
    "filename": "rmdir",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun unconstrained_ret_mbrtowc_9876_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_9966_64 () (_ BitVec 64))\n(declare-fun sym_argv_0_80 () (_ BitVec 80))\n(declare-fun strlen_9858_64 () (_ BitVec 64))\n(assert\n (let (($x30073 (= (_ bv0 64) unconstrained_ret_mbrtowc_9876_64)))\n (not $x30073)))\n(assert\n (let (($x21522 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_9876_64)))\n (not $x21522)))\n(assert\n (let (($x76254 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_9876_64)))\n (not $x76254)))\n(assert\n (let (($x83238 (= (_ bv0 64) unconstrained_ret_mbrtowc_9966_64)))\n (not $x83238)))\n(assert\n (let (($x71421 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_9966_64)))\n (not $x71421)))\n(assert\n (let (($x13133 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_9966_64)))\n (not $x13133)))\n(assert\n (let ((?x1942 ((_ extract 55 55) sym_argv_0_80)))\n (= (_ bv0 1) ?x1942)))\n(assert\n (let ((?x1758 ((_ extract 47 47) sym_argv_0_80)))\n (= (_ bv0 1) ?x1758)))\n(assert\n (let ((?x1552 ((_ extract 39 39) sym_argv_0_80)))\n (= (_ bv0 1) ?x1552)))\n(assert\n (let ((?x888 ((_ extract 31 31) sym_argv_0_80)))\n (= (_ bv0 1) ?x888)))\n(assert\n (let ((?x1507 ((_ extract 23 23) sym_argv_0_80)))\n (= (_ bv0 1) ?x1507)))\n(assert\n (let ((?x1663 ((_ extract 15 15) sym_argv_0_80)))\n (= (_ bv0 1) ?x1663)))\n(assert\n (let ((?x1735 ((_ extract 7 7) sym_argv_0_80)))\n (= (_ bv0 1) ?x1735)))\n(assert\n (let ((?x3495 ((_ extract 77 72) sym_argv_0_80)))\n (let (($x4575 (bvule ?x3495 (_ bv39 6))))\n (let ((?x3289 ((_ extract 79 78) sym_argv_0_80)))\n (let (($x4496 (= (_ bv0 2) ?x3289)))\n (let (($x4566 (and $x4496 $x4575)))\n (let ((?x4946 (ite $x4566 (_ bv2 8) (_ bv1 8))))\n (let (($x7417 (= (_ bv0 8) ?x4946)))\n (not $x7417)))))))))\n(assert\n (let ((?x1364 ((_ extract 54 48) sym_argv_0_80)))\n (bvule ?x1364 (_ bv126 7))))\n(assert\n (let ((?x1465 ((_ extract 46 40) sym_argv_0_80)))\n (bvule ?x1465 (_ bv126 7))))\n(assert\n (let ((?x1658 ((_ extract 38 32) sym_argv_0_80)))\n (bvule ?x1658 (_ bv126 7))))\n(assert\n (let ((?x1786 ((_ extract 30 24) sym_argv_0_80)))\n (bvule ?x1786 (_ bv126 7))))\n(assert\n (let ((?x1450 ((_ extract 22 16) sym_argv_0_80)))\n (bvule ?x1450 (_ bv126 7))))\n(assert\n (let ((?x1765 ((_ extract 14 8) sym_argv_0_80)))\n (bvule ?x1765 (_ bv126 7))))\n(assert\n (let ((?x1350 ((_ extract 6 0) sym_argv_0_80)))\n (bvule ?x1350 (_ bv126 7))))\n(assert\n (let ((?x16 ((_ extract 79 72) sym_argv_0_80)))\n (= (_ bv92 8) ?x16)))\n(assert\n (let ((?x24 ((_ extract 71 64) sym_argv_0_80)))\n (= (_ bv39 8) ?x24)))\n(assert\n (let ((?x11188 ((_ extract 61 56) sym_argv_0_80)))\n (let (($x12577 (bvule ?x11188 (_ bv39 6))))\n (let ((?x11583 ((_ extract 63 62) sym_argv_0_80)))\n (let (($x2675 (= (_ bv0 2) ?x11583)))\n (let (($x16439 (and $x2675 $x12577)))\n (let ((?x21025 (ite $x16439 (_ bv2 8) (_ bv1 8))))\n (let (($x81849 (= (_ bv0 8) ?x21025)))\n (not $x81849)))))))))\n(assert\n (let ((?x18 ((_ extract 63 56) sym_argv_0_80)))\n (= (_ bv64 8) ?x18)))\n(assert\n (let ((?x62899 (bvadd (_ bv576460752303357896 64) strlen_9858_64)))\n (let ((?x35 ((_ extract 7 0) sym_argv_0_80)))\n (let (($x895 (= (_ bv0 8) ?x35)))\n (let ((?x19714 (ite $x895 (_ bv576460752303357905 64) (_ bv576460752303357906 64))))\n (let ((?x19 ((_ extract 15 8) sym_argv_0_80)))\n (let (($x833 (= (_ bv0 8) ?x19)))\n (let ((?x12748 (ite $x833 (_ bv576460752303357904 64) ?x19714)))\n (let ((?x21 ((_ extract 23 16) sym_argv_0_80)))\n (let (($x719 (= (_ bv0 8) ?x21)))\n (let ((?x10399 (ite $x719 (_ bv576460752303357903 64) ?x12748)))\n (let ((?x23 ((_ extract 31 24) sym_argv_0_80)))\n (let (($x1543 (= (_ bv0 8) ?x23)))\n (let ((?x15355 (ite $x1543 (_ bv576460752303357902 64) ?x10399)))\n (let ((?x27 ((_ extract 39 32) sym_argv_0_80)))\n (let (($x1445 (= (_ bv0 8) ?x27)))\n (let ((?x34329 (ite $x1445 (_ bv576460752303357901 64) ?x15355)))\n (let ((?x29 ((_ extract 47 40) sym_argv_0_80)))\n (let (($x1281 (= (_ bv0 8) ?x29)))\n (let ((?x72799 (ite $x1281 (_ bv576460752303357900 64) ?x34329)))\n (let ((?x31 ((_ extract 55 48) sym_argv_0_80)))\n (let (($x500 (= (_ bv0 8) ?x31)))\n (let ((?x26499 (ite $x500 (_ bv576460752303357899 64) ?x72799)))\n (= ?x26499 ?x62899))))))))))))))))))))))))\n(assert\n (let ((?x55012 (bvadd (_ bv2 64) unconstrained_ret_mbrtowc_9876_64)))\n (let ((?x1056 (bvadd ?x55012 unconstrained_ret_mbrtowc_9966_64)))\n (let (($x67622 (bvule strlen_9858_64 ?x1056)))\n (not $x67622)))))\n(assert\n (let ((?x26799 (bvadd (_ bv576460752303357898 64) unconstrained_ret_mbrtowc_9876_64)))\n (let ((?x31398 (bvadd ?x26799 unconstrained_ret_mbrtowc_9966_64)))\n (bvule (_ bv576460752303357896 64) ?x31398))))\n(assert\n (let ((?x26799 (bvadd (_ bv576460752303357898 64) unconstrained_ret_mbrtowc_9876_64)))\n (let ((?x31398 (bvadd ?x26799 unconstrained_ret_mbrtowc_9966_64)))\n (let ((?x96358 ((_ extract 63 59) ?x31398)))\n (= (_ bv0 5) ?x96358)))))\n(assert\n (let ((?x12269 ((_ extract 58 0) unconstrained_ret_mbrtowc_9966_64)))\n (let ((?x97659 ((_ extract 58 0) unconstrained_ret_mbrtowc_9876_64)))\n (let ((?x61425 (bvadd (_ bv576460752303357898 59) ?x97659)))\n (let ((?x42211 (bvadd ?x61425 ?x12269)))\n (bvule ?x42211 (_ bv576460752303357905 59)))))))\n(assert\n (let ((?x52457 (bvadd unconstrained_ret_mbrtowc_9876_64 unconstrained_ret_mbrtowc_9966_64)))\n (let ((?x38808 (bvadd ?x52457 (_ bv576460752303357898 64))))\n (let (($x76694 (and (distinct (_ bv576460752303357905 64) ?x38808) true)))\n (let (($x83910 (and (distinct (_ bv576460752303357904 64) ?x38808) true)))\n (let (($x58751 (and (distinct (_ bv576460752303357898 64) ?x38808) true)))\n (let (($x71894 (and (distinct (_ bv576460752303357897 64) ?x38808) true)))\n (let (($x49214 (and (distinct (_ bv576460752303357896 64) ?x38808) true)))\n (and $x49214 $x71894 $x58751 $x83910 $x76694)))))))))\n(assert\n (let ((?x52457 (bvadd unconstrained_ret_mbrtowc_9876_64 unconstrained_ret_mbrtowc_9966_64)))\n (let ((?x38808 (bvadd ?x52457 (_ bv576460752303357898 64))))\n (and (distinct ?x38808 (_ bv576460752303357900 64)) true))))\n(assert\n (let ((?x52457 (bvadd unconstrained_ret_mbrtowc_9876_64 unconstrained_ret_mbrtowc_9966_64)))\n (let ((?x38808 (bvadd ?x52457 (_ bv576460752303357898 64))))\n (and (distinct ?x38808 (_ bv576460752303357899 64)) true))))\n(assert\n (let ((?x52457 (bvadd unconstrained_ret_mbrtowc_9876_64 unconstrained_ret_mbrtowc_9966_64)))\n (let ((?x38808 (bvadd ?x52457 (_ bv576460752303357898 64))))\n (and (distinct ?x38808 (_ bv576460752303357903 64)) true))))\n(assert\n (let ((?x52457 (bvadd unconstrained_ret_mbrtowc_9876_64 unconstrained_ret_mbrtowc_9966_64)))\n (let ((?x38808 (bvadd ?x52457 (_ bv576460752303357898 64))))\n (and (distinct ?x38808 (_ bv576460752303357902 64)) true))))\n(assert\n (let ((?x52457 (bvadd unconstrained_ret_mbrtowc_9876_64 unconstrained_ret_mbrtowc_9966_64)))\n (let ((?x38808 (bvadd ?x52457 (_ bv576460752303357898 64))))\n (and (distinct ?x38808 (_ bv576460752303357901 64)) true))))\n(check-sat)\n",
    "time": 1.210282802581787,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=2, tm_hour=1, tm_min=33, tm_sec=38, tm_wday=2, tm_yday=337, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            0.8087630271911621
        ]
    }
}