{
    "filename": "link",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun sym_argv_0_80 () (_ BitVec 80))\n(declare-fun strlen_861_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_953_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_872_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_1031_64 () (_ BitVec 64))\n(assert\n (let ((?x435 ((_ extract 55 55) sym_argv_0_80)))\n (= (_ bv0 1) ?x435)))\n(assert\n (let ((?x336 ((_ extract 47 47) sym_argv_0_80)))\n (= (_ bv0 1) ?x336)))\n(assert\n (let ((?x323 ((_ extract 39 39) sym_argv_0_80)))\n (= (_ bv0 1) ?x323)))\n(assert\n (let ((?x381 ((_ extract 31 31) sym_argv_0_80)))\n (= (_ bv0 1) ?x381)))\n(assert\n (let ((?x484 ((_ extract 23 23) sym_argv_0_80)))\n (= (_ bv0 1) ?x484)))\n(assert\n (let ((?x444 ((_ extract 15 15) sym_argv_0_80)))\n (= (_ bv0 1) ?x444)))\n(assert\n (let ((?x495 ((_ extract 7 7) sym_argv_0_80)))\n (= (_ bv0 1) ?x495)))\n(assert\n (let ((?x278 ((_ extract 54 48) sym_argv_0_80)))\n (bvule ?x278 (_ bv126 7))))\n(assert\n (let ((?x352 ((_ extract 46 40) sym_argv_0_80)))\n (bvule ?x352 (_ bv126 7))))\n(assert\n (let ((?x395 ((_ extract 38 32) sym_argv_0_80)))\n (bvule ?x395 (_ bv126 7))))\n(assert\n (let ((?x409 ((_ extract 30 24) sym_argv_0_80)))\n (bvule ?x409 (_ bv126 7))))\n(assert\n (let ((?x446 ((_ extract 22 16) sym_argv_0_80)))\n (bvule ?x446 (_ bv126 7))))\n(assert\n (let ((?x423 ((_ extract 14 8) sym_argv_0_80)))\n (bvule ?x423 (_ bv126 7))))\n(assert\n (let ((?x470 ((_ extract 6 0) sym_argv_0_80)))\n (bvule ?x470 (_ bv126 7))))\n(assert\n (let ((?x16 ((_ extract 79 72) sym_argv_0_80)))\n (= (_ bv13 8) ?x16)))\n(assert\n (let ((?x24 ((_ extract 71 64) sym_argv_0_80)))\n (= (_ bv39 8) ?x24)))\n(assert\n (let ((?x7212 ((_ extract 61 56) sym_argv_0_80)))\n (let (($x5085 (bvule ?x7212 (_ bv39 6))))\n (let ((?x5384 ((_ extract 63 62) sym_argv_0_80)))\n (let (($x9411 (= (_ bv0 2) ?x5384)))\n (let (($x5285 (and $x9411 $x5085)))\n (let ((?x3858 (ite $x5285 (_ bv2 8) (_ bv1 8))))\n (let (($x14846 (= (_ bv0 8) ?x3858)))\n (not $x14846)))))))))\n(assert\n (let ((?x18 ((_ extract 63 56) sym_argv_0_80)))\n (= (_ bv64 8) ?x18)))\n(assert\n (let ((?x9150 (bvadd (_ bv576460752303357895 64) strlen_861_64)))\n (let ((?x35 ((_ extract 7 0) sym_argv_0_80)))\n (let (($x3562 (= (_ bv0 8) ?x35)))\n (let ((?x3920 (ite $x3562 (_ bv576460752303357904 64) (_ bv576460752303357905 64))))\n (let ((?x19 ((_ extract 15 8) sym_argv_0_80)))\n (let (($x3390 (= (_ bv0 8) ?x19)))\n (let ((?x2707 (ite $x3390 (_ bv576460752303357903 64) ?x3920)))\n (let ((?x21 ((_ extract 23 16) sym_argv_0_80)))\n (let (($x3166 (= (_ bv0 8) ?x21)))\n (let ((?x2524 (ite $x3166 (_ bv576460752303357902 64) ?x2707)))\n (let ((?x23 ((_ extract 31 24) sym_argv_0_80)))\n (let (($x4211 (= (_ bv0 8) ?x23)))\n (let ((?x2830 (ite $x4211 (_ bv576460752303357901 64) ?x2524)))\n (let ((?x27 ((_ extract 39 32) sym_argv_0_80)))\n (let (($x1443 (= (_ bv0 8) ?x27)))\n (let ((?x3388 (ite $x1443 (_ bv576460752303357900 64) ?x2830)))\n (let ((?x29 ((_ extract 47 40) sym_argv_0_80)))\n (let (($x3990 (= (_ bv0 8) ?x29)))\n (let ((?x2596 (ite $x3990 (_ bv576460752303357899 64) ?x3388)))\n (let ((?x31 ((_ extract 55 48) sym_argv_0_80)))\n (let (($x4157 (= (_ bv0 8) ?x31)))\n (let ((?x4081 (ite $x4157 (_ bv576460752303357898 64) ?x2596)))\n (= ?x4081 ?x9150))))))))))))))))))))))))\n(assert\n (let (($x6202 (= (_ bv0 64) unconstrained_ret_mbrtowc_953_64)))\n (not $x6202)))\n(assert\n (let (($x16191 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_953_64)))\n (not $x16191)))\n(assert\n (let (($x17882 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_953_64)))\n (not $x17882)))\n(assert\n (let (($x19618 (= (_ bv0 64) unconstrained_ret_mbrtowc_872_64)))\n (not $x19618)))\n(assert\n (let (($x30566 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_872_64)))\n (not $x30566)))\n(assert\n (let (($x4611 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_872_64)))\n (not $x4611)))\n(assert\n (let (($x14486 (= (_ bv0 64) unconstrained_ret_mbrtowc_1031_64)))\n (not $x14486)))\n(assert\n (let (($x40995 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1031_64)))\n (not $x40995)))\n(assert\n (let (($x20162 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1031_64)))\n (not $x20162)))\n(assert\n (let ((?x27816 (bvadd (_ bv2 64) unconstrained_ret_mbrtowc_872_64)))\n (let ((?x13342 (bvadd ?x27816 unconstrained_ret_mbrtowc_953_64)))\n (let ((?x14435 (bvadd ?x13342 unconstrained_ret_mbrtowc_1031_64)))\n (let (($x3242 (bvule strlen_861_64 ?x14435)))\n (not $x3242))))))\n(assert\n (let ((?x16903 (bvadd (_ bv576460752303357897 64) unconstrained_ret_mbrtowc_872_64)))\n (let ((?x30726 (bvadd ?x16903 unconstrained_ret_mbrtowc_953_64)))\n (let ((?x1404 (bvadd ?x30726 unconstrained_ret_mbrtowc_1031_64)))\n (bvule (_ bv576460752303357895 64) ?x1404)))))\n(assert\n (let ((?x16903 (bvadd (_ bv576460752303357897 64) unconstrained_ret_mbrtowc_872_64)))\n (let ((?x30726 (bvadd ?x16903 unconstrained_ret_mbrtowc_953_64)))\n (let ((?x1404 (bvadd ?x30726 unconstrained_ret_mbrtowc_1031_64)))\n (let ((?x19972 ((_ extract 63 59) ?x1404)))\n (= (_ bv0 5) ?x19972))))))\n(assert\n (let ((?x31078 ((_ extract 58 0) unconstrained_ret_mbrtowc_1031_64)))\n (let ((?x1395 ((_ extract 58 0) unconstrained_ret_mbrtowc_953_64)))\n (let ((?x33631 ((_ extract 58 0) unconstrained_ret_mbrtowc_872_64)))\n (let ((?x20909 (bvadd (_ bv576460752303357897 59) ?x33631)))\n (let ((?x36783 (bvadd ?x20909 ?x1395)))\n (let ((?x16022 (bvadd ?x36783 ?x31078)))\n (bvule ?x16022 (_ bv576460752303357904 59)))))))))\n(assert\n (let ((?x17349 (bvadd unconstrained_ret_mbrtowc_872_64 unconstrained_ret_mbrtowc_953_64)))\n (let ((?x31364 (bvadd ?x17349 unconstrained_ret_mbrtowc_1031_64)))\n (let ((?x561 (bvadd ?x31364 (_ bv576460752303357897 64))))\n (let (($x2323 (and (distinct (_ bv576460752303357904 64) ?x561) true)))\n (let (($x42014 (and (distinct (_ bv576460752303357897 64) ?x561) true)))\n (let (($x10968 (and (distinct (_ bv576460752303357896 64) ?x561) true)))\n (let (($x53018 (and (distinct (_ bv576460752303357895 64) ?x561) true)))\n (and $x53018 $x10968 $x42014 $x2323)))))))))\n(assert\n (let ((?x17349 (bvadd unconstrained_ret_mbrtowc_872_64 unconstrained_ret_mbrtowc_953_64)))\n (let ((?x31364 (bvadd ?x17349 unconstrained_ret_mbrtowc_1031_64)))\n (let ((?x561 (bvadd ?x31364 (_ bv576460752303357897 64))))\n (and (distinct ?x561 (_ bv576460752303357898 64)) true)))))\n(assert\n (let ((?x17349 (bvadd unconstrained_ret_mbrtowc_872_64 unconstrained_ret_mbrtowc_953_64)))\n (let ((?x31364 (bvadd ?x17349 unconstrained_ret_mbrtowc_1031_64)))\n (let ((?x561 (bvadd ?x31364 (_ bv576460752303357897 64))))\n (and (distinct ?x561 (_ bv576460752303357900 64)) true)))))\n(assert\n (let ((?x17349 (bvadd unconstrained_ret_mbrtowc_872_64 unconstrained_ret_mbrtowc_953_64)))\n (let ((?x31364 (bvadd ?x17349 unconstrained_ret_mbrtowc_1031_64)))\n (let ((?x561 (bvadd ?x31364 (_ bv576460752303357897 64))))\n (and (distinct ?x561 (_ bv576460752303357901 64)) true)))))\n(assert\n (let ((?x17349 (bvadd unconstrained_ret_mbrtowc_872_64 unconstrained_ret_mbrtowc_953_64)))\n (let ((?x31364 (bvadd ?x17349 unconstrained_ret_mbrtowc_1031_64)))\n (let ((?x561 (bvadd ?x31364 (_ bv576460752303357897 64))))\n (and (distinct ?x561 (_ bv576460752303357902 64)) true)))))\n(assert\n (let ((?x17349 (bvadd unconstrained_ret_mbrtowc_872_64 unconstrained_ret_mbrtowc_953_64)))\n (let ((?x31364 (bvadd ?x17349 unconstrained_ret_mbrtowc_1031_64)))\n (let ((?x561 (bvadd ?x31364 (_ bv576460752303357897 64))))\n (and (distinct ?x561 (_ bv576460752303357903 64)) true)))))\n(assert\n (let ((?x17349 (bvadd unconstrained_ret_mbrtowc_872_64 unconstrained_ret_mbrtowc_953_64)))\n (let ((?x31364 (bvadd ?x17349 unconstrained_ret_mbrtowc_1031_64)))\n (let ((?x561 (bvadd ?x31364 (_ bv576460752303357897 64))))\n (and (distinct ?x561 (_ bv576460752303357899 64)) true)))))\n(check-sat)\n",
    "time": 81.49559807777405,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=3, tm_hour=1, tm_min=56, tm_sec=53, tm_wday=3, tm_yday=338, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            13.342198133468628
        ]
    }
}