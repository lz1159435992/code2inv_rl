{
    "filename": "link",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun unconstrained_ret_mbrtowc_815_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_962_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_884_64 () (_ BitVec 64))\n(assert\n (let (($x21136 (= (_ bv0 64) unconstrained_ret_mbrtowc_815_64)))\n (not $x21136)))\n(assert\n (let (($x11150 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_815_64)))\n (not $x11150)))\n(assert\n (let (($x2829 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_815_64)))\n (not $x2829)))\n(assert\n (let (($x30929 (= (_ bv0 64) unconstrained_ret_mbrtowc_962_64)))\n (not $x30929)))\n(assert\n (let (($x21062 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_962_64)))\n (not $x21062)))\n(assert\n (let (($x23769 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_962_64)))\n (not $x23769)))\n(assert\n (let (($x21804 (= (_ bv0 64) unconstrained_ret_mbrtowc_884_64)))\n (not $x21804)))\n(assert\n (let (($x20204 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_884_64)))\n (not $x20204)))\n(assert\n (let (($x7988 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_884_64)))\n (not $x7988)))\n(assert\n (let ((?x15017 (bvadd (_ bv1 64) unconstrained_ret_mbrtowc_815_64)))\n (let ((?x17430 (bvadd ?x15017 unconstrained_ret_mbrtowc_884_64)))\n (let ((?x32624 (bvadd ?x17430 unconstrained_ret_mbrtowc_962_64)))\n (let (($x31142 (bvule (_ bv2 64) ?x32624)))\n (not $x31142))))))\n(assert\n (let ((?x9023 (bvadd (_ bv576460752303357907 64) unconstrained_ret_mbrtowc_815_64)))\n (let ((?x7954 (bvadd ?x9023 unconstrained_ret_mbrtowc_884_64)))\n (let ((?x8777 (bvadd ?x7954 unconstrained_ret_mbrtowc_962_64)))\n (bvule (_ bv576460752303357906 64) ?x8777)))))\n(assert\n (let ((?x9023 (bvadd (_ bv576460752303357907 64) unconstrained_ret_mbrtowc_815_64)))\n (let ((?x7954 (bvadd ?x9023 unconstrained_ret_mbrtowc_884_64)))\n (let ((?x8777 (bvadd ?x7954 unconstrained_ret_mbrtowc_962_64)))\n (let ((?x37288 ((_ extract 63 59) ?x8777)))\n (= (_ bv0 5) ?x37288))))))\n(assert\n (let ((?x4757 ((_ extract 58 0) unconstrained_ret_mbrtowc_962_64)))\n (let ((?x25031 ((_ extract 58 0) unconstrained_ret_mbrtowc_884_64)))\n (let ((?x18871 (bvadd (bvadd (_ bv576460752303357907 59) ((_ extract 58 0) unconstrained_ret_mbrtowc_815_64)) ?x25031)))\n (let ((?x22778 (bvadd ?x18871 ?x4757)))\n (bvule ?x22778 (_ bv576460752303357907 59)))))))\n(assert\n (let ((?x15102 (bvadd unconstrained_ret_mbrtowc_815_64 unconstrained_ret_mbrtowc_884_64)))\n (let ((?x14097 (bvadd ?x15102 unconstrained_ret_mbrtowc_962_64)))\n (let ((?x42803 (bvadd ?x14097 (_ bv576460752303357907 64))))\n (let (($x35800 (and (distinct (_ bv576460752303357907 64) ?x42803) true)))\n (let (($x15937 (and (distinct (_ bv576460752303357906 64) ?x42803) true)))\n (and $x15937 $x35800)))))))\n(check-sat)\n",
    "time": 5.055037260055542,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=2, tm_hour=21, tm_min=59, tm_sec=10, tm_wday=2, tm_yday=337, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            0.5349538326263428
        ]
    }
}