{
    "filename": "chroot",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun unconstrained_ret_mbrtowc_1220_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_1148_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_1078_64 () (_ BitVec 64))\n(declare-fun sym_argv_0_80 () (_ BitVec 80))\n(declare-fun strlen_1067_64 () (_ BitVec 64))\n(assert\n (let (($x5981 (= (_ bv0 64) unconstrained_ret_mbrtowc_1220_64)))\n (not $x5981)))\n(assert\n (let (($x174 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1220_64)))\n (not $x174)))\n(assert\n (let (($x38722 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1220_64)))\n (not $x38722)))\n(assert\n (let (($x32654 (= (_ bv0 64) unconstrained_ret_mbrtowc_1148_64)))\n (not $x32654)))\n(assert\n (let (($x20823 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1148_64)))\n (not $x20823)))\n(assert\n (let (($x29952 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1148_64)))\n (not $x29952)))\n(assert\n (let (($x37258 (= (_ bv0 64) unconstrained_ret_mbrtowc_1078_64)))\n (not $x37258)))\n(assert\n (let (($x29858 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1078_64)))\n (not $x29858)))\n(assert\n (let (($x8155 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1078_64)))\n (not $x8155)))\n(assert\n (let ((?x960 ((_ extract 39 39) sym_argv_0_80)))\n (= (_ bv0 1) ?x960)))\n(assert\n (let ((?x915 ((_ extract 31 31) sym_argv_0_80)))\n (= (_ bv0 1) ?x915)))\n(assert\n (let ((?x973 ((_ extract 23 23) sym_argv_0_80)))\n (= (_ bv0 1) ?x973)))\n(assert\n (let ((?x927 ((_ extract 15 15) sym_argv_0_80)))\n (= (_ bv0 1) ?x927)))\n(assert\n (let ((?x921 ((_ extract 7 7) sym_argv_0_80)))\n (= (_ bv0 1) ?x921)))\n(assert\n (let ((?x962 ((_ extract 38 32) sym_argv_0_80)))\n (bvule ?x962 (_ bv126 7))))\n(assert\n (let ((?x917 ((_ extract 30 24) sym_argv_0_80)))\n (bvule ?x917 (_ bv126 7))))\n(assert\n (let ((?x965 ((_ extract 22 16) sym_argv_0_80)))\n (bvule ?x965 (_ bv126 7))))\n(assert\n (let ((?x932 ((_ extract 14 8) sym_argv_0_80)))\n (bvule ?x932 (_ bv126 7))))\n(assert\n (let ((?x906 ((_ extract 6 0) sym_argv_0_80)))\n (bvule ?x906 (_ bv126 7))))\n(assert\n (let ((?x16 ((_ extract 79 72) sym_argv_0_80)))\n (= (_ bv13 8) ?x16)))\n(assert\n (let ((?x24 ((_ extract 71 64) sym_argv_0_80)))\n (= (_ bv39 8) ?x24)))\n(assert\n (let ((?x18 ((_ extract 63 56) sym_argv_0_80)))\n (= (_ bv39 8) ?x18)))\n(assert\n (let ((?x6821 ((_ extract 53 48) sym_argv_0_80)))\n (let (($x3337 (bvule ?x6821 (_ bv39 6))))\n (let ((?x6883 ((_ extract 55 54) sym_argv_0_80)))\n (let (($x5909 (= (_ bv0 2) ?x6883)))\n (let (($x8114 (and $x5909 $x3337)))\n (let ((?x9313 (ite $x8114 (_ bv2 8) (_ bv1 8))))\n (let (($x6499 (= (_ bv0 8) ?x9313)))\n (not $x6499)))))))))\n(assert\n (let ((?x31 ((_ extract 55 48) sym_argv_0_80)))\n (= (_ bv92 8) ?x31)))\n(assert\n (let ((?x22083 ((_ extract 45 40) sym_argv_0_80)))\n (let (($x15991 (bvule ?x22083 (_ bv39 6))))\n (let ((?x18029 ((_ extract 47 46) sym_argv_0_80)))\n (let (($x8891 (= (_ bv0 2) ?x18029)))\n (let (($x23377 (and $x8891 $x15991)))\n (let ((?x5242 (ite $x23377 (_ bv2 8) (_ bv1 8))))\n (let (($x5261 (= (_ bv0 8) ?x5242)))\n (not $x5261)))))))))\n(assert\n (let ((?x29 ((_ extract 47 40) sym_argv_0_80)))\n (= (_ bv64 8) ?x29)))\n(assert\n (let ((?x37124 (bvadd (_ bv576460752303357897 64) strlen_1067_64)))\n (let ((?x35 ((_ extract 7 0) sym_argv_0_80)))\n (let (($x2540 (= (_ bv0 8) ?x35)))\n (let ((?x3835 (ite $x2540 (_ bv576460752303357906 64) (_ bv576460752303357907 64))))\n (let ((?x19 ((_ extract 15 8) sym_argv_0_80)))\n (let (($x3162 (= (_ bv0 8) ?x19)))\n (let ((?x2708 (ite $x3162 (_ bv576460752303357905 64) ?x3835)))\n (let ((?x21 ((_ extract 23 16) sym_argv_0_80)))\n (let (($x3603 (= (_ bv0 8) ?x21)))\n (let ((?x1263 (ite $x3603 (_ bv576460752303357904 64) ?x2708)))\n (let ((?x23 ((_ extract 31 24) sym_argv_0_80)))\n (let (($x3636 (= (_ bv0 8) ?x23)))\n (let ((?x2214 (ite $x3636 (_ bv576460752303357903 64) ?x1263)))\n (let ((?x27 ((_ extract 39 32) sym_argv_0_80)))\n (let (($x3475 (= (_ bv0 8) ?x27)))\n (let ((?x2663 (ite $x3475 (_ bv576460752303357902 64) ?x2214)))\n (= ?x2663 ?x37124))))))))))))))))))\n(assert\n (let ((?x9836 (bvadd (_ bv4 64) unconstrained_ret_mbrtowc_1078_64)))\n (let ((?x31764 (bvadd ?x9836 unconstrained_ret_mbrtowc_1148_64)))\n (let ((?x12086 (bvadd ?x31764 unconstrained_ret_mbrtowc_1220_64)))\n (let (($x41392 (bvule strlen_1067_64 ?x12086)))\n (not $x41392))))))\n(assert\n (let ((?x14603 (bvadd (_ bv576460752303357901 64) unconstrained_ret_mbrtowc_1078_64)))\n (let ((?x15164 (bvadd ?x14603 unconstrained_ret_mbrtowc_1148_64)))\n (let ((?x42440 (bvadd ?x15164 unconstrained_ret_mbrtowc_1220_64)))\n (bvule (_ bv576460752303357897 64) ?x42440)))))\n(assert\n (let ((?x14603 (bvadd (_ bv576460752303357901 64) unconstrained_ret_mbrtowc_1078_64)))\n (let ((?x15164 (bvadd ?x14603 unconstrained_ret_mbrtowc_1148_64)))\n (let ((?x42440 (bvadd ?x15164 unconstrained_ret_mbrtowc_1220_64)))\n (let ((?x41855 ((_ extract 63 59) ?x42440)))\n (= (_ bv0 5) ?x41855))))))\n(assert\n (let ((?x25412 ((_ extract 58 0) unconstrained_ret_mbrtowc_1220_64)))\n (let ((?x34996 ((_ extract 58 0) unconstrained_ret_mbrtowc_1148_64)))\n (let ((?x32731 ((_ extract 58 0) unconstrained_ret_mbrtowc_1078_64)))\n (let ((?x22463 (bvadd (_ bv576460752303357901 59) ?x32731)))\n (let ((?x35812 (bvadd ?x22463 ?x34996)))\n (let ((?x46939 (bvadd ?x35812 ?x25412)))\n (bvule ?x46939 (_ bv576460752303357906 59)))))))))\n(assert\n (let ((?x34579 (bvadd unconstrained_ret_mbrtowc_1078_64 unconstrained_ret_mbrtowc_1148_64)))\n (let ((?x34933 (bvadd ?x34579 unconstrained_ret_mbrtowc_1220_64)))\n (let ((?x14319 (bvadd ?x34933 (_ bv576460752303357901 64))))\n (let (($x27137 (and (distinct (_ bv576460752303357902 64) ?x14319) true)))\n (let (($x2638 (and (distinct (_ bv576460752303357901 64) ?x14319) true)))\n (let (($x11070 (and (distinct (_ bv576460752303357906 64) ?x14319) true)))\n (let (($x8869 (and (distinct (_ bv576460752303357904 64) ?x14319) true)))\n (let (($x21907 (and (distinct (_ bv576460752303357897 64) ?x14319) true)))\n (and $x21907 $x8869 $x11070 $x2638 $x27137))))))))))\n(assert\n (let ((?x34579 (bvadd unconstrained_ret_mbrtowc_1078_64 unconstrained_ret_mbrtowc_1148_64)))\n (let ((?x34933 (bvadd ?x34579 unconstrained_ret_mbrtowc_1220_64)))\n (let ((?x14319 (bvadd ?x34933 (_ bv576460752303357901 64))))\n (and (distinct ?x14319 (_ bv576460752303357899 64)) true)))))\n(assert\n (let ((?x34579 (bvadd unconstrained_ret_mbrtowc_1078_64 unconstrained_ret_mbrtowc_1148_64)))\n (let ((?x34933 (bvadd ?x34579 unconstrained_ret_mbrtowc_1220_64)))\n (let ((?x14319 (bvadd ?x34933 (_ bv576460752303357901 64))))\n (and (distinct ?x14319 (_ bv576460752303357903 64)) true)))))\n(assert\n (let ((?x34579 (bvadd unconstrained_ret_mbrtowc_1078_64 unconstrained_ret_mbrtowc_1148_64)))\n (let ((?x34933 (bvadd ?x34579 unconstrained_ret_mbrtowc_1220_64)))\n (let ((?x14319 (bvadd ?x34933 (_ bv576460752303357901 64))))\n (and (distinct ?x14319 (_ bv576460752303357898 64)) true)))))\n(assert\n (let ((?x34579 (bvadd unconstrained_ret_mbrtowc_1078_64 unconstrained_ret_mbrtowc_1148_64)))\n (let ((?x34933 (bvadd ?x34579 unconstrained_ret_mbrtowc_1220_64)))\n (let ((?x14319 (bvadd ?x34933 (_ bv576460752303357901 64))))\n (and (distinct ?x14319 (_ bv576460752303357900 64)) true)))))\n(assert\n (let ((?x34579 (bvadd unconstrained_ret_mbrtowc_1078_64 unconstrained_ret_mbrtowc_1148_64)))\n (let ((?x34933 (bvadd ?x34579 unconstrained_ret_mbrtowc_1220_64)))\n (let ((?x14319 (bvadd ?x34933 (_ bv576460752303357901 64))))\n (and (distinct ?x14319 (_ bv576460752303357905 64)) true)))))\n(check-sat)\n",
    "time": 60.8368284702301,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=3, tm_hour=18, tm_min=4, tm_sec=9, tm_wday=3, tm_yday=338, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            16.712555646896362
        ]
    }
}