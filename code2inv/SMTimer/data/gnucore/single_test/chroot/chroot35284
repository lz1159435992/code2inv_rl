{
    "filename": "chroot",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun unconstrained_ret_mbrtowc_1096_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_1166_64 () (_ BitVec 64))\n(declare-fun sym_argv_0_80 () (_ BitVec 80))\n(declare-fun strlen_1084_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_1236_64 () (_ BitVec 64))\n(assert\n (let (($x12144 (= (_ bv0 64) unconstrained_ret_mbrtowc_1096_64)))\n (not $x12144)))\n(assert\n (let (($x21809 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1096_64)))\n (not $x21809)))\n(assert\n (let (($x7219 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1096_64)))\n (not $x7219)))\n(assert\n (let (($x429 (= (_ bv0 64) unconstrained_ret_mbrtowc_1166_64)))\n (not $x429)))\n(assert\n (let (($x435 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1166_64)))\n (not $x435)))\n(assert\n (let (($x11815 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1166_64)))\n (not $x11815)))\n(assert\n (let ((?x960 ((_ extract 39 39) sym_argv_0_80)))\n (= (_ bv0 1) ?x960)))\n(assert\n (let ((?x915 ((_ extract 31 31) sym_argv_0_80)))\n (= (_ bv0 1) ?x915)))\n(assert\n (let ((?x973 ((_ extract 23 23) sym_argv_0_80)))\n (= (_ bv0 1) ?x973)))\n(assert\n (let ((?x927 ((_ extract 15 15) sym_argv_0_80)))\n (= (_ bv0 1) ?x927)))\n(assert\n (let ((?x921 ((_ extract 7 7) sym_argv_0_80)))\n (= (_ bv0 1) ?x921)))\n(assert\n (let ((?x962 ((_ extract 38 32) sym_argv_0_80)))\n (bvule ?x962 (_ bv126 7))))\n(assert\n (let ((?x917 ((_ extract 30 24) sym_argv_0_80)))\n (bvule ?x917 (_ bv126 7))))\n(assert\n (let ((?x965 ((_ extract 22 16) sym_argv_0_80)))\n (bvule ?x965 (_ bv126 7))))\n(assert\n (let ((?x932 ((_ extract 14 8) sym_argv_0_80)))\n (bvule ?x932 (_ bv126 7))))\n(assert\n (let ((?x906 ((_ extract 6 0) sym_argv_0_80)))\n (bvule ?x906 (_ bv126 7))))\n(assert\n (let ((?x1130 ((_ extract 77 72) sym_argv_0_80)))\n (let (($x1247 (bvule ?x1130 (_ bv39 6))))\n (let ((?x1259 ((_ extract 79 78) sym_argv_0_80)))\n (let (($x1350 (= (_ bv0 2) ?x1259)))\n (let (($x1071 (and $x1350 $x1247)))\n (let ((?x1085 (ite $x1071 (_ bv2 8) (_ bv1 8))))\n (let (($x1389 (= (_ bv0 8) ?x1085)))\n (not $x1389)))))))))\n(assert\n (let ((?x16 ((_ extract 79 72) sym_argv_0_80)))\n (= (_ bv65 8) ?x16)))\n(assert\n (let ((?x2692 ((_ extract 69 64) sym_argv_0_80)))\n (let (($x3169 (bvule ?x2692 (_ bv39 6))))\n (let ((?x3220 ((_ extract 71 70) sym_argv_0_80)))\n (let (($x3792 (= (_ bv0 2) ?x3220)))\n (let (($x3544 (and $x3792 $x3169)))\n (let ((?x3638 (ite $x3544 (_ bv2 8) (_ bv1 8))))\n (let (($x3587 (= (_ bv0 8) ?x3638)))\n (not $x3587)))))))))\n(assert\n (let ((?x24 ((_ extract 71 64) sym_argv_0_80)))\n (= (_ bv65 8) ?x24)))\n(assert\n (let ((?x5801 ((_ extract 61 56) sym_argv_0_80)))\n (let (($x3860 (bvule ?x5801 (_ bv39 6))))\n (let ((?x5673 ((_ extract 63 62) sym_argv_0_80)))\n (let (($x5279 (= (_ bv0 2) ?x5673)))\n (let (($x5643 (and $x5279 $x3860)))\n (let ((?x2546 (ite $x5643 (_ bv2 8) (_ bv1 8))))\n (let (($x6790 (= (_ bv0 8) ?x2546)))\n (not $x6790)))))))))\n(assert\n (let ((?x18 ((_ extract 63 56) sym_argv_0_80)))\n (= (_ bv65 8) ?x18)))\n(assert\n (let ((?x31 ((_ extract 55 48) sym_argv_0_80)))\n (= (_ bv11 8) ?x31)))\n(assert\n (let ((?x22083 ((_ extract 45 40) sym_argv_0_80)))\n (let (($x15991 (bvule ?x22083 (_ bv39 6))))\n (let ((?x18029 ((_ extract 47 46) sym_argv_0_80)))\n (let (($x8891 (= (_ bv0 2) ?x18029)))\n (let (($x23377 (and $x8891 $x15991)))\n (let ((?x5242 (ite $x23377 (_ bv2 8) (_ bv1 8))))\n (let (($x5261 (= (_ bv0 8) ?x5242)))\n (not $x5261)))))))))\n(assert\n (let ((?x29 ((_ extract 47 40) sym_argv_0_80)))\n (= (_ bv64 8) ?x29)))\n(assert\n (let ((?x19568 (bvadd (_ bv576460752303357897 64) strlen_1084_64)))\n (let ((?x35 ((_ extract 7 0) sym_argv_0_80)))\n (let (($x2540 (= (_ bv0 8) ?x35)))\n (let ((?x3835 (ite $x2540 (_ bv576460752303357906 64) (_ bv576460752303357907 64))))\n (let ((?x19 ((_ extract 15 8) sym_argv_0_80)))\n (let (($x3162 (= (_ bv0 8) ?x19)))\n (let ((?x2708 (ite $x3162 (_ bv576460752303357905 64) ?x3835)))\n (let ((?x21 ((_ extract 23 16) sym_argv_0_80)))\n (let (($x3603 (= (_ bv0 8) ?x21)))\n (let ((?x1263 (ite $x3603 (_ bv576460752303357904 64) ?x2708)))\n (let ((?x23 ((_ extract 31 24) sym_argv_0_80)))\n (let (($x3636 (= (_ bv0 8) ?x23)))\n (let ((?x2214 (ite $x3636 (_ bv576460752303357903 64) ?x1263)))\n (let ((?x27 ((_ extract 39 32) sym_argv_0_80)))\n (let (($x3475 (= (_ bv0 8) ?x27)))\n (let ((?x2663 (ite $x3475 (_ bv576460752303357902 64) ?x2214)))\n (= ?x2663 ?x19568))))))))))))))))))\n(assert\n (let (($x15317 (= (_ bv0 64) unconstrained_ret_mbrtowc_1236_64)))\n (not $x15317)))\n(assert\n (let (($x24303 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1236_64)))\n (not $x24303)))\n(assert\n (let (($x26158 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1236_64)))\n (not $x26158)))\n(assert\n (let ((?x30085 (bvadd (_ bv4 64) unconstrained_ret_mbrtowc_1096_64)))\n (let ((?x23533 (bvadd ?x30085 unconstrained_ret_mbrtowc_1166_64)))\n (let ((?x14696 (bvadd ?x23533 unconstrained_ret_mbrtowc_1236_64)))\n (let (($x45640 (bvule strlen_1084_64 ?x14696)))\n (not $x45640))))))\n(assert\n (let ((?x19938 (bvadd unconstrained_ret_mbrtowc_1096_64 unconstrained_ret_mbrtowc_1166_64)))\n (let ((?x702 (bvadd ?x19938 unconstrained_ret_mbrtowc_1236_64)))\n (let ((?x39827 (bvadd ?x702 (_ bv576460752303357901 64))))\n (bvule ?x39827 (_ bv576460752303357899 64))))))\n(assert\n (let ((?x19938 (bvadd unconstrained_ret_mbrtowc_1096_64 unconstrained_ret_mbrtowc_1166_64)))\n (let ((?x702 (bvadd ?x19938 unconstrained_ret_mbrtowc_1236_64)))\n (let ((?x39827 (bvadd ?x702 (_ bv576460752303357901 64))))\n (bvule ?x39827 (_ bv576460752303357897 64))))))\n(assert\n (let ((?x19938 (bvadd unconstrained_ret_mbrtowc_1096_64 unconstrained_ret_mbrtowc_1166_64)))\n (let ((?x702 (bvadd ?x19938 unconstrained_ret_mbrtowc_1236_64)))\n (let ((?x39827 (bvadd ?x702 (_ bv576460752303357901 64))))\n (= ?x39827 (_ bv576460752303357896 64))))))\n(check-sat)\n",
    "time": 5.079252004623413,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=3, tm_hour=20, tm_min=1, tm_sec=51, tm_wday=3, tm_yday=338, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            0.25653934478759766
        ]
    }
}