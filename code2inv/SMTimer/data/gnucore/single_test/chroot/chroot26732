{
    "filename": "chroot",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun sym_argv_0_80 () (_ BitVec 80))\n(declare-fun strlen_951_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_1088_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_960_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_1022_64 () (_ BitVec 64))\n(assert\n (let ((?x1028 ((_ extract 55 55) sym_argv_0_80)))\n (= (_ bv0 1) ?x1028)))\n(assert\n (let ((?x980 ((_ extract 47 47) sym_argv_0_80)))\n (= (_ bv0 1) ?x980)))\n(assert\n (let ((?x960 ((_ extract 39 39) sym_argv_0_80)))\n (= (_ bv0 1) ?x960)))\n(assert\n (let ((?x915 ((_ extract 31 31) sym_argv_0_80)))\n (= (_ bv0 1) ?x915)))\n(assert\n (let ((?x973 ((_ extract 23 23) sym_argv_0_80)))\n (= (_ bv0 1) ?x973)))\n(assert\n (let ((?x927 ((_ extract 15 15) sym_argv_0_80)))\n (= (_ bv0 1) ?x927)))\n(assert\n (let ((?x921 ((_ extract 7 7) sym_argv_0_80)))\n (= (_ bv0 1) ?x921)))\n(assert\n (let ((?x1032 ((_ extract 54 48) sym_argv_0_80)))\n (bvule ?x1032 (_ bv126 7))))\n(assert\n (let ((?x982 ((_ extract 46 40) sym_argv_0_80)))\n (bvule ?x982 (_ bv126 7))))\n(assert\n (let ((?x962 ((_ extract 38 32) sym_argv_0_80)))\n (bvule ?x962 (_ bv126 7))))\n(assert\n (let ((?x917 ((_ extract 30 24) sym_argv_0_80)))\n (bvule ?x917 (_ bv126 7))))\n(assert\n (let ((?x965 ((_ extract 22 16) sym_argv_0_80)))\n (bvule ?x965 (_ bv126 7))))\n(assert\n (let ((?x932 ((_ extract 14 8) sym_argv_0_80)))\n (bvule ?x932 (_ bv126 7))))\n(assert\n (let ((?x906 ((_ extract 6 0) sym_argv_0_80)))\n (bvule ?x906 (_ bv126 7))))\n(assert\n (let ((?x1130 ((_ extract 77 72) sym_argv_0_80)))\n (let (($x1247 (bvule ?x1130 (_ bv39 6))))\n (let ((?x1259 ((_ extract 79 78) sym_argv_0_80)))\n (let (($x1350 (= (_ bv0 2) ?x1259)))\n (let (($x1071 (and $x1350 $x1247)))\n (let ((?x1085 (ite $x1071 (_ bv2 8) (_ bv1 8))))\n (let (($x1389 (= (_ bv0 8) ?x1085)))\n (not $x1389)))))))))\n(assert\n (let ((?x16 ((_ extract 79 72) sym_argv_0_80)))\n (= (_ bv65 8) ?x16)))\n(assert\n (let ((?x24 ((_ extract 71 64) sym_argv_0_80)))\n (= (_ bv39 8) ?x24)))\n(assert\n (let ((?x5801 ((_ extract 61 56) sym_argv_0_80)))\n (let (($x3860 (bvule ?x5801 (_ bv39 6))))\n (let ((?x5673 ((_ extract 63 62) sym_argv_0_80)))\n (let (($x5279 (= (_ bv0 2) ?x5673)))\n (let (($x5643 (and $x5279 $x3860)))\n (let ((?x2546 (ite $x5643 (_ bv2 8) (_ bv1 8))))\n (let (($x6790 (= (_ bv0 8) ?x2546)))\n (not $x6790)))))))))\n(assert\n (let ((?x18 ((_ extract 63 56) sym_argv_0_80)))\n (= (_ bv64 8) ?x18)))\n(assert\n (let ((?x9685 (bvadd (_ bv576460752303357897 64) strlen_951_64)))\n (let ((?x35 ((_ extract 7 0) sym_argv_0_80)))\n (let (($x2540 (= (_ bv0 8) ?x35)))\n (let ((?x3835 (ite $x2540 (_ bv576460752303357906 64) (_ bv576460752303357907 64))))\n (let ((?x19 ((_ extract 15 8) sym_argv_0_80)))\n (let (($x3162 (= (_ bv0 8) ?x19)))\n (let ((?x2708 (ite $x3162 (_ bv576460752303357905 64) ?x3835)))\n (let ((?x21 ((_ extract 23 16) sym_argv_0_80)))\n (let (($x3603 (= (_ bv0 8) ?x21)))\n (let ((?x1263 (ite $x3603 (_ bv576460752303357904 64) ?x2708)))\n (let ((?x23 ((_ extract 31 24) sym_argv_0_80)))\n (let (($x3636 (= (_ bv0 8) ?x23)))\n (let ((?x2214 (ite $x3636 (_ bv576460752303357903 64) ?x1263)))\n (let ((?x27 ((_ extract 39 32) sym_argv_0_80)))\n (let (($x3475 (= (_ bv0 8) ?x27)))\n (let ((?x2663 (ite $x3475 (_ bv576460752303357902 64) ?x2214)))\n (let ((?x29 ((_ extract 47 40) sym_argv_0_80)))\n (let (($x2233 (= (_ bv0 8) ?x29)))\n (let ((?x3235 (ite $x2233 (_ bv576460752303357901 64) ?x2663)))\n (let ((?x31 ((_ extract 55 48) sym_argv_0_80)))\n (let (($x2405 (= (_ bv0 8) ?x31)))\n (let ((?x1512 (ite $x2405 (_ bv576460752303357900 64) ?x3235)))\n (= ?x1512 ?x9685))))))))))))))))))))))))\n(assert\n (let (($x36685 (= (_ bv0 64) unconstrained_ret_mbrtowc_1088_64)))\n (not $x36685)))\n(assert\n (let (($x17074 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1088_64)))\n (not $x17074)))\n(assert\n (let (($x22302 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1088_64)))\n (not $x22302)))\n(assert\n (let (($x15675 (= (_ bv0 64) unconstrained_ret_mbrtowc_960_64)))\n (not $x15675)))\n(assert\n (let (($x15265 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_960_64)))\n (not $x15265)))\n(assert\n (let (($x10936 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_960_64)))\n (not $x10936)))\n(assert\n (let (($x27740 (= (_ bv0 64) unconstrained_ret_mbrtowc_1022_64)))\n (not $x27740)))\n(assert\n (let (($x13678 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1022_64)))\n (not $x13678)))\n(assert\n (let (($x14229 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1022_64)))\n (not $x14229)))\n(assert\n (let ((?x22804 (bvadd (_ bv2 64) unconstrained_ret_mbrtowc_960_64)))\n (let ((?x4360 (bvadd ?x22804 unconstrained_ret_mbrtowc_1022_64)))\n (let ((?x27805 (bvadd ?x4360 unconstrained_ret_mbrtowc_1088_64)))\n (let (($x34717 (bvule strlen_951_64 ?x27805)))\n (not $x34717))))))\n(assert\n (let ((?x23000 (bvadd (_ bv576460752303357899 64) unconstrained_ret_mbrtowc_960_64)))\n (let ((?x9759 (bvadd ?x23000 unconstrained_ret_mbrtowc_1022_64)))\n (let ((?x23815 (bvadd ?x9759 unconstrained_ret_mbrtowc_1088_64)))\n (bvule (_ bv576460752303357897 64) ?x23815)))))\n(assert\n (let ((?x23000 (bvadd (_ bv576460752303357899 64) unconstrained_ret_mbrtowc_960_64)))\n (let ((?x9759 (bvadd ?x23000 unconstrained_ret_mbrtowc_1022_64)))\n (let ((?x23815 (bvadd ?x9759 unconstrained_ret_mbrtowc_1088_64)))\n (let ((?x31802 ((_ extract 63 59) ?x23815)))\n (= (_ bv0 5) ?x31802))))))\n(assert\n (let ((?x9387 ((_ extract 58 0) unconstrained_ret_mbrtowc_1088_64)))\n (let ((?x4996 ((_ extract 58 0) unconstrained_ret_mbrtowc_1022_64)))\n (let ((?x8216 ((_ extract 58 0) unconstrained_ret_mbrtowc_960_64)))\n (let ((?x13836 (bvadd (_ bv576460752303357899 59) ?x8216)))\n (let ((?x19818 (bvadd ?x13836 ?x4996)))\n (let ((?x32829 (bvadd ?x19818 ?x9387)))\n (bvule ?x32829 (_ bv576460752303357906 59)))))))))\n(assert\n (let ((?x23103 (bvadd unconstrained_ret_mbrtowc_960_64 unconstrained_ret_mbrtowc_1022_64)))\n (let ((?x20441 (bvadd ?x23103 unconstrained_ret_mbrtowc_1088_64)))\n (let ((?x12018 (bvadd ?x20441 (_ bv576460752303357899 64))))\n (let (($x37768 (and (distinct (_ bv576460752303357897 64) ?x12018) true)))\n (let (($x19824 (and (distinct (_ bv576460752303357899 64) ?x12018) true)))\n (let (($x7538 (and (distinct (_ bv576460752303357904 64) ?x12018) true)))\n (let (($x36600 (and (distinct (_ bv576460752303357906 64) ?x12018) true)))\n (and $x36600 $x7538 $x19824 $x37768)))))))))\n(assert\n (let ((?x23103 (bvadd unconstrained_ret_mbrtowc_960_64 unconstrained_ret_mbrtowc_1022_64)))\n (let ((?x20441 (bvadd ?x23103 unconstrained_ret_mbrtowc_1088_64)))\n (let ((?x12018 (bvadd ?x20441 (_ bv576460752303357899 64))))\n (and (distinct ?x12018 (_ bv576460752303357902 64)) true)))))\n(assert\n (let ((?x23103 (bvadd unconstrained_ret_mbrtowc_960_64 unconstrained_ret_mbrtowc_1022_64)))\n (let ((?x20441 (bvadd ?x23103 unconstrained_ret_mbrtowc_1088_64)))\n (let ((?x12018 (bvadd ?x20441 (_ bv576460752303357899 64))))\n (and (distinct ?x12018 (_ bv576460752303357903 64)) true)))))\n(assert\n (let ((?x23103 (bvadd unconstrained_ret_mbrtowc_960_64 unconstrained_ret_mbrtowc_1022_64)))\n (let ((?x20441 (bvadd ?x23103 unconstrained_ret_mbrtowc_1088_64)))\n (let ((?x12018 (bvadd ?x20441 (_ bv576460752303357899 64))))\n (and (distinct ?x12018 (_ bv576460752303357900 64)) true)))))\n(assert\n (let ((?x23103 (bvadd unconstrained_ret_mbrtowc_960_64 unconstrained_ret_mbrtowc_1022_64)))\n (let ((?x20441 (bvadd ?x23103 unconstrained_ret_mbrtowc_1088_64)))\n (let ((?x12018 (bvadd ?x20441 (_ bv576460752303357899 64))))\n (and (distinct ?x12018 (_ bv576460752303357901 64)) true)))))\n(assert\n (let ((?x23103 (bvadd unconstrained_ret_mbrtowc_960_64 unconstrained_ret_mbrtowc_1022_64)))\n (let ((?x20441 (bvadd ?x23103 unconstrained_ret_mbrtowc_1088_64)))\n (let ((?x12018 (bvadd ?x20441 (_ bv576460752303357899 64))))\n (and (distinct ?x12018 (_ bv576460752303357905 64)) true)))))\n(assert\n (let ((?x23103 (bvadd unconstrained_ret_mbrtowc_960_64 unconstrained_ret_mbrtowc_1022_64)))\n (let ((?x20441 (bvadd ?x23103 unconstrained_ret_mbrtowc_1088_64)))\n (let ((?x12018 (bvadd ?x20441 (_ bv576460752303357899 64))))\n (and (distinct ?x12018 (_ bv576460752303357898 64)) true)))))\n(check-sat)\n",
    "time": 72.04373478889465,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=3, tm_hour=9, tm_min=59, tm_sec=47, tm_wday=3, tm_yday=338, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            13.450925350189209
        ]
    }
}