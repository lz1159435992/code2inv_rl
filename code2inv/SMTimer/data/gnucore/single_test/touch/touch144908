{
    "filename": "touch",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun sym_argv2_1_16 () (_ BitVec 16))\n(declare-fun strlen_4429_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_4444_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_4517_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_4585_64 () (_ BitVec 64))\n(assert\n (let ((?x136610 ((_ extract 13 8) sym_argv2_1_16)))\n (let (($x89514 (bvule ?x136610 (_ bv39 6))))\n (let ((?x123391 ((_ extract 15 14) sym_argv2_1_16)))\n (let (($x38958 (= (_ bv0 2) ?x123391)))\n (let (($x95901 (and $x38958 $x89514)))\n (let ((?x2210 (ite $x95901 (_ bv2 8) (_ bv1 8))))\n (let (($x37998 (= (_ bv0 8) ?x2210)))\n (not $x37998)))))))))\n(assert\n (let ((?x80188 ((_ extract 15 8) sym_argv2_1_16)))\n (= (_ bv92 8) ?x80188)))\n(assert\n (let ((?x44896 ((_ extract 7 0) sym_argv2_1_16)))\n (let (($x65246 (bvule (_ bv39 8) ?x44896)))\n (let (($x26176 (= (_ bv39 8) ?x44896)))\n (let (($x91389 (or $x26176 $x65246)))\n (let ((?x40793 (ite $x91389 (_ bv0 8) (_ bv255 8))))\n (let (($x57202 (= (_ bv0 8) ?x40793)))\n (let (($x99267 (not $x57202)))\n (let ((?x4356 ((_ extract 5 0) sym_argv2_1_16)))\n (let (($x135635 (bvule ?x4356 (_ bv39 6))))\n (let ((?x79371 ((_ extract 7 6) sym_argv2_1_16)))\n (let (($x87751 (= (_ bv0 2) ?x79371)))\n (let (($x104405 (and $x87751 $x135635)))\n (let ((?x30587 (ite $x104405 (_ bv2 8) (_ bv1 8))))\n (let ((?x129593 (ite $x65246 ?x30587 (_ bv255 8))))\n (let ((?x6263 (ite $x26176 (_ bv0 8) ?x129593)))\n (let (($x132212 (= (_ bv0 8) ?x6263)))\n (let (($x85511 (not $x132212)))\n (or $x85511 $x99267)))))))))))))))))))\n(assert\n (let ((?x49105 ((_ extract 6 0) sym_argv2_1_16)))\n (let (($x47549 (bvule ?x49105 (_ bv126 7))))\n (let (($x124939 (not $x47549)))\n (let ((?x68688 ((_ extract 7 7) sym_argv2_1_16)))\n (let (($x82102 (= (_ bv0 1) ?x68688)))\n (let (($x20321 (not $x82102)))\n (or $x20321 $x124939))))))))\n(assert\n (let ((?x18938 (bvadd (_ bv576460752303357907 64) strlen_4429_64)))\n (let ((?x44896 ((_ extract 7 0) sym_argv2_1_16)))\n (let (($x14124 (= (_ bv0 8) ?x44896)))\n (let ((?x38697 (ite $x14124 (_ bv576460752303357908 64) (_ bv576460752303357909 64))))\n (= ?x38697 ?x18938))))))\n(assert\n (let (($x37918 (= (_ bv0 64) unconstrained_ret_mbrtowc_4444_64)))\n (not $x37918)))\n(assert\n (let (($x44457 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_4444_64)))\n (not $x44457)))\n(assert\n (let (($x6486 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_4444_64)))\n (not $x6486)))\n(assert\n (let (($x12142 (= (_ bv0 64) unconstrained_ret_mbrtowc_4517_64)))\n (not $x12142)))\n(assert\n (let (($x65838 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_4517_64)))\n (not $x65838)))\n(assert\n (let (($x111384 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_4517_64)))\n (not $x111384)))\n(assert\n (let (($x66705 (= (_ bv0 64) unconstrained_ret_mbrtowc_4585_64)))\n (not $x66705)))\n(assert\n (let (($x65277 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_4585_64)))\n (not $x65277)))\n(assert\n (let (($x54599 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_4585_64)))\n (not $x54599)))\n(assert\n (let ((?x39342 (bvadd (_ bv1 64) unconstrained_ret_mbrtowc_4444_64)))\n (let ((?x115460 (bvadd ?x39342 unconstrained_ret_mbrtowc_4517_64)))\n (let ((?x15087 (bvadd ?x115460 unconstrained_ret_mbrtowc_4585_64)))\n (let (($x81968 (bvule strlen_4429_64 ?x15087)))\n (not $x81968))))))\n(assert\n (let ((?x27594 (bvadd (_ bv576460752303357908 64) unconstrained_ret_mbrtowc_4444_64)))\n (let ((?x13809 (bvadd ?x27594 unconstrained_ret_mbrtowc_4517_64)))\n (let ((?x23794 (bvadd ?x13809 unconstrained_ret_mbrtowc_4585_64)))\n (bvule (_ bv576460752303357907 64) ?x23794)))))\n(assert\n (let ((?x27594 (bvadd (_ bv576460752303357908 64) unconstrained_ret_mbrtowc_4444_64)))\n (let ((?x13809 (bvadd ?x27594 unconstrained_ret_mbrtowc_4517_64)))\n (let ((?x23794 (bvadd ?x13809 unconstrained_ret_mbrtowc_4585_64)))\n (let ((?x76893 ((_ extract 63 59) ?x23794)))\n (= (_ bv0 5) ?x76893))))))\n(assert\n (let ((?x82593 ((_ extract 58 0) unconstrained_ret_mbrtowc_4585_64)))\n (let ((?x22742 ((_ extract 58 0) unconstrained_ret_mbrtowc_4517_64)))\n (let ((?x29851 (bvadd (bvadd (_ bv576460752303357908 59) ((_ extract 58 0) unconstrained_ret_mbrtowc_4444_64)) ?x22742)))\n (let ((?x82137 (bvadd ?x29851 ?x82593)))\n (bvule ?x82137 (_ bv576460752303357908 59)))))))\n(assert\n (let ((?x17119 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_4585_64)))\n (let ((?x11208 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_4517_64)))\n (let ((?x108920 (bvadd (_ bv18446744073709551615 64) ?x11208)))\n (let ((?x135806 (bvadd ?x108920 ?x17119)))\n (let (($x96620 (= unconstrained_ret_mbrtowc_4444_64 ?x135806)))\n (let ((?x109423 (bvadd ?x11208 ?x17119)))\n (let (($x107062 (= unconstrained_ret_mbrtowc_4444_64 ?x109423)))\n (or $x107062 $x96620)))))))))\n(assert\n (let ((?x17119 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_4585_64)))\n (let ((?x11208 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_4517_64)))\n (let ((?x108920 (bvadd (_ bv18446744073709551615 64) ?x11208)))\n (let ((?x135806 (bvadd ?x108920 ?x17119)))\n (let (($x96620 (= unconstrained_ret_mbrtowc_4444_64 ?x135806)))\n (let ((?x70797 (ite $x96620 (_ bv92 8) (_ bv190 8))))\n (let ((?x44896 ((_ extract 7 0) sym_argv2_1_16)))\n (let ((?x109423 (bvadd ?x11208 ?x17119)))\n (let (($x107062 (= unconstrained_ret_mbrtowc_4444_64 ?x109423)))\n (let ((?x89427 (ite $x107062 ?x44896 ?x70797)))\n (let (($x8714 (= (_ bv0 8) ?x89427)))\n (not $x8714)))))))))))))\n(assert\n (let ((?x113352 (bvadd (bvadd (_ bv2 64) unconstrained_ret_mbrtowc_4444_64) unconstrained_ret_mbrtowc_4517_64)))\n (let ((?x45052 (bvadd ?x113352 unconstrained_ret_mbrtowc_4585_64)))\n (let (($x109957 (bvule strlen_4429_64 ?x45052)))\n (not $x109957)))))\n(assert\n (let ((?x135030 (bvadd unconstrained_ret_mbrtowc_4444_64 unconstrained_ret_mbrtowc_4517_64)))\n (let ((?x26318 (bvadd ?x135030 unconstrained_ret_mbrtowc_4585_64)))\n (let ((?x114744 (bvadd ?x26318 (_ bv576460752303357909 64))))\n (and (distinct (_ bv576460752303357908 64) ?x114744) true)))))\n(check-sat)\n",
    "time": 2.9256784915924072,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=3, tm_hour=10, tm_min=54, tm_sec=42, tm_wday=3, tm_yday=338, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            0.24514484405517578
        ]
    }
}