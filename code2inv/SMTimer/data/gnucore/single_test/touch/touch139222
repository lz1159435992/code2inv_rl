{
    "filename": "touch",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun unconstrained_ret_mbrtowc_4298_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_4361_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_4440_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_4513_64 () (_ BitVec 64))\n(declare-fun strlen_1374_64 () (_ BitVec 64))\n(declare-fun mem_0_1373_1024 () (_ BitVec 1024))\n(declare-fun strlen_1382_64 () (_ BitVec 64))\n(assert\n (let (($x100114 (= (_ bv0 64) unconstrained_ret_mbrtowc_4298_64)))\n (not $x100114)))\n(assert\n (let (($x8592 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_4298_64)))\n (not $x8592)))\n(assert\n (let (($x51254 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_4298_64)))\n (not $x51254)))\n(assert\n (let (($x99656 (= (_ bv0 64) unconstrained_ret_mbrtowc_4361_64)))\n (not $x99656)))\n(assert\n (let (($x57210 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_4361_64)))\n (not $x57210)))\n(assert\n (let (($x67317 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_4361_64)))\n (not $x67317)))\n(assert\n (let (($x56975 (= (_ bv0 64) unconstrained_ret_mbrtowc_4440_64)))\n (not $x56975)))\n(assert\n (let (($x111829 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_4440_64)))\n (not $x111829)))\n(assert\n (let (($x67277 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_4440_64)))\n (not $x67277)))\n(assert\n (let (($x43331 (= (_ bv0 64) unconstrained_ret_mbrtowc_4513_64)))\n (not $x43331)))\n(assert\n (let (($x124034 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_4513_64)))\n (not $x124034)))\n(assert\n (let (($x30639 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_4513_64)))\n (not $x30639)))\n(assert\n (let ((?x64519 (bvadd (_ bv9 64) unconstrained_ret_mbrtowc_4298_64)))\n (let ((?x135090 (bvadd ?x64519 unconstrained_ret_mbrtowc_4361_64)))\n (let ((?x71303 (bvadd ?x135090 unconstrained_ret_mbrtowc_4440_64)))\n (let ((?x130880 (bvadd ?x71303 unconstrained_ret_mbrtowc_4513_64)))\n (let ((?x102292 ((_ extract 63 1) ?x130880)))\n (= (_ bv0 63) ?x102292)))))))\n(assert\n (let ((?x63212 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_4513_64)))\n (let ((?x26461 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_4440_64)))\n (let ((?x6044 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_4361_64)))\n (let ((?x45124 (bvadd (_ bv18446744073709551608 64) ?x6044)))\n (let ((?x23878 (bvadd ?x45124 ?x26461)))\n (let ((?x53077 (bvadd ?x23878 ?x63212)))\n (let (($x61148 (= unconstrained_ret_mbrtowc_4298_64 ?x53077)))\n (let ((?x48669 (bvadd (_ bv18446744073709551607 64) ?x6044)))\n (let ((?x126870 (bvadd ?x48669 ?x26461)))\n (let ((?x82539 (bvadd ?x126870 ?x63212)))\n (let (($x54681 (= unconstrained_ret_mbrtowc_4298_64 ?x82539)))\n (or $x54681 $x61148)))))))))))))\n(assert\n (let ((?x378 ((_ extract 967 960) mem_0_1373_1024)))\n (let (($x446 (= (_ bv0 8) ?x378)))\n (let ((?x12135 (ite $x446 (_ bv7 64) (_ bv8 64))))\n (let ((?x325 ((_ extract 975 968) mem_0_1373_1024)))\n (let (($x49 (= (_ bv0 8) ?x325)))\n (let ((?x127263 (ite $x49 (_ bv6 64) ?x12135)))\n (let ((?x1049 ((_ extract 983 976) mem_0_1373_1024)))\n (let (($x530 (= (_ bv0 8) ?x1049)))\n (let ((?x124826 (ite $x530 (_ bv5 64) ?x127263)))\n (let ((?x367 ((_ extract 991 984) mem_0_1373_1024)))\n (let (($x331 (= (_ bv0 8) ?x367)))\n (let ((?x9546 (ite $x331 (_ bv4 64) ?x124826)))\n (let ((?x552 ((_ extract 999 992) mem_0_1373_1024)))\n (let (($x514 (= (_ bv0 8) ?x552)))\n (let ((?x99972 (ite $x514 (_ bv3 64) ?x9546)))\n (let ((?x549 ((_ extract 1007 1000) mem_0_1373_1024)))\n (let (($x467 (= (_ bv0 8) ?x549)))\n (let ((?x108982 (ite $x467 (_ bv2 64) ?x99972)))\n (= ?x108982 strlen_1374_64))))))))))))))))))))\n(assert\n (let ((?x378 ((_ extract 967 960) mem_0_1373_1024)))\n (let (($x446 (= (_ bv0 8) ?x378)))\n (let ((?x12135 (ite $x446 (_ bv7 64) (_ bv8 64))))\n (let ((?x325 ((_ extract 975 968) mem_0_1373_1024)))\n (let (($x49 (= (_ bv0 8) ?x325)))\n (let ((?x127263 (ite $x49 (_ bv6 64) ?x12135)))\n (let ((?x1049 ((_ extract 983 976) mem_0_1373_1024)))\n (let (($x530 (= (_ bv0 8) ?x1049)))\n (let ((?x124826 (ite $x530 (_ bv5 64) ?x127263)))\n (let ((?x367 ((_ extract 991 984) mem_0_1373_1024)))\n (let (($x331 (= (_ bv0 8) ?x367)))\n (let ((?x9546 (ite $x331 (_ bv4 64) ?x124826)))\n (let ((?x552 ((_ extract 999 992) mem_0_1373_1024)))\n (let (($x514 (= (_ bv0 8) ?x552)))\n (let ((?x99972 (ite $x514 (_ bv3 64) ?x9546)))\n (let ((?x549 ((_ extract 1007 1000) mem_0_1373_1024)))\n (let (($x467 (= (_ bv0 8) ?x549)))\n (let ((?x108982 (ite $x467 (_ bv2 64) ?x99972)))\n (= ?x108982 strlen_1382_64))))))))))))))))))))\n(assert\n (let ((?x17333 ((_ extract 63 6) strlen_1382_64)))\n (= (_ bv0 58) ?x17333)))\n(assert\n (let ((?x832 ((_ extract 903 896) mem_0_1373_1024)))\n (let (($x2292 (= (_ bv46 8) ?x832)))\n (let ((?x1130 (ite $x2292 (_ bv15 8) (_ bv0 8))))\n (let ((?x553 ((_ extract 911 904) mem_0_1373_1024)))\n (let (($x2831 (= (_ bv46 8) ?x553)))\n (let ((?x2605 (ite $x2831 (_ bv14 8) ?x1130)))\n (let ((?x919 ((_ extract 919 912) mem_0_1373_1024)))\n (let (($x2460 (= (_ bv46 8) ?x919)))\n (let ((?x1226 (ite $x2460 (_ bv13 8) ?x2605)))\n (let ((?x568 ((_ extract 927 920) mem_0_1373_1024)))\n (let (($x3188 (= (_ bv46 8) ?x568)))\n (let ((?x1206 (ite $x3188 (_ bv12 8) ?x1226)))\n (let ((?x1037 ((_ extract 935 928) mem_0_1373_1024)))\n (let (($x2832 (= (_ bv46 8) ?x1037)))\n (let ((?x2563 (ite $x2832 (_ bv11 8) ?x1206)))\n (let ((?x466 ((_ extract 943 936) mem_0_1373_1024)))\n (let (($x2999 (= (_ bv46 8) ?x466)))\n (let ((?x1287 (ite $x2999 (_ bv10 8) ?x2563)))\n (let ((?x378 ((_ extract 967 960) mem_0_1373_1024)))\n (let (($x3187 (= (_ bv46 8) ?x378)))\n (let ((?x44995 (ite $x3187 (_ bv7 8) ?x1287)))\n (let ((?x325 ((_ extract 975 968) mem_0_1373_1024)))\n (let (($x2457 (= (_ bv46 8) ?x325)))\n (let ((?x60171 (ite $x2457 (_ bv6 8) ?x44995)))\n (let ((?x1049 ((_ extract 983 976) mem_0_1373_1024)))\n (let (($x3489 (= (_ bv46 8) ?x1049)))\n (let ((?x59386 (ite $x3489 (_ bv5 8) ?x60171)))\n (let ((?x367 ((_ extract 991 984) mem_0_1373_1024)))\n (let (($x3486 (= (_ bv46 8) ?x367)))\n (let ((?x54850 (ite $x3486 (_ bv4 8) ?x59386)))\n (let ((?x552 ((_ extract 999 992) mem_0_1373_1024)))\n (let (($x3483 (= (_ bv46 8) ?x552)))\n (let ((?x115554 (ite $x3483 (_ bv3 8) ?x54850)))\n (let ((?x549 ((_ extract 1007 1000) mem_0_1373_1024)))\n (let (($x3482 (= (_ bv46 8) ?x549)))\n (let ((?x97911 (ite $x3482 (_ bv2 8) ?x115554)))\n (let ((?x776 ((_ extract 1015 1008) mem_0_1373_1024)))\n (let (($x1812 (= (_ bv46 8) ?x776)))\n (let ((?x63657 (ite $x1812 (_ bv1 8) ?x97911)))\n (= (_ bv0 8) ?x63657)))))))))))))))))))))))))))))))))))))))))\n(assert\n (let (($x64652 (= (_ bv8 64) strlen_1374_64)))\n (not $x64652)))\n(assert\n (let (($x22929 (= (_ bv10 64) strlen_1374_64)))\n (not $x22929)))\n(assert\n (let (($x60245 (= (_ bv12 64) strlen_1374_64)))\n (not $x60245)))\n(assert\n (let ((?x115851 ((_ extract 5 0) strlen_1382_64)))\n (bvule ?x115851 (_ bv59 6))))\n(assert\n (let ((?x748 ((_ extract 1023 1016) mem_0_1373_1024)))\n (= (_ bv12 8) ?x748)))\n(assert\n (let ((?x776 ((_ extract 1015 1008) mem_0_1373_1024)))\n (let (($x121303 (bvule (_ bv39 8) ?x776)))\n (let (($x66351 (= (_ bv39 8) ?x776)))\n (let (($x60232 (or $x66351 $x121303)))\n (let ((?x121568 (ite $x60232 (_ bv0 8) (_ bv255 8))))\n (let (($x26958 (= (_ bv0 8) ?x121568)))\n (let (($x113452 (not $x26958)))\n (let ((?x109740 ((_ extract 1013 1008) mem_0_1373_1024)))\n (let (($x54962 (bvule ?x109740 (_ bv39 6))))\n (let ((?x127099 ((_ extract 1015 1014) mem_0_1373_1024)))\n (let (($x24924 (= (_ bv0 2) ?x127099)))\n (let (($x71122 (and $x24924 $x54962)))\n (let ((?x120158 (ite $x71122 (_ bv2 8) (_ bv1 8))))\n (let ((?x92129 (ite $x121303 ?x120158 (_ bv255 8))))\n (let ((?x26878 (ite $x66351 (_ bv0 8) ?x92129)))\n (let (($x67182 (= (_ bv0 8) ?x26878)))\n (let (($x53806 (not $x67182)))\n (or $x53806 $x113452)))))))))))))))))))\n(assert\n (let ((?x100171 ((_ extract 1014 1008) mem_0_1373_1024)))\n (let (($x79442 (bvule ?x100171 (_ bv126 7))))\n (let (($x6825 (not $x79442)))\n (let ((?x439 ((_ extract 1015 1015) mem_0_1373_1024)))\n (let (($x112475 (= (_ bv0 1) ?x439)))\n (let (($x28577 (not $x112475)))\n (or $x28577 $x6825))))))))\n(assert\n (let ((?x378 ((_ extract 967 960) mem_0_1373_1024)))\n (let (($x446 (= (_ bv0 8) ?x378)))\n (let ((?x12135 (ite $x446 (_ bv7 64) (_ bv8 64))))\n (let ((?x325 ((_ extract 975 968) mem_0_1373_1024)))\n (let (($x49 (= (_ bv0 8) ?x325)))\n (let ((?x127263 (ite $x49 (_ bv6 64) ?x12135)))\n (let ((?x1049 ((_ extract 983 976) mem_0_1373_1024)))\n (let (($x530 (= (_ bv0 8) ?x1049)))\n (let ((?x124826 (ite $x530 (_ bv5 64) ?x127263)))\n (let ((?x367 ((_ extract 991 984) mem_0_1373_1024)))\n (let (($x331 (= (_ bv0 8) ?x367)))\n (let ((?x9546 (ite $x331 (_ bv4 64) ?x124826)))\n (let ((?x552 ((_ extract 999 992) mem_0_1373_1024)))\n (let (($x514 (= (_ bv0 8) ?x552)))\n (let ((?x99972 (ite $x514 (_ bv3 64) ?x9546)))\n (let ((?x549 ((_ extract 1007 1000) mem_0_1373_1024)))\n (let (($x467 (= (_ bv0 8) ?x549)))\n (let ((?x108982 (ite $x467 (_ bv2 64) ?x99972)))\n (let ((?x776 ((_ extract 1015 1008) mem_0_1373_1024)))\n (let (($x806 (= (_ bv0 8) ?x776)))\n (let ((?x133948 (ite $x806 (_ bv1 64) ?x108982)))\n (= (_ bv2 64) ?x133948)))))))))))))))))))))))\n(assert\n (let ((?x50412 ((_ extract 1015 1013) mem_0_1373_1024)))\n (let (($x23284 (= (_ bv6 3) ?x50412)))\n (let (($x69888 (= (_ bv5 3) ?x50412)))\n (let (($x88909 (or $x69888 $x23284)))\n (let (($x63651 (= (_ bv7 3) ?x50412)))\n (let (($x23870 (or $x63651 $x88909)))\n (let (($x78760 (= (_ bv3 3) ?x50412)))\n (let (($x117239 (or $x78760 $x23870)))\n (let (($x60090 (= (_ bv4 3) ?x50412)))\n (or $x60090 $x117239)))))))))))\n(assert\n (let ((?x118633 ((_ extract 1012 1008) mem_0_1373_1024)))\n (let ((?x121561 (concat (_ bv0 59) ?x118633)))\n (let ((?x130038 (bvashr ?x121561 (_ bv3 64))))\n (let (($x90132 (= (_ bv2 64) ?x130038)))\n (let (($x84463 (= (_ bv3 64) ?x130038)))\n (let (($x36031 (or $x84463 $x90132)))\n (let (($x110665 (= (_ bv0 64) ?x130038)))\n (let (($x27132 (or $x110665 $x36031)))\n (let (($x122634 (= (_ bv1 64) ?x130038)))\n (or $x122634 $x27132)))))))))))\n(assert\n (let ((?x522 ((_ extract 959 952) mem_0_1373_1024)))\n (= (_ bv0 8) ?x522)))\n(assert\n (let ((?x509 ((_ extract 951 944) mem_0_1373_1024)))\n (= (_ bv64 8) ?x509)))\n(assert\n (let ((?x63212 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_4513_64)))\n (let ((?x26461 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_4440_64)))\n (let ((?x6044 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_4361_64)))\n (let ((?x48669 (bvadd (_ bv18446744073709551607 64) ?x6044)))\n (let ((?x126870 (bvadd ?x48669 ?x26461)))\n (let ((?x82539 (bvadd ?x126870 ?x63212)))\n (let (($x54681 (= unconstrained_ret_mbrtowc_4298_64 ?x82539)))\n (let ((?x48852 (ite $x54681 (_ bv12 8) (_ bv190 8))))\n (let ((?x776 ((_ extract 1015 1008) mem_0_1373_1024)))\n (let ((?x45124 (bvadd (_ bv18446744073709551608 64) ?x6044)))\n (let ((?x23878 (bvadd ?x45124 ?x26461)))\n (let ((?x53077 (bvadd ?x23878 ?x63212)))\n (let (($x61148 (= unconstrained_ret_mbrtowc_4298_64 ?x53077)))\n (let ((?x18303 (ite $x61148 ?x776 ?x48852)))\n (let (($x117383 (= (_ bv0 8) ?x18303)))\n (not $x117383)))))))))))))))))\n(assert\n (let ((?x29155 (bvadd (_ bv10 64) unconstrained_ret_mbrtowc_4298_64)))\n (let ((?x132090 (bvadd ?x29155 unconstrained_ret_mbrtowc_4361_64)))\n (let ((?x11028 (bvadd ?x132090 unconstrained_ret_mbrtowc_4440_64)))\n (let ((?x50298 (bvadd ?x11028 unconstrained_ret_mbrtowc_4513_64)))\n (let (($x68132 (bvule (_ bv2 64) ?x50298)))\n (not $x68132)))))))\n(assert\n (let ((?x7238 (bvadd unconstrained_ret_mbrtowc_4298_64 unconstrained_ret_mbrtowc_4361_64)))\n (let ((?x37552 (bvadd ?x7238 unconstrained_ret_mbrtowc_4440_64)))\n (let ((?x14374 (bvadd ?x37552 unconstrained_ret_mbrtowc_4513_64)))\n (let ((?x2629 (bvadd ?x14374 (_ bv10 64))))\n (and (distinct (_ bv1 64) ?x2629) true))))))\n(check-sat)\n",
    "time": 4.125005483627319,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=3, tm_hour=10, tm_min=48, tm_sec=45, tm_wday=3, tm_yday=338, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            0.20106887817382812
        ]
    }
}