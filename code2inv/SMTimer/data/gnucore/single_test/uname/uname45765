{
    "filename": "uname",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun unconstrained_ret_mbrtowc_1781_64 () (_ BitVec 64))\n(declare-fun sym_argv_0_80 () (_ BitVec 80))\n(declare-fun strlen_1606_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_1632_64 () (_ BitVec 64))\n(assert\n (let (($x10646 (= (_ bv0 64) unconstrained_ret_mbrtowc_1781_64)))\n (not $x10646)))\n(assert\n (let (($x104 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1781_64)))\n (not $x104)))\n(assert\n (let (($x15261 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1781_64)))\n (not $x15261)))\n(assert\n (let ((?x53 ((_ extract 47 47) sym_argv_0_80)))\n (= (_ bv0 1) ?x53)))\n(assert\n (let ((?x54 ((_ extract 39 39) sym_argv_0_80)))\n (= (_ bv0 1) ?x54)))\n(assert\n (let ((?x202 ((_ extract 31 31) sym_argv_0_80)))\n (= (_ bv0 1) ?x202)))\n(assert\n (let ((?x212 ((_ extract 23 23) sym_argv_0_80)))\n (= (_ bv0 1) ?x212)))\n(assert\n (let ((?x222 ((_ extract 15 15) sym_argv_0_80)))\n (= (_ bv0 1) ?x222)))\n(assert\n (let ((?x232 ((_ extract 7 7) sym_argv_0_80)))\n (= (_ bv0 1) ?x232)))\n(assert\n (let ((?x92 ((_ extract 46 40) sym_argv_0_80)))\n (bvule ?x92 (_ bv126 7))))\n(assert\n (let ((?x135 ((_ extract 38 32) sym_argv_0_80)))\n (bvule ?x135 (_ bv126 7))))\n(assert\n (let ((?x204 ((_ extract 30 24) sym_argv_0_80)))\n (bvule ?x204 (_ bv126 7))))\n(assert\n (let ((?x214 ((_ extract 22 16) sym_argv_0_80)))\n (bvule ?x214 (_ bv126 7))))\n(assert\n (let ((?x224 ((_ extract 14 8) sym_argv_0_80)))\n (bvule ?x224 (_ bv126 7))))\n(assert\n (let ((?x234 ((_ extract 6 0) sym_argv_0_80)))\n (bvule ?x234 (_ bv126 7))))\n(assert\n (let ((?x5164 ((_ extract 77 72) sym_argv_0_80)))\n (let (($x5333 (bvule ?x5164 (_ bv39 6))))\n (let ((?x4944 ((_ extract 79 78) sym_argv_0_80)))\n (let (($x5326 (= (_ bv0 2) ?x4944)))\n (let (($x4426 (and $x5326 $x5333)))\n (let ((?x5041 (ite $x4426 (_ bv2 8) (_ bv1 8))))\n (let (($x5338 (= (_ bv0 8) ?x5041)))\n (not $x5338)))))))))\n(assert\n (let ((?x16 ((_ extract 79 72) sym_argv_0_80)))\n (= (_ bv65 8) ?x16)))\n(assert\n (let ((?x11560 ((_ extract 69 64) sym_argv_0_80)))\n (let (($x11457 (bvule ?x11560 (_ bv39 6))))\n (let ((?x7343 ((_ extract 71 70) sym_argv_0_80)))\n (let (($x10958 (= (_ bv0 2) ?x7343)))\n (let (($x10638 (and $x10958 $x11457)))\n (let ((?x9540 (ite $x10638 (_ bv2 8) (_ bv1 8))))\n (let (($x13943 (= (_ bv0 8) ?x9540)))\n (not $x13943)))))))))\n(assert\n (let ((?x24 ((_ extract 71 64) sym_argv_0_80)))\n (= (_ bv92 8) ?x24)))\n(assert\n (let ((?x18 ((_ extract 63 56) sym_argv_0_80)))\n (= (_ bv11 8) ?x18)))\n(assert\n (let ((?x15912 ((_ extract 53 48) sym_argv_0_80)))\n (let (($x26339 (bvule ?x15912 (_ bv39 6))))\n (let ((?x14795 ((_ extract 55 54) sym_argv_0_80)))\n (let (($x17776 (= (_ bv0 2) ?x14795)))\n (let (($x6142 (and $x17776 $x26339)))\n (let ((?x20016 (ite $x6142 (_ bv2 8) (_ bv1 8))))\n (let (($x19381 (= (_ bv0 8) ?x20016)))\n (not $x19381)))))))))\n(assert\n (let ((?x31 ((_ extract 55 48) sym_argv_0_80)))\n (= (_ bv64 8) ?x31)))\n(assert\n (let ((?x31274 (bvadd (_ bv576460752303357896 64) strlen_1606_64)))\n (let ((?x35 ((_ extract 7 0) sym_argv_0_80)))\n (let (($x7520 (= (_ bv0 8) ?x35)))\n (let ((?x7086 (ite $x7520 (_ bv576460752303357905 64) (_ bv576460752303357906 64))))\n (let ((?x19 ((_ extract 15 8) sym_argv_0_80)))\n (let (($x7422 (= (_ bv0 8) ?x19)))\n (let ((?x4209 (ite $x7422 (_ bv576460752303357904 64) ?x7086)))\n (let ((?x21 ((_ extract 23 16) sym_argv_0_80)))\n (let (($x5056 (= (_ bv0 8) ?x21)))\n (let ((?x7020 (ite $x5056 (_ bv576460752303357903 64) ?x4209)))\n (let ((?x23 ((_ extract 31 24) sym_argv_0_80)))\n (let (($x8735 (= (_ bv0 8) ?x23)))\n (let ((?x8643 (ite $x8735 (_ bv576460752303357902 64) ?x7020)))\n (let ((?x27 ((_ extract 39 32) sym_argv_0_80)))\n (let (($x8733 (= (_ bv0 8) ?x27)))\n (let ((?x7789 (ite $x8733 (_ bv576460752303357901 64) ?x8643)))\n (let ((?x29 ((_ extract 47 40) sym_argv_0_80)))\n (let (($x8453 (= (_ bv0 8) ?x29)))\n (let ((?x8813 (ite $x8453 (_ bv576460752303357900 64) ?x7789)))\n (= ?x8813 ?x31274)))))))))))))))))))))\n(assert\n (let (($x32203 (= (_ bv0 64) unconstrained_ret_mbrtowc_1632_64)))\n (not $x32203)))\n(assert\n (let (($x475 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1632_64)))\n (not $x475)))\n(assert\n (let (($x18209 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1632_64)))\n (not $x18209)))\n(assert\n (let ((?x17960 (bvadd (_ bv3 64) unconstrained_ret_mbrtowc_1632_64)))\n (let ((?x4177 (bvadd ?x17960 unconstrained_ret_mbrtowc_1781_64)))\n (let (($x31824 (bvule strlen_1606_64 ?x4177)))\n (not $x31824)))))\n(assert\n (let ((?x19052 (bvadd (_ bv576460752303357899 64) unconstrained_ret_mbrtowc_1632_64)))\n (let ((?x23120 (bvadd ?x19052 unconstrained_ret_mbrtowc_1781_64)))\n (bvule (_ bv576460752303357896 64) ?x23120))))\n(assert\n (let ((?x19052 (bvadd (_ bv576460752303357899 64) unconstrained_ret_mbrtowc_1632_64)))\n (let ((?x23120 (bvadd ?x19052 unconstrained_ret_mbrtowc_1781_64)))\n (let ((?x22853 ((_ extract 63 59) ?x23120)))\n (= (_ bv0 5) ?x22853)))))\n(assert\n (let ((?x28809 ((_ extract 58 0) unconstrained_ret_mbrtowc_1781_64)))\n (let ((?x3844 ((_ extract 58 0) unconstrained_ret_mbrtowc_1632_64)))\n (let ((?x32254 (bvadd (_ bv576460752303357899 59) ?x3844)))\n (let ((?x34055 (bvadd ?x32254 ?x28809)))\n (bvule ?x34055 (_ bv576460752303357905 59)))))))\n(assert\n (let ((?x31393 (bvadd unconstrained_ret_mbrtowc_1632_64 unconstrained_ret_mbrtowc_1781_64)))\n (let ((?x29675 (bvadd ?x31393 (_ bv576460752303357899 64))))\n (let (($x28321 (and (distinct (_ bv576460752303357900 64) ?x29675) true)))\n (let (($x18027 (and (distinct (_ bv576460752303357905 64) ?x29675) true)))\n (let (($x40079 (and (distinct (_ bv576460752303357904 64) ?x29675) true)))\n (let (($x45361 (and (distinct (_ bv576460752303357897 64) ?x29675) true)))\n (let (($x25367 (and (distinct (_ bv576460752303357896 64) ?x29675) true)))\n (and $x25367 $x45361 $x40079 $x18027 $x28321)))))))))\n(assert\n (let ((?x31393 (bvadd unconstrained_ret_mbrtowc_1632_64 unconstrained_ret_mbrtowc_1781_64)))\n (let ((?x29675 (bvadd ?x31393 (_ bv576460752303357899 64))))\n (and (distinct ?x29675 (_ bv576460752303357902 64)) true))))\n(assert\n (let ((?x31393 (bvadd unconstrained_ret_mbrtowc_1632_64 unconstrained_ret_mbrtowc_1781_64)))\n (let ((?x29675 (bvadd ?x31393 (_ bv576460752303357899 64))))\n (and (distinct ?x29675 (_ bv576460752303357899 64)) true))))\n(assert\n (let ((?x31393 (bvadd unconstrained_ret_mbrtowc_1632_64 unconstrained_ret_mbrtowc_1781_64)))\n (let ((?x29675 (bvadd ?x31393 (_ bv576460752303357899 64))))\n (and (distinct ?x29675 (_ bv576460752303357903 64)) true))))\n(assert\n (let ((?x31393 (bvadd unconstrained_ret_mbrtowc_1632_64 unconstrained_ret_mbrtowc_1781_64)))\n (let ((?x29675 (bvadd ?x31393 (_ bv576460752303357899 64))))\n (and (distinct ?x29675 (_ bv576460752303357901 64)) true))))\n(assert\n (let ((?x31393 (bvadd unconstrained_ret_mbrtowc_1632_64 unconstrained_ret_mbrtowc_1781_64)))\n (let ((?x29675 (bvadd ?x31393 (_ bv576460752303357899 64))))\n (and (distinct ?x29675 (_ bv576460752303357898 64)) true))))\n(check-sat)\n",
    "time": 1.0010263919830322,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=3, tm_hour=4, tm_min=32, tm_sec=15, tm_wday=3, tm_yday=338, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            0.7003300189971924
        ]
    }
}