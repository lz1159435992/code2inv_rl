{
    "filename": "basename",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun unconstrained_ret_mbrtowc_1175_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_1338_64 () (_ BitVec 64))\n(declare-fun sym_argv2_1_16 () (_ BitVec 16))\n(declare-fun strlen_25_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_1257_64 () (_ BitVec 64))\n(assert\n (let (($x31603 (= (_ bv0 64) unconstrained_ret_mbrtowc_1175_64)))\n (not $x31603)))\n(assert\n (let (($x18869 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1175_64)))\n (not $x18869)))\n(assert\n (let (($x43635 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1175_64)))\n (not $x43635)))\n(assert\n (let (($x37646 (= (_ bv0 64) unconstrained_ret_mbrtowc_1338_64)))\n (not $x37646)))\n(assert\n (let (($x20180 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1338_64)))\n (not $x20180)))\n(assert\n (let (($x19495 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1338_64)))\n (not $x19495)))\n(assert\n (let ((?x115 ((_ extract 15 8) sym_argv2_1_16)))\n (let (($x372 (bvule (_ bv39 8) ?x115)))\n (let (($x318 (= (_ bv39 8) ?x115)))\n (let (($x379 (or $x318 $x372)))\n (let ((?x270 (ite $x379 (_ bv0 8) (_ bv255 8))))\n (let (($x391 (= (_ bv0 8) ?x270)))\n (let (($x433 (not $x391)))\n (let ((?x196 ((_ extract 13 8) sym_argv2_1_16)))\n (let (($x230 (bvule ?x196 (_ bv39 6))))\n (let ((?x268 ((_ extract 15 14) sym_argv2_1_16)))\n (let (($x213 (= (_ bv0 2) ?x268)))\n (let (($x376 (and $x213 $x230)))\n (let ((?x362 (ite $x376 (_ bv2 8) (_ bv1 8))))\n (let ((?x240 (ite $x372 ?x362 (_ bv255 8))))\n (let ((?x236 (ite $x318 (_ bv0 8) ?x240)))\n (let (($x388 (= (_ bv0 8) ?x236)))\n (let (($x420 (not $x388)))\n (or $x420 $x433)))))))))))))))))))\n(assert\n (let ((?x439 ((_ extract 14 8) sym_argv2_1_16)))\n (let (($x440 (bvule ?x439 (_ bv126 7))))\n (let (($x2096 (not $x440)))\n (let ((?x407 ((_ extract 15 15) sym_argv2_1_16)))\n (let (($x419 (= (_ bv0 1) ?x407)))\n (let (($x1405 (not $x419)))\n (or $x1405 $x2096))))))))\n(assert\n (let ((?x4220 (bvadd (_ bv576460752303357910 64) strlen_25_64)))\n (let ((?x1292 ((_ extract 7 0) sym_argv2_1_16)))\n (let (($x1862 (= (_ bv0 8) ?x1292)))\n (let ((?x615 (ite $x1862 (_ bv576460752303357911 64) (_ bv576460752303357912 64))))\n (let ((?x115 ((_ extract 15 8) sym_argv2_1_16)))\n (let (($x168 (= (_ bv0 8) ?x115)))\n (let ((?x2872 (ite $x168 (_ bv576460752303357910 64) ?x615)))\n (= ?x2872 ?x4220)))))))))\n(assert\n (let (($x10306 (= (_ bv21 64) strlen_25_64)))\n (not $x10306)))\n(assert\n (let (($x40314 (bvule (_ bv22 64) strlen_25_64)))\n (not $x40314)))\n(assert\n (let (($x3173 (= (_ bv0 64) unconstrained_ret_mbrtowc_1257_64)))\n (not $x3173)))\n(assert\n (let (($x3111 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1257_64)))\n (not $x3111)))\n(assert\n (let (($x11516 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1257_64)))\n (not $x11516)))\n(assert\n (let ((?x25830 (bvadd (_ bv21 64) unconstrained_ret_mbrtowc_1175_64)))\n (let ((?x4166 (bvadd ?x25830 unconstrained_ret_mbrtowc_1257_64)))\n (let ((?x8469 (bvadd ?x4166 unconstrained_ret_mbrtowc_1338_64)))\n (let (($x13344 (bvule strlen_25_64 ?x8469)))\n (not $x13344))))))\n(assert\n (let ((?x26056 (bvadd (_ bv576460752303357931 64) unconstrained_ret_mbrtowc_1175_64)))\n (let ((?x30673 (bvadd (bvadd ?x26056 unconstrained_ret_mbrtowc_1257_64) unconstrained_ret_mbrtowc_1338_64)))\n (bvule (_ bv576460752303357910 64) ?x30673))))\n(assert\n (let ((?x26056 (bvadd (_ bv576460752303357931 64) unconstrained_ret_mbrtowc_1175_64)))\n (let ((?x30673 (bvadd (bvadd ?x26056 unconstrained_ret_mbrtowc_1257_64) unconstrained_ret_mbrtowc_1338_64)))\n (let ((?x13189 ((_ extract 63 59) ?x30673)))\n (= (_ bv0 5) ?x13189)))))\n(assert\n (let ((?x11950 ((_ extract 58 0) unconstrained_ret_mbrtowc_1338_64)))\n (let ((?x39671 ((_ extract 58 0) unconstrained_ret_mbrtowc_1257_64)))\n (let ((?x28478 ((_ extract 58 0) unconstrained_ret_mbrtowc_1175_64)))\n (let ((?x25361 (bvadd (_ bv576460752303357931 59) ?x28478)))\n (let ((?x19921 (bvadd (bvadd ?x25361 ?x39671) ?x11950)))\n (bvule ?x19921 (_ bv576460752303357911 59))))))))\n(assert\n (let ((?x24592 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1338_64)))\n (let ((?x20484 (bvadd (bvadd (_ bv18446744073709551596 64) (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1257_64)) ?x24592)))\n (let (($x44616 (= unconstrained_ret_mbrtowc_1175_64 ?x20484)))\n (let ((?x21488 (bvadd (bvadd (_ bv18446744073709551595 64) (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1257_64)) ?x24592)))\n (let (($x44238 (= unconstrained_ret_mbrtowc_1175_64 ?x21488)))\n (or $x44238 $x44616)))))))\n(assert\n (let ((?x115 ((_ extract 15 8) sym_argv2_1_16)))\n (let ((?x24592 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1338_64)))\n (let ((?x21488 (bvadd (bvadd (_ bv18446744073709551595 64) (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1257_64)) ?x24592)))\n (let (($x44238 (= unconstrained_ret_mbrtowc_1175_64 ?x21488)))\n (let ((?x37072 (ite $x44238 ?x115 (_ bv190 8))))\n (let ((?x1292 ((_ extract 7 0) sym_argv2_1_16)))\n (let ((?x20484 (bvadd (bvadd (_ bv18446744073709551596 64) (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1257_64)) ?x24592)))\n (let (($x44616 (= unconstrained_ret_mbrtowc_1175_64 ?x20484)))\n (let ((?x35738 (ite $x44616 ?x1292 ?x37072)))\n (let (($x43488 (= (_ bv0 8) ?x35738)))\n (not $x43488))))))))))))\n(assert\n (let ((?x32423 (bvadd (bvadd (_ bv22 64) unconstrained_ret_mbrtowc_1175_64) unconstrained_ret_mbrtowc_1257_64)))\n (let ((?x35713 (bvadd ?x32423 unconstrained_ret_mbrtowc_1338_64)))\n (let (($x24799 (bvule strlen_25_64 ?x35713)))\n (not $x24799)))))\n(assert\n (let ((?x37903 (bvadd unconstrained_ret_mbrtowc_1175_64 unconstrained_ret_mbrtowc_1257_64)))\n (let ((?x35203 (bvadd ?x37903 unconstrained_ret_mbrtowc_1338_64)))\n (let ((?x18921 (bvadd ?x35203 (_ bv576460752303357932 64))))\n (and (distinct (_ bv576460752303357911 64) ?x18921) true)))))\n(check-sat)\n",
    "time": 10.50792145729065,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=13, tm_hour=2, tm_min=20, tm_sec=29, tm_wday=6, tm_yday=348, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            0.10185766220092773
        ]
    }
}