{
    "filename": "basename",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun sym_argv2_1_16 () (_ BitVec 16))\n(declare-fun strlen_25_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_470_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_323_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_399_64 () (_ BitVec 64))\n(assert\n (let ((?x115 ((_ extract 15 8) sym_argv2_1_16)))\n (let (($x372 (bvule (_ bv39 8) ?x115)))\n (let (($x318 (= (_ bv39 8) ?x115)))\n (let (($x379 (or $x318 $x372)))\n (let ((?x270 (ite $x379 (_ bv0 8) (_ bv255 8))))\n (let (($x391 (= (_ bv0 8) ?x270)))\n (let (($x433 (not $x391)))\n (let ((?x196 ((_ extract 13 8) sym_argv2_1_16)))\n (let (($x230 (bvule ?x196 (_ bv39 6))))\n (let ((?x268 ((_ extract 15 14) sym_argv2_1_16)))\n (let (($x213 (= (_ bv0 2) ?x268)))\n (let (($x376 (and $x213 $x230)))\n (let ((?x362 (ite $x376 (_ bv2 8) (_ bv1 8))))\n (let ((?x240 (ite $x372 ?x362 (_ bv255 8))))\n (let ((?x236 (ite $x318 (_ bv0 8) ?x240)))\n (let (($x388 (= (_ bv0 8) ?x236)))\n (let (($x420 (not $x388)))\n (or $x420 $x433)))))))))))))))))))\n(assert\n (let ((?x439 ((_ extract 14 8) sym_argv2_1_16)))\n (let (($x440 (bvule ?x439 (_ bv126 7))))\n (let (($x2096 (not $x440)))\n (let ((?x407 ((_ extract 15 15) sym_argv2_1_16)))\n (let (($x419 (= (_ bv0 1) ?x407)))\n (let (($x1405 (not $x419)))\n (or $x1405 $x2096))))))))\n(assert\n (let ((?x4220 (bvadd (_ bv576460752303357910 64) strlen_25_64)))\n (let ((?x1292 ((_ extract 7 0) sym_argv2_1_16)))\n (let (($x1862 (= (_ bv0 8) ?x1292)))\n (let ((?x615 (ite $x1862 (_ bv576460752303357911 64) (_ bv576460752303357912 64))))\n (let ((?x115 ((_ extract 15 8) sym_argv2_1_16)))\n (let (($x168 (= (_ bv0 8) ?x115)))\n (let ((?x2872 (ite $x168 (_ bv576460752303357910 64) ?x615)))\n (= ?x2872 ?x4220)))))))))\n(assert\n (let (($x8645 (= (_ bv2 64) strlen_25_64)))\n (not $x8645)))\n(assert\n (let (($x15444 (= (_ bv3 64) strlen_25_64)))\n (not $x15444)))\n(assert\n (let (($x23729 (= (_ bv4 64) strlen_25_64)))\n (not $x23729)))\n(assert\n (let (($x4668 (bvule (_ bv5 64) strlen_25_64)))\n (not $x4668)))\n(assert\n (let (($x8170 (= (_ bv0 64) unconstrained_ret_mbrtowc_470_64)))\n (not $x8170)))\n(assert\n (let (($x25122 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_470_64)))\n (not $x25122)))\n(assert\n (let (($x20184 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_470_64)))\n (not $x20184)))\n(assert\n (let (($x44688 (= (_ bv0 64) unconstrained_ret_mbrtowc_323_64)))\n (not $x44688)))\n(assert\n (let (($x16186 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_323_64)))\n (not $x16186)))\n(assert\n (let (($x23058 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_323_64)))\n (not $x23058)))\n(assert\n (let (($x40305 (= (_ bv0 64) unconstrained_ret_mbrtowc_399_64)))\n (not $x40305)))\n(assert\n (let (($x23657 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_399_64)))\n (not $x23657)))\n(assert\n (let (($x12307 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_399_64)))\n (not $x12307)))\n(assert\n (let ((?x26092 (bvadd (_ bv4 64) unconstrained_ret_mbrtowc_323_64)))\n (let ((?x14371 (bvadd ?x26092 unconstrained_ret_mbrtowc_399_64)))\n (let ((?x27563 (bvadd ?x14371 unconstrained_ret_mbrtowc_470_64)))\n (let (($x15867 (bvule strlen_25_64 ?x27563)))\n (not $x15867))))))\n(assert\n (let ((?x27638 (bvadd unconstrained_ret_mbrtowc_323_64 unconstrained_ret_mbrtowc_399_64)))\n (let ((?x37159 (bvadd ?x27638 unconstrained_ret_mbrtowc_470_64)))\n (let ((?x6369 (bvadd ?x37159 (_ bv576460752303357914 64))))\n (and (distinct (_ bv576460752303357910 64) ?x6369) true)))))\n(check-sat)\n",
    "time": 7.159177541732788,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=13, tm_hour=0, tm_min=7, tm_sec=53, tm_wday=6, tm_yday=348, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            0.44241976737976074
        ]
    }
}