{
    "filename": "users",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun unconstrained_ret_mbrtowc_1223_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_1355_64 () (_ BitVec 64))\n(declare-fun sym_argv_0_80 () (_ BitVec 80))\n(declare-fun strlen_1200_64 () (_ BitVec 64))\n(assert\n (let (($x5592 (= (_ bv0 64) unconstrained_ret_mbrtowc_1223_64)))\n (not $x5592)))\n(assert\n (let (($x9215 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1223_64)))\n (not $x9215)))\n(assert\n (let (($x387 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1223_64)))\n (not $x387)))\n(assert\n (let (($x300 (= (_ bv0 64) unconstrained_ret_mbrtowc_1355_64)))\n (not $x300)))\n(assert\n (let (($x239 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1355_64)))\n (not $x239)))\n(assert\n (let (($x33701 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1355_64)))\n (not $x33701)))\n(assert\n (let ((?x379 ((_ extract 63 63) sym_argv_0_80)))\n (= (_ bv0 1) ?x379)))\n(assert\n (let ((?x364 ((_ extract 55 55) sym_argv_0_80)))\n (= (_ bv0 1) ?x364)))\n(assert\n (let ((?x212 ((_ extract 47 47) sym_argv_0_80)))\n (= (_ bv0 1) ?x212)))\n(assert\n (let ((?x219 ((_ extract 39 39) sym_argv_0_80)))\n (= (_ bv0 1) ?x219)))\n(assert\n (let ((?x291 ((_ extract 31 31) sym_argv_0_80)))\n (= (_ bv0 1) ?x291)))\n(assert\n (let ((?x302 ((_ extract 23 23) sym_argv_0_80)))\n (= (_ bv0 1) ?x302)))\n(assert\n (let ((?x311 ((_ extract 15 15) sym_argv_0_80)))\n (= (_ bv0 1) ?x311)))\n(assert\n (let ((?x340 ((_ extract 7 7) sym_argv_0_80)))\n (= (_ bv0 1) ?x340)))\n(assert\n (let ((?x231 ((_ extract 62 56) sym_argv_0_80)))\n (bvule ?x231 (_ bv126 7))))\n(assert\n (let ((?x199 ((_ extract 54 48) sym_argv_0_80)))\n (bvule ?x199 (_ bv126 7))))\n(assert\n (let ((?x213 ((_ extract 46 40) sym_argv_0_80)))\n (bvule ?x213 (_ bv126 7))))\n(assert\n (let ((?x220 ((_ extract 38 32) sym_argv_0_80)))\n (bvule ?x220 (_ bv126 7))))\n(assert\n (let ((?x292 ((_ extract 30 24) sym_argv_0_80)))\n (bvule ?x292 (_ bv126 7))))\n(assert\n (let ((?x303 ((_ extract 22 16) sym_argv_0_80)))\n (bvule ?x303 (_ bv126 7))))\n(assert\n (let ((?x313 ((_ extract 14 8) sym_argv_0_80)))\n (bvule ?x313 (_ bv126 7))))\n(assert\n (let ((?x321 ((_ extract 6 0) sym_argv_0_80)))\n (bvule ?x321 (_ bv126 7))))\n(assert\n (let ((?x16 ((_ extract 79 72) sym_argv_0_80)))\n (= (_ bv11 8) ?x16)))\n(assert\n (let ((?x3239 ((_ extract 69 64) sym_argv_0_80)))\n (let (($x3253 (bvule ?x3239 (_ bv39 6))))\n (let ((?x2819 ((_ extract 71 70) sym_argv_0_80)))\n (let (($x4258 (= (_ bv0 2) ?x2819)))\n (let (($x4392 (and $x4258 $x3253)))\n (let ((?x3573 (ite $x4392 (_ bv2 8) (_ bv1 8))))\n (let (($x8700 (= (_ bv0 8) ?x3573)))\n (not $x8700)))))))))\n(assert\n (let ((?x24 ((_ extract 71 64) sym_argv_0_80)))\n (= (_ bv64 8) ?x24)))\n(assert\n (let ((?x26203 (bvadd (_ bv576460752303357896 64) strlen_1200_64)))\n (let ((?x35 ((_ extract 7 0) sym_argv_0_80)))\n (let (($x3062 (= (_ bv0 8) ?x35)))\n (let ((?x2140 (ite $x3062 (_ bv576460752303357905 64) (_ bv576460752303357906 64))))\n (let ((?x19 ((_ extract 15 8) sym_argv_0_80)))\n (let (($x2728 (= (_ bv0 8) ?x19)))\n (let ((?x3219 (ite $x2728 (_ bv576460752303357904 64) ?x2140)))\n (let ((?x21 ((_ extract 23 16) sym_argv_0_80)))\n (let (($x3119 (= (_ bv0 8) ?x21)))\n (let ((?x3613 (ite $x3119 (_ bv576460752303357903 64) ?x3219)))\n (let ((?x23 ((_ extract 31 24) sym_argv_0_80)))\n (let (($x2451 (= (_ bv0 8) ?x23)))\n (let ((?x3507 (ite $x2451 (_ bv576460752303357902 64) ?x3613)))\n (let ((?x27 ((_ extract 39 32) sym_argv_0_80)))\n (let (($x2859 (= (_ bv0 8) ?x27)))\n (let ((?x3731 (ite $x2859 (_ bv576460752303357901 64) ?x3507)))\n (let ((?x29 ((_ extract 47 40) sym_argv_0_80)))\n (let (($x3588 (= (_ bv0 8) ?x29)))\n (let ((?x3456 (ite $x3588 (_ bv576460752303357900 64) ?x3731)))\n (let ((?x31 ((_ extract 55 48) sym_argv_0_80)))\n (let (($x3403 (= (_ bv0 8) ?x31)))\n (let ((?x943 (ite $x3403 (_ bv576460752303357899 64) ?x3456)))\n (let ((?x18 ((_ extract 63 56) sym_argv_0_80)))\n (let (($x2461 (= (_ bv0 8) ?x18)))\n (let ((?x3112 (ite $x2461 (_ bv576460752303357898 64) ?x943)))\n (= ?x3112 ?x26203)))))))))))))))))))))))))))\n(assert\n (let ((?x3008 (bvadd (_ bv1 64) unconstrained_ret_mbrtowc_1223_64)))\n (let ((?x33164 (bvadd ?x3008 unconstrained_ret_mbrtowc_1355_64)))\n (let (($x411 (bvule strlen_1200_64 ?x33164)))\n (not $x411)))))\n(assert\n (let ((?x15188 (bvadd (_ bv576460752303357897 64) unconstrained_ret_mbrtowc_1223_64)))\n (let ((?x384 (bvadd ?x15188 unconstrained_ret_mbrtowc_1355_64)))\n (bvule (_ bv576460752303357896 64) ?x384))))\n(assert\n (let ((?x15188 (bvadd (_ bv576460752303357897 64) unconstrained_ret_mbrtowc_1223_64)))\n (let ((?x384 (bvadd ?x15188 unconstrained_ret_mbrtowc_1355_64)))\n (let ((?x34429 ((_ extract 63 59) ?x384)))\n (= (_ bv0 5) ?x34429)))))\n(assert\n (let ((?x40045 ((_ extract 58 0) unconstrained_ret_mbrtowc_1355_64)))\n (let ((?x24096 ((_ extract 58 0) unconstrained_ret_mbrtowc_1223_64)))\n (let ((?x15794 (bvadd (_ bv576460752303357897 59) ?x24096)))\n (let ((?x40964 (bvadd ?x15794 ?x40045)))\n (bvule ?x40964 (_ bv576460752303357905 59)))))))\n(assert\n (let ((?x39036 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1355_64)))\n (let ((?x16528 (bvadd (_ bv2 64) ?x39036)))\n (let (($x38738 (= unconstrained_ret_mbrtowc_1223_64 ?x16528)))\n (let ((?x48056 (bvadd (_ bv6 64) ?x39036)))\n (let (($x35886 (= unconstrained_ret_mbrtowc_1223_64 ?x48056)))\n (let (($x26014 (or $x35886 $x38738)))\n (let ((?x29159 (bvadd (_ bv3 64) ?x39036)))\n (let (($x39123 (= unconstrained_ret_mbrtowc_1223_64 ?x29159)))\n (let (($x32848 (or $x39123 $x26014)))\n (let ((?x41910 (bvadd (_ bv7 64) ?x39036)))\n (let (($x40614 (= unconstrained_ret_mbrtowc_1223_64 ?x41910)))\n (let (($x28894 (or $x40614 $x32848)))\n (let ((?x43696 (bvadd (_ bv8 64) ?x39036)))\n (let (($x41096 (= unconstrained_ret_mbrtowc_1223_64 ?x43696)))\n (let (($x30615 (or $x41096 $x28894)))\n (let ((?x34599 (bvadd (_ bv4 64) ?x39036)))\n (let (($x41124 (= unconstrained_ret_mbrtowc_1223_64 ?x34599)))\n (let (($x44524 (or $x41124 $x30615)))\n (let ((?x36589 (bvadd (_ bv1 64) ?x39036)))\n (let (($x41893 (= unconstrained_ret_mbrtowc_1223_64 ?x36589)))\n (let (($x1912 (or $x41893 $x44524)))\n (let ((?x39839 (bvadd (_ bv5 64) ?x39036)))\n (let (($x41927 (= unconstrained_ret_mbrtowc_1223_64 ?x39839)))\n (let (($x36577 (or $x41927 $x1912)))\n (let (($x42782 (= unconstrained_ret_mbrtowc_1223_64 ?x39036)))\n (let (($x18119 (or $x42782 $x36577)))\n (let ((?x43869 (bvadd (_ bv18446744073709551615 64) ?x39036)))\n (let (($x43733 (= unconstrained_ret_mbrtowc_1223_64 ?x43869)))\n (or $x43733 $x18119))))))))))))))))))))))))))))))\n(assert\n (let ((?x39036 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1355_64)))\n (let ((?x43869 (bvadd (_ bv18446744073709551615 64) ?x39036)))\n (let (($x43733 (= unconstrained_ret_mbrtowc_1223_64 ?x43869)))\n (let ((?x10697 (ite $x43733 (_ bv11 8) (_ bv190 8))))\n (let ((?x35 ((_ extract 7 0) sym_argv_0_80)))\n (let ((?x43696 (bvadd (_ bv8 64) ?x39036)))\n (let (($x41096 (= unconstrained_ret_mbrtowc_1223_64 ?x43696)))\n (let ((?x10800 (ite $x41096 ?x35 ?x10697)))\n (let (($x42782 (= unconstrained_ret_mbrtowc_1223_64 ?x39036)))\n (let ((?x15399 (ite $x42782 (_ bv64 8) ?x10800)))\n (let ((?x19 ((_ extract 15 8) sym_argv_0_80)))\n (let ((?x41910 (bvadd (_ bv7 64) ?x39036)))\n (let (($x40614 (= unconstrained_ret_mbrtowc_1223_64 ?x41910)))\n (let ((?x15832 (ite $x40614 ?x19 ?x15399)))\n (let ((?x18 ((_ extract 63 56) sym_argv_0_80)))\n (let ((?x36589 (bvadd (_ bv1 64) ?x39036)))\n (let (($x41893 (= unconstrained_ret_mbrtowc_1223_64 ?x36589)))\n (let ((?x2395 (ite $x41893 ?x18 ?x15832)))\n (let ((?x21 ((_ extract 23 16) sym_argv_0_80)))\n (let ((?x48056 (bvadd (_ bv6 64) ?x39036)))\n (let (($x35886 (= unconstrained_ret_mbrtowc_1223_64 ?x48056)))\n (let ((?x8734 (ite $x35886 ?x21 ?x2395)))\n (let ((?x31 ((_ extract 55 48) sym_argv_0_80)))\n (let ((?x16528 (bvadd (_ bv2 64) ?x39036)))\n (let (($x38738 (= unconstrained_ret_mbrtowc_1223_64 ?x16528)))\n (let ((?x12023 (ite $x38738 ?x31 ?x8734)))\n (let ((?x23 ((_ extract 31 24) sym_argv_0_80)))\n (let ((?x39839 (bvadd (_ bv5 64) ?x39036)))\n (let (($x41927 (= unconstrained_ret_mbrtowc_1223_64 ?x39839)))\n (let ((?x14020 (ite $x41927 ?x23 ?x12023)))\n (let ((?x29 ((_ extract 47 40) sym_argv_0_80)))\n (let ((?x29159 (bvadd (_ bv3 64) ?x39036)))\n (let (($x39123 (= unconstrained_ret_mbrtowc_1223_64 ?x29159)))\n (let ((?x38825 (ite $x39123 ?x29 ?x14020)))\n (let ((?x27 ((_ extract 39 32) sym_argv_0_80)))\n (let ((?x34599 (bvadd (_ bv4 64) ?x39036)))\n (let (($x41124 (= unconstrained_ret_mbrtowc_1223_64 ?x34599)))\n (let ((?x39318 (ite $x41124 ?x27 ?x38825)))\n (let (($x1990 (= (_ bv0 8) ?x39318)))\n (not $x1990)))))))))))))))))))))))))))))))))))))))))\n(assert\n (let ((?x32639 (bvadd (_ bv2 64) unconstrained_ret_mbrtowc_1223_64)))\n (let ((?x3805 (bvadd ?x32639 unconstrained_ret_mbrtowc_1355_64)))\n (let (($x3789 (bvule strlen_1200_64 ?x3805)))\n (not $x3789)))))\n(assert\n (let ((?x15502 (bvadd (_ bv576460752303357898 64) unconstrained_ret_mbrtowc_1223_64)))\n (let ((?x1257 (bvadd ?x15502 unconstrained_ret_mbrtowc_1355_64)))\n (bvule (_ bv576460752303357897 64) ?x1257))))\n(assert\n (let ((?x15502 (bvadd (_ bv576460752303357898 64) unconstrained_ret_mbrtowc_1223_64)))\n (let ((?x1257 (bvadd ?x15502 unconstrained_ret_mbrtowc_1355_64)))\n (let ((?x107 ((_ extract 63 59) ?x1257)))\n (= (_ bv0 5) ?x107)))))\n(assert\n (let ((?x40045 ((_ extract 58 0) unconstrained_ret_mbrtowc_1355_64)))\n (let ((?x24096 ((_ extract 58 0) unconstrained_ret_mbrtowc_1223_64)))\n (let ((?x28385 (bvadd (_ bv576460752303357898 59) ?x24096)))\n (let ((?x47702 (bvadd ?x28385 ?x40045)))\n (bvule ?x47702 (_ bv576460752303357905 59)))))))\n(assert\n (let ((?x5782 (bvadd unconstrained_ret_mbrtowc_1223_64 unconstrained_ret_mbrtowc_1355_64)))\n (let ((?x981 (bvadd ?x5782 (_ bv576460752303357898 64))))\n (let (($x9274 (and (distinct (_ bv576460752303357901 64) ?x981) true)))\n (let (($x28997 (and (distinct (_ bv576460752303357905 64) ?x981) true)))\n (let (($x4903 (and (distinct (_ bv576460752303357899 64) ?x981) true)))\n (let (($x31089 (and (distinct (_ bv576460752303357904 64) ?x981) true)))\n (let (($x34489 (and (distinct (_ bv576460752303357898 64) ?x981) true)))\n (let (($x33534 (and (distinct (_ bv576460752303357897 64) ?x981) true)))\n (let (($x43239 (and (distinct (_ bv576460752303357903 64) ?x981) true)))\n (and $x43239 $x33534 $x34489 $x31089 $x4903 $x28997 $x9274)))))))))))\n(assert\n (let ((?x5782 (bvadd unconstrained_ret_mbrtowc_1223_64 unconstrained_ret_mbrtowc_1355_64)))\n (let ((?x981 (bvadd ?x5782 (_ bv576460752303357898 64))))\n (and (distinct ?x981 (_ bv576460752303357900 64)) true))))\n(assert\n (let ((?x5782 (bvadd unconstrained_ret_mbrtowc_1223_64 unconstrained_ret_mbrtowc_1355_64)))\n (let ((?x981 (bvadd ?x5782 (_ bv576460752303357898 64))))\n (and (distinct ?x981 (_ bv576460752303357902 64)) true))))\n(check-sat)\n",
    "time": 1.1608407497406006,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=1, tm_hour=9, tm_min=26, tm_sec=45, tm_wday=1, tm_yday=336, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            0.26207852363586426
        ]
    }
}