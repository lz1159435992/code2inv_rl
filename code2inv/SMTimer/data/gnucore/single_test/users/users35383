{
    "filename": "users",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun unconstrained_ret_mbrtowc_1695_64 () (_ BitVec 64))\n(declare-fun sym_argv_0_80 () (_ BitVec 80))\n(declare-fun strlen_1200_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_1355_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_1517_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_1223_64 () (_ BitVec 64))\n(assert\n (let (($x42537 (= (_ bv0 64) unconstrained_ret_mbrtowc_1695_64)))\n (not $x42537)))\n(assert\n (let (($x7438 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1695_64)))\n (not $x7438)))\n(assert\n (let (($x52256 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1695_64)))\n (not $x52256)))\n(assert\n (let ((?x379 ((_ extract 63 63) sym_argv_0_80)))\n (= (_ bv0 1) ?x379)))\n(assert\n (let ((?x364 ((_ extract 55 55) sym_argv_0_80)))\n (= (_ bv0 1) ?x364)))\n(assert\n (let ((?x212 ((_ extract 47 47) sym_argv_0_80)))\n (= (_ bv0 1) ?x212)))\n(assert\n (let ((?x219 ((_ extract 39 39) sym_argv_0_80)))\n (= (_ bv0 1) ?x219)))\n(assert\n (let ((?x291 ((_ extract 31 31) sym_argv_0_80)))\n (= (_ bv0 1) ?x291)))\n(assert\n (let ((?x302 ((_ extract 23 23) sym_argv_0_80)))\n (= (_ bv0 1) ?x302)))\n(assert\n (let ((?x311 ((_ extract 15 15) sym_argv_0_80)))\n (= (_ bv0 1) ?x311)))\n(assert\n (let ((?x340 ((_ extract 7 7) sym_argv_0_80)))\n (= (_ bv0 1) ?x340)))\n(assert\n (let ((?x231 ((_ extract 62 56) sym_argv_0_80)))\n (bvule ?x231 (_ bv126 7))))\n(assert\n (let ((?x199 ((_ extract 54 48) sym_argv_0_80)))\n (bvule ?x199 (_ bv126 7))))\n(assert\n (let ((?x213 ((_ extract 46 40) sym_argv_0_80)))\n (bvule ?x213 (_ bv126 7))))\n(assert\n (let ((?x220 ((_ extract 38 32) sym_argv_0_80)))\n (bvule ?x220 (_ bv126 7))))\n(assert\n (let ((?x292 ((_ extract 30 24) sym_argv_0_80)))\n (bvule ?x292 (_ bv126 7))))\n(assert\n (let ((?x303 ((_ extract 22 16) sym_argv_0_80)))\n (bvule ?x303 (_ bv126 7))))\n(assert\n (let ((?x313 ((_ extract 14 8) sym_argv_0_80)))\n (bvule ?x313 (_ bv126 7))))\n(assert\n (let ((?x321 ((_ extract 6 0) sym_argv_0_80)))\n (bvule ?x321 (_ bv126 7))))\n(assert\n (let ((?x16 ((_ extract 79 72) sym_argv_0_80)))\n (= (_ bv11 8) ?x16)))\n(assert\n (let ((?x3239 ((_ extract 69 64) sym_argv_0_80)))\n (let (($x3253 (bvule ?x3239 (_ bv39 6))))\n (let ((?x2819 ((_ extract 71 70) sym_argv_0_80)))\n (let (($x4258 (= (_ bv0 2) ?x2819)))\n (let (($x4392 (and $x4258 $x3253)))\n (let ((?x3573 (ite $x4392 (_ bv2 8) (_ bv1 8))))\n (let (($x8700 (= (_ bv0 8) ?x3573)))\n (not $x8700)))))))))\n(assert\n (let ((?x24 ((_ extract 71 64) sym_argv_0_80)))\n (= (_ bv64 8) ?x24)))\n(assert\n (let ((?x26203 (bvadd (_ bv576460752303357896 64) strlen_1200_64)))\n (let ((?x35 ((_ extract 7 0) sym_argv_0_80)))\n (let (($x3062 (= (_ bv0 8) ?x35)))\n (let ((?x2140 (ite $x3062 (_ bv576460752303357905 64) (_ bv576460752303357906 64))))\n (let ((?x19 ((_ extract 15 8) sym_argv_0_80)))\n (let (($x2728 (= (_ bv0 8) ?x19)))\n (let ((?x3219 (ite $x2728 (_ bv576460752303357904 64) ?x2140)))\n (let ((?x21 ((_ extract 23 16) sym_argv_0_80)))\n (let (($x3119 (= (_ bv0 8) ?x21)))\n (let ((?x3613 (ite $x3119 (_ bv576460752303357903 64) ?x3219)))\n (let ((?x23 ((_ extract 31 24) sym_argv_0_80)))\n (let (($x2451 (= (_ bv0 8) ?x23)))\n (let ((?x3507 (ite $x2451 (_ bv576460752303357902 64) ?x3613)))\n (let ((?x27 ((_ extract 39 32) sym_argv_0_80)))\n (let (($x2859 (= (_ bv0 8) ?x27)))\n (let ((?x3731 (ite $x2859 (_ bv576460752303357901 64) ?x3507)))\n (let ((?x29 ((_ extract 47 40) sym_argv_0_80)))\n (let (($x3588 (= (_ bv0 8) ?x29)))\n (let ((?x3456 (ite $x3588 (_ bv576460752303357900 64) ?x3731)))\n (let ((?x31 ((_ extract 55 48) sym_argv_0_80)))\n (let (($x3403 (= (_ bv0 8) ?x31)))\n (let ((?x943 (ite $x3403 (_ bv576460752303357899 64) ?x3456)))\n (let ((?x18 ((_ extract 63 56) sym_argv_0_80)))\n (let (($x2461 (= (_ bv0 8) ?x18)))\n (let ((?x3112 (ite $x2461 (_ bv576460752303357898 64) ?x943)))\n (= ?x3112 ?x26203)))))))))))))))))))))))))))\n(assert\n (let (($x300 (= (_ bv0 64) unconstrained_ret_mbrtowc_1355_64)))\n (not $x300)))\n(assert\n (let (($x239 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1355_64)))\n (not $x239)))\n(assert\n (let (($x33701 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1355_64)))\n (not $x33701)))\n(assert\n (let (($x46505 (= (_ bv0 64) unconstrained_ret_mbrtowc_1517_64)))\n (not $x46505)))\n(assert\n (let (($x3152 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1517_64)))\n (not $x3152)))\n(assert\n (let (($x20451 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1517_64)))\n (not $x20451)))\n(assert\n (let (($x5592 (= (_ bv0 64) unconstrained_ret_mbrtowc_1223_64)))\n (not $x5592)))\n(assert\n (let (($x9215 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1223_64)))\n (not $x9215)))\n(assert\n (let (($x387 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1223_64)))\n (not $x387)))\n(assert\n (let ((?x3008 (bvadd (_ bv1 64) unconstrained_ret_mbrtowc_1223_64)))\n (let ((?x33164 (bvadd ?x3008 unconstrained_ret_mbrtowc_1355_64)))\n (let ((?x15716 (bvadd ?x33164 unconstrained_ret_mbrtowc_1517_64)))\n (let ((?x33427 (bvadd ?x15716 unconstrained_ret_mbrtowc_1695_64)))\n (let (($x39488 (bvule strlen_1200_64 ?x33427)))\n (not $x39488)))))))\n(assert\n (let ((?x5782 (bvadd unconstrained_ret_mbrtowc_1223_64 unconstrained_ret_mbrtowc_1355_64)))\n (let ((?x37078 (bvadd ?x5782 unconstrained_ret_mbrtowc_1517_64)))\n (let ((?x27824 (bvadd ?x37078 unconstrained_ret_mbrtowc_1695_64)))\n (let ((?x45925 (bvadd ?x27824 (_ bv576460752303357897 64))))\n (bvule ?x45925 (_ bv576460752303357896 64)))))))\n(assert\n (let ((?x5782 (bvadd unconstrained_ret_mbrtowc_1223_64 unconstrained_ret_mbrtowc_1355_64)))\n (let ((?x37078 (bvadd ?x5782 unconstrained_ret_mbrtowc_1517_64)))\n (let ((?x27824 (bvadd ?x37078 unconstrained_ret_mbrtowc_1695_64)))\n (let ((?x45925 (bvadd ?x27824 (_ bv576460752303357897 64))))\n (bvule ?x45925 (_ bv576460752303357897 64)))))))\n(assert\n (let ((?x5782 (bvadd unconstrained_ret_mbrtowc_1223_64 unconstrained_ret_mbrtowc_1355_64)))\n (let ((?x37078 (bvadd ?x5782 unconstrained_ret_mbrtowc_1517_64)))\n (let ((?x27824 (bvadd ?x37078 unconstrained_ret_mbrtowc_1695_64)))\n (let ((?x45925 (bvadd ?x27824 (_ bv576460752303357897 64))))\n (bvuge ?x45925 (_ bv0 64)))))))\n(assert\n (let ((?x5782 (bvadd unconstrained_ret_mbrtowc_1223_64 unconstrained_ret_mbrtowc_1355_64)))\n (let ((?x37078 (bvadd ?x5782 unconstrained_ret_mbrtowc_1517_64)))\n (let ((?x27824 (bvadd ?x37078 unconstrained_ret_mbrtowc_1695_64)))\n (let ((?x45925 (bvadd ?x27824 (_ bv576460752303357897 64))))\n (bvule ?x45925 (_ bv9223372036854775807 64)))))))\n(assert\n (let ((?x5782 (bvadd unconstrained_ret_mbrtowc_1223_64 unconstrained_ret_mbrtowc_1355_64)))\n (let ((?x37078 (bvadd ?x5782 unconstrained_ret_mbrtowc_1517_64)))\n (let ((?x27824 (bvadd ?x37078 unconstrained_ret_mbrtowc_1695_64)))\n (let ((?x45925 (bvadd ?x27824 (_ bv576460752303357897 64))))\n (bvuge ?x45925 (_ bv0 64)))))))\n(assert\n (let ((?x5782 (bvadd unconstrained_ret_mbrtowc_1223_64 unconstrained_ret_mbrtowc_1355_64)))\n (let ((?x37078 (bvadd ?x5782 unconstrained_ret_mbrtowc_1517_64)))\n (let ((?x27824 (bvadd ?x37078 unconstrained_ret_mbrtowc_1695_64)))\n (let ((?x45925 (bvadd ?x27824 (_ bv576460752303357897 64))))\n (bvule ?x45925 (_ bv4611686018427387903 64)))))))\n(assert\n (let ((?x5782 (bvadd unconstrained_ret_mbrtowc_1223_64 unconstrained_ret_mbrtowc_1355_64)))\n (let ((?x37078 (bvadd ?x5782 unconstrained_ret_mbrtowc_1517_64)))\n (let ((?x27824 (bvadd ?x37078 unconstrained_ret_mbrtowc_1695_64)))\n (let ((?x45925 (bvadd ?x27824 (_ bv576460752303357897 64))))\n (bvuge ?x45925 (_ bv0 64)))))))\n(assert\n (let ((?x5782 (bvadd unconstrained_ret_mbrtowc_1223_64 unconstrained_ret_mbrtowc_1355_64)))\n (let ((?x37078 (bvadd ?x5782 unconstrained_ret_mbrtowc_1517_64)))\n (let ((?x27824 (bvadd ?x37078 unconstrained_ret_mbrtowc_1695_64)))\n (let ((?x45925 (bvadd ?x27824 (_ bv576460752303357897 64))))\n (bvule ?x45925 (_ bv2305843009213693951 64)))))))\n(assert\n (let ((?x5782 (bvadd unconstrained_ret_mbrtowc_1223_64 unconstrained_ret_mbrtowc_1355_64)))\n (let ((?x37078 (bvadd ?x5782 unconstrained_ret_mbrtowc_1517_64)))\n (let ((?x27824 (bvadd ?x37078 unconstrained_ret_mbrtowc_1695_64)))\n (let ((?x45925 (bvadd ?x27824 (_ bv576460752303357897 64))))\n (bvuge ?x45925 (_ bv0 64)))))))\n(assert\n (let ((?x5782 (bvadd unconstrained_ret_mbrtowc_1223_64 unconstrained_ret_mbrtowc_1355_64)))\n (let ((?x37078 (bvadd ?x5782 unconstrained_ret_mbrtowc_1517_64)))\n (let ((?x27824 (bvadd ?x37078 unconstrained_ret_mbrtowc_1695_64)))\n (let ((?x45925 (bvadd ?x27824 (_ bv576460752303357897 64))))\n (bvule ?x45925 (_ bv1152921504606846975 64)))))))\n(assert\n (let ((?x5782 (bvadd unconstrained_ret_mbrtowc_1223_64 unconstrained_ret_mbrtowc_1355_64)))\n (let ((?x37078 (bvadd ?x5782 unconstrained_ret_mbrtowc_1517_64)))\n (let ((?x27824 (bvadd ?x37078 unconstrained_ret_mbrtowc_1695_64)))\n (let ((?x45925 (bvadd ?x27824 (_ bv576460752303357897 64))))\n (bvuge ?x45925 (_ bv0 64)))))))\n(assert\n (let ((?x5782 (bvadd unconstrained_ret_mbrtowc_1223_64 unconstrained_ret_mbrtowc_1355_64)))\n (let ((?x37078 (bvadd ?x5782 unconstrained_ret_mbrtowc_1517_64)))\n (let ((?x27824 (bvadd ?x37078 unconstrained_ret_mbrtowc_1695_64)))\n (let ((?x45925 (bvadd ?x27824 (_ bv576460752303357897 64))))\n (bvule ?x45925 (_ bv576460752303423487 64)))))))\n(assert\n (let ((?x5782 (bvadd unconstrained_ret_mbrtowc_1223_64 unconstrained_ret_mbrtowc_1355_64)))\n (let ((?x37078 (bvadd ?x5782 unconstrained_ret_mbrtowc_1517_64)))\n (let ((?x27824 (bvadd ?x37078 unconstrained_ret_mbrtowc_1695_64)))\n (let ((?x45925 (bvadd ?x27824 (_ bv576460752303357897 64))))\n (bvuge ?x45925 (_ bv576460752295034879 64)))))))\n(assert\n (let ((?x5782 (bvadd unconstrained_ret_mbrtowc_1223_64 unconstrained_ret_mbrtowc_1355_64)))\n (let ((?x37078 (bvadd ?x5782 unconstrained_ret_mbrtowc_1517_64)))\n (let ((?x27824 (bvadd ?x37078 unconstrained_ret_mbrtowc_1695_64)))\n (let ((?x45925 (bvadd ?x27824 (_ bv576460752303357897 64))))\n (bvule ?x45925 (_ bv576460752299229183 64)))))))\n(check-sat)\n",
    "time": 9.510351657867432,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=1, tm_hour=11, tm_min=35, tm_sec=28, tm_wday=1, tm_yday=336, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            0.33569765090942383
        ]
    }
}