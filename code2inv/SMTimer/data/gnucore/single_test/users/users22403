{
    "filename": "users",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun unconstrained_ret_mbrtowc_1365_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_1230_64 () (_ BitVec 64))\n(declare-fun sym_argv_0_80 () (_ BitVec 80))\n(declare-fun strlen_1206_64 () (_ BitVec 64))\n(assert\n (let (($x2330 (= (_ bv0 64) unconstrained_ret_mbrtowc_1365_64)))\n (not $x2330)))\n(assert\n (let (($x2476 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1365_64)))\n (not $x2476)))\n(assert\n (let (($x32161 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1365_64)))\n (not $x32161)))\n(assert\n (let (($x19026 (= (_ bv0 64) unconstrained_ret_mbrtowc_1230_64)))\n (not $x19026)))\n(assert\n (let (($x35432 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1230_64)))\n (not $x35432)))\n(assert\n (let (($x26795 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1230_64)))\n (not $x26795)))\n(assert\n (let ((?x379 ((_ extract 63 63) sym_argv_0_80)))\n (= (_ bv0 1) ?x379)))\n(assert\n (let ((?x364 ((_ extract 55 55) sym_argv_0_80)))\n (= (_ bv0 1) ?x364)))\n(assert\n (let ((?x212 ((_ extract 47 47) sym_argv_0_80)))\n (= (_ bv0 1) ?x212)))\n(assert\n (let ((?x219 ((_ extract 39 39) sym_argv_0_80)))\n (= (_ bv0 1) ?x219)))\n(assert\n (let ((?x291 ((_ extract 31 31) sym_argv_0_80)))\n (= (_ bv0 1) ?x291)))\n(assert\n (let ((?x302 ((_ extract 23 23) sym_argv_0_80)))\n (= (_ bv0 1) ?x302)))\n(assert\n (let ((?x311 ((_ extract 15 15) sym_argv_0_80)))\n (= (_ bv0 1) ?x311)))\n(assert\n (let ((?x340 ((_ extract 7 7) sym_argv_0_80)))\n (= (_ bv0 1) ?x340)))\n(assert\n (let ((?x231 ((_ extract 62 56) sym_argv_0_80)))\n (bvule ?x231 (_ bv126 7))))\n(assert\n (let ((?x199 ((_ extract 54 48) sym_argv_0_80)))\n (bvule ?x199 (_ bv126 7))))\n(assert\n (let ((?x213 ((_ extract 46 40) sym_argv_0_80)))\n (bvule ?x213 (_ bv126 7))))\n(assert\n (let ((?x220 ((_ extract 38 32) sym_argv_0_80)))\n (bvule ?x220 (_ bv126 7))))\n(assert\n (let ((?x292 ((_ extract 30 24) sym_argv_0_80)))\n (bvule ?x292 (_ bv126 7))))\n(assert\n (let ((?x303 ((_ extract 22 16) sym_argv_0_80)))\n (bvule ?x303 (_ bv126 7))))\n(assert\n (let ((?x313 ((_ extract 14 8) sym_argv_0_80)))\n (bvule ?x313 (_ bv126 7))))\n(assert\n (let ((?x321 ((_ extract 6 0) sym_argv_0_80)))\n (bvule ?x321 (_ bv126 7))))\n(assert\n (let ((?x16 ((_ extract 79 72) sym_argv_0_80)))\n (= (_ bv13 8) ?x16)))\n(assert\n (let ((?x3239 ((_ extract 69 64) sym_argv_0_80)))\n (let (($x3253 (bvule ?x3239 (_ bv39 6))))\n (let ((?x2819 ((_ extract 71 70) sym_argv_0_80)))\n (let (($x4258 (= (_ bv0 2) ?x2819)))\n (let (($x4392 (and $x4258 $x3253)))\n (let ((?x3573 (ite $x4392 (_ bv2 8) (_ bv1 8))))\n (let (($x8700 (= (_ bv0 8) ?x3573)))\n (not $x8700)))))))))\n(assert\n (let ((?x24 ((_ extract 71 64) sym_argv_0_80)))\n (= (_ bv64 8) ?x24)))\n(assert\n (let ((?x33885 (bvadd (_ bv576460752303357896 64) strlen_1206_64)))\n (let ((?x35 ((_ extract 7 0) sym_argv_0_80)))\n (let (($x3062 (= (_ bv0 8) ?x35)))\n (let ((?x2140 (ite $x3062 (_ bv576460752303357905 64) (_ bv576460752303357906 64))))\n (let ((?x19 ((_ extract 15 8) sym_argv_0_80)))\n (let (($x2728 (= (_ bv0 8) ?x19)))\n (let ((?x3219 (ite $x2728 (_ bv576460752303357904 64) ?x2140)))\n (let ((?x21 ((_ extract 23 16) sym_argv_0_80)))\n (let (($x3119 (= (_ bv0 8) ?x21)))\n (let ((?x3613 (ite $x3119 (_ bv576460752303357903 64) ?x3219)))\n (let ((?x23 ((_ extract 31 24) sym_argv_0_80)))\n (let (($x2451 (= (_ bv0 8) ?x23)))\n (let ((?x3507 (ite $x2451 (_ bv576460752303357902 64) ?x3613)))\n (let ((?x27 ((_ extract 39 32) sym_argv_0_80)))\n (let (($x2859 (= (_ bv0 8) ?x27)))\n (let ((?x3731 (ite $x2859 (_ bv576460752303357901 64) ?x3507)))\n (let ((?x29 ((_ extract 47 40) sym_argv_0_80)))\n (let (($x3588 (= (_ bv0 8) ?x29)))\n (let ((?x3456 (ite $x3588 (_ bv576460752303357900 64) ?x3731)))\n (let ((?x31 ((_ extract 55 48) sym_argv_0_80)))\n (let (($x3403 (= (_ bv0 8) ?x31)))\n (let ((?x943 (ite $x3403 (_ bv576460752303357899 64) ?x3456)))\n (let ((?x18 ((_ extract 63 56) sym_argv_0_80)))\n (let (($x2461 (= (_ bv0 8) ?x18)))\n (let ((?x3112 (ite $x2461 (_ bv576460752303357898 64) ?x943)))\n (= ?x3112 ?x33885)))))))))))))))))))))))))))\n(assert\n (let ((?x13665 (bvadd (_ bv1 64) unconstrained_ret_mbrtowc_1230_64)))\n (let ((?x6570 (bvadd ?x13665 unconstrained_ret_mbrtowc_1365_64)))\n (let (($x2329 (bvule strlen_1206_64 ?x6570)))\n (not $x2329)))))\n(assert\n (let ((?x17626 (bvadd (_ bv576460752303357897 64) unconstrained_ret_mbrtowc_1230_64)))\n (let ((?x44707 (bvadd ?x17626 unconstrained_ret_mbrtowc_1365_64)))\n (bvule (_ bv576460752303357896 64) ?x44707))))\n(assert\n (let ((?x17626 (bvadd (_ bv576460752303357897 64) unconstrained_ret_mbrtowc_1230_64)))\n (let ((?x44707 (bvadd ?x17626 unconstrained_ret_mbrtowc_1365_64)))\n (let ((?x26337 ((_ extract 63 59) ?x44707)))\n (= (_ bv0 5) ?x26337)))))\n(assert\n (let ((?x15039 ((_ extract 58 0) unconstrained_ret_mbrtowc_1365_64)))\n (let ((?x16912 ((_ extract 58 0) unconstrained_ret_mbrtowc_1230_64)))\n (let ((?x39293 (bvadd (_ bv576460752303357897 59) ?x16912)))\n (let ((?x27120 (bvadd ?x39293 ?x15039)))\n (bvule ?x27120 (_ bv576460752303357905 59)))))))\n(assert\n (let ((?x10629 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1365_64)))\n (let (($x36522 (= unconstrained_ret_mbrtowc_1230_64 ?x10629)))\n (let ((?x17356 (bvadd (_ bv4 64) ?x10629)))\n (let (($x35266 (= unconstrained_ret_mbrtowc_1230_64 ?x17356)))\n (let (($x16304 (or $x35266 $x36522)))\n (let ((?x53440 (bvadd (_ bv3 64) ?x10629)))\n (let (($x36797 (= unconstrained_ret_mbrtowc_1230_64 ?x53440)))\n (let (($x13516 (or $x36797 $x16304)))\n (let ((?x34395 (bvadd (_ bv2 64) ?x10629)))\n (let (($x37664 (= unconstrained_ret_mbrtowc_1230_64 ?x34395)))\n (let (($x14035 (or $x37664 $x13516)))\n (let ((?x6818 (bvadd (_ bv8 64) ?x10629)))\n (let (($x38457 (= unconstrained_ret_mbrtowc_1230_64 ?x6818)))\n (let (($x17843 (or $x38457 $x14035)))\n (let ((?x34211 (bvadd (_ bv6 64) ?x10629)))\n (let (($x39543 (= unconstrained_ret_mbrtowc_1230_64 ?x34211)))\n (let (($x39028 (or $x39543 $x17843)))\n (let ((?x39487 (bvadd (_ bv1 64) ?x10629)))\n (let (($x40357 (= unconstrained_ret_mbrtowc_1230_64 ?x39487)))\n (let (($x43152 (or $x40357 $x39028)))\n (let ((?x35156 (bvadd (_ bv18446744073709551615 64) ?x10629)))\n (let (($x43019 (= unconstrained_ret_mbrtowc_1230_64 ?x35156)))\n (let (($x46473 (or $x43019 $x43152)))\n (let ((?x31747 (bvadd (_ bv7 64) ?x10629)))\n (let (($x44856 (= unconstrained_ret_mbrtowc_1230_64 ?x31747)))\n (let (($x31790 (or $x44856 $x46473)))\n (let ((?x38536 (bvadd (_ bv5 64) ?x10629)))\n (let (($x47921 (= unconstrained_ret_mbrtowc_1230_64 ?x38536)))\n (or $x47921 $x31790))))))))))))))))))))))))))))))\n(assert\n (let ((?x10629 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1365_64)))\n (let ((?x35156 (bvadd (_ bv18446744073709551615 64) ?x10629)))\n (let (($x43019 (= unconstrained_ret_mbrtowc_1230_64 ?x35156)))\n (let ((?x40668 (ite $x43019 (_ bv13 8) (_ bv190 8))))\n (let ((?x35 ((_ extract 7 0) sym_argv_0_80)))\n (let ((?x6818 (bvadd (_ bv8 64) ?x10629)))\n (let (($x38457 (= unconstrained_ret_mbrtowc_1230_64 ?x6818)))\n (let ((?x7662 (ite $x38457 ?x35 ?x40668)))\n (let (($x36522 (= unconstrained_ret_mbrtowc_1230_64 ?x10629)))\n (let ((?x727 (ite $x36522 (_ bv64 8) ?x7662)))\n (let ((?x19 ((_ extract 15 8) sym_argv_0_80)))\n (let ((?x31747 (bvadd (_ bv7 64) ?x10629)))\n (let (($x44856 (= unconstrained_ret_mbrtowc_1230_64 ?x31747)))\n (let ((?x32721 (ite $x44856 ?x19 ?x727)))\n (let ((?x18 ((_ extract 63 56) sym_argv_0_80)))\n (let ((?x39487 (bvadd (_ bv1 64) ?x10629)))\n (let (($x40357 (= unconstrained_ret_mbrtowc_1230_64 ?x39487)))\n (let ((?x38552 (ite $x40357 ?x18 ?x32721)))\n (let ((?x21 ((_ extract 23 16) sym_argv_0_80)))\n (let ((?x34211 (bvadd (_ bv6 64) ?x10629)))\n (let (($x39543 (= unconstrained_ret_mbrtowc_1230_64 ?x34211)))\n (let ((?x21425 (ite $x39543 ?x21 ?x38552)))\n (let ((?x31 ((_ extract 55 48) sym_argv_0_80)))\n (let ((?x34395 (bvadd (_ bv2 64) ?x10629)))\n (let (($x37664 (= unconstrained_ret_mbrtowc_1230_64 ?x34395)))\n (let ((?x49262 (ite $x37664 ?x31 ?x21425)))\n (let ((?x23 ((_ extract 31 24) sym_argv_0_80)))\n (let ((?x38536 (bvadd (_ bv5 64) ?x10629)))\n (let (($x47921 (= unconstrained_ret_mbrtowc_1230_64 ?x38536)))\n (let ((?x21780 (ite $x47921 ?x23 ?x49262)))\n (let ((?x29 ((_ extract 47 40) sym_argv_0_80)))\n (let ((?x53440 (bvadd (_ bv3 64) ?x10629)))\n (let (($x36797 (= unconstrained_ret_mbrtowc_1230_64 ?x53440)))\n (let ((?x35744 (ite $x36797 ?x29 ?x21780)))\n (let ((?x27 ((_ extract 39 32) sym_argv_0_80)))\n (let ((?x17356 (bvadd (_ bv4 64) ?x10629)))\n (let (($x35266 (= unconstrained_ret_mbrtowc_1230_64 ?x17356)))\n (let ((?x52587 (ite $x35266 ?x27 ?x35744)))\n (let (($x35180 (= (_ bv0 8) ?x52587)))\n (not $x35180)))))))))))))))))))))))))))))))))))))))))\n(assert\n (let ((?x13704 (bvadd (_ bv2 64) unconstrained_ret_mbrtowc_1230_64)))\n (let ((?x43495 (bvadd ?x13704 unconstrained_ret_mbrtowc_1365_64)))\n (let (($x32739 (bvule strlen_1206_64 ?x43495)))\n (not $x32739)))))\n(assert\n (let ((?x12491 (bvadd (_ bv576460752303357898 64) unconstrained_ret_mbrtowc_1230_64)))\n (let ((?x50518 (bvadd ?x12491 unconstrained_ret_mbrtowc_1365_64)))\n (bvule (_ bv576460752303357897 64) ?x50518))))\n(assert\n (let ((?x12491 (bvadd (_ bv576460752303357898 64) unconstrained_ret_mbrtowc_1230_64)))\n (let ((?x50518 (bvadd ?x12491 unconstrained_ret_mbrtowc_1365_64)))\n (let ((?x5427 ((_ extract 63 59) ?x50518)))\n (= (_ bv0 5) ?x5427)))))\n(assert\n (let ((?x15039 ((_ extract 58 0) unconstrained_ret_mbrtowc_1365_64)))\n (let ((?x16912 ((_ extract 58 0) unconstrained_ret_mbrtowc_1230_64)))\n (let ((?x21274 (bvadd (_ bv576460752303357898 59) ?x16912)))\n (let ((?x52782 (bvadd ?x21274 ?x15039)))\n (bvule ?x52782 (_ bv576460752303357905 59)))))))\n(assert\n (let ((?x32147 (bvadd unconstrained_ret_mbrtowc_1230_64 unconstrained_ret_mbrtowc_1365_64)))\n (let ((?x14389 (bvadd ?x32147 (_ bv576460752303357898 64))))\n (let (($x27387 (and (distinct (_ bv576460752303357902 64) ?x14389) true)))\n (let (($x52912 (and (distinct (_ bv576460752303357905 64) ?x14389) true)))\n (let (($x10271 (and (distinct (_ bv576460752303357899 64) ?x14389) true)))\n (let (($x39870 (and (distinct (_ bv576460752303357904 64) ?x14389) true)))\n (let (($x39303 (and (distinct (_ bv576460752303357897 64) ?x14389) true)))\n (and $x39303 $x39870 $x10271 $x52912 $x27387)))))))))\n(assert\n (let ((?x32147 (bvadd unconstrained_ret_mbrtowc_1230_64 unconstrained_ret_mbrtowc_1365_64)))\n (let ((?x14389 (bvadd ?x32147 (_ bv576460752303357898 64))))\n (and (distinct ?x14389 (_ bv576460752303357898 64)) true))))\n(assert\n (let ((?x32147 (bvadd unconstrained_ret_mbrtowc_1230_64 unconstrained_ret_mbrtowc_1365_64)))\n (let ((?x14389 (bvadd ?x32147 (_ bv576460752303357898 64))))\n (and (distinct ?x14389 (_ bv576460752303357901 64)) true))))\n(assert\n (let ((?x32147 (bvadd unconstrained_ret_mbrtowc_1230_64 unconstrained_ret_mbrtowc_1365_64)))\n (let ((?x14389 (bvadd ?x32147 (_ bv576460752303357898 64))))\n (and (distinct ?x14389 (_ bv576460752303357903 64)) true))))\n(assert\n (let ((?x32147 (bvadd unconstrained_ret_mbrtowc_1230_64 unconstrained_ret_mbrtowc_1365_64)))\n (let ((?x14389 (bvadd ?x32147 (_ bv576460752303357898 64))))\n (and (distinct ?x14389 (_ bv576460752303357900 64)) true))))\n(check-sat)\n",
    "time": 1.022963285446167,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=1, tm_hour=9, tm_min=27, tm_sec=2, tm_wday=1, tm_yday=336, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            0.2680790424346924
        ]
    }
}