{
    "filename": "test",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun unconstrained_ret_mbrtowc_2937_64 () (_ BitVec 64))\n(declare-fun sym_argv2_1_16 () (_ BitVec 16))\n(declare-fun strlen_573_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_2000_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_2865_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_2785_64 () (_ BitVec 64))\n(assert\n (let (($x39440 (= (_ bv0 64) unconstrained_ret_mbrtowc_2937_64)))\n (not $x39440)))\n(assert\n (let (($x57162 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_2937_64)))\n (not $x57162)))\n(assert\n (let (($x72160 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_2937_64)))\n (not $x72160)))\n(assert\n (let ((?x15818 ((_ extract 13 8) sym_argv2_1_16)))\n (let (($x25930 (bvule ?x15818 (_ bv39 6))))\n (let ((?x17748 ((_ extract 15 14) sym_argv2_1_16)))\n (let (($x36865 (= (_ bv0 2) ?x17748)))\n (let (($x11406 (and $x36865 $x25930)))\n (let ((?x15682 (ite $x11406 (_ bv2 8) (_ bv1 8))))\n (let (($x28144 (= (_ bv0 8) ?x15682)))\n (not $x28144)))))))))\n(assert\n (let ((?x317 ((_ extract 15 8) sym_argv2_1_16)))\n (= (_ bv64 8) ?x317)))\n(assert\n (let ((?x18141 (bvadd (_ bv576460752303357906 64) strlen_573_64)))\n (let ((?x385 ((_ extract 7 0) sym_argv2_1_16)))\n (let (($x845 (= (_ bv0 8) ?x385)))\n (let ((?x1058 (ite $x845 (_ bv576460752303357907 64) (_ bv576460752303357908 64))))\n (= ?x1058 ?x18141))))))\n(assert\n (let (($x14943 (= (_ bv5 64) strlen_573_64)))\n (not $x14943)))\n(assert\n (let (($x12281 (= (_ bv6 64) strlen_573_64)))\n (not $x12281)))\n(assert\n (let ((?x44207 (bvadd (_ bv8 64) unconstrained_ret_mbrtowc_2000_64)))\n (let (($x49688 (bvule strlen_573_64 ?x44207)))\n (not $x49688))))\n(assert\n (let ((?x47952 ((_ extract 2 0) strlen_573_64)))\n (bvule ?x47952 (_ bv6 3))))\n(assert\n (let ((?x23854 (bvadd (_ bv576460752303357914 64) unconstrained_ret_mbrtowc_2000_64)))\n (let ((?x34159 ((_ extract 63 59) ?x23854)))\n (= (_ bv0 5) ?x34159))))\n(assert\n (let ((?x38760 ((_ extract 58 0) unconstrained_ret_mbrtowc_2000_64)))\n (let ((?x10564 (bvadd (_ bv576460752303357914 59) ?x38760)))\n (bvule ?x10564 (_ bv576460752303357907 59)))))\n(assert\n (let (($x40348 (= (_ bv18446744073709551609 64) unconstrained_ret_mbrtowc_2000_64)))\n (let (($x43083 (= (_ bv18446744073709551608 64) unconstrained_ret_mbrtowc_2000_64)))\n (or $x43083 $x40348))))\n(assert\n (let (($x43083 (= (_ bv18446744073709551608 64) unconstrained_ret_mbrtowc_2000_64)))\n (let ((?x46832 (ite $x43083 (_ bv64 8) (_ bv190 8))))\n (let ((?x385 ((_ extract 7 0) sym_argv2_1_16)))\n (let (($x40348 (= (_ bv18446744073709551609 64) unconstrained_ret_mbrtowc_2000_64)))\n (let ((?x26659 (ite $x40348 ?x385 ?x46832)))\n (let (($x5197 (= (_ bv0 8) ?x26659)))\n (not $x5197))))))))\n(assert\n (let ((?x41087 (bvadd (_ bv9 64) unconstrained_ret_mbrtowc_2000_64)))\n (bvule strlen_573_64 ?x41087)))\n(assert\n (let ((?x57272 (bvadd (_ bv1 64) unconstrained_ret_mbrtowc_2000_64)))\n (let ((?x31897 ((_ extract 63 1) ?x57272)))\n (let (($x44147 (= (_ bv0 63) ?x31897)))\n (not $x44147)))))\n(assert\n (let ((?x41087 (bvadd (_ bv9 64) unconstrained_ret_mbrtowc_2000_64)))\n (let ((?x15521 ((_ extract 63 4) ?x41087)))\n (= (_ bv0 60) ?x15521))))\n(assert\n (let (($x44784 (= (_ bv9 64) strlen_573_64)))\n (not $x44784)))\n(assert\n (let (($x46629 (= (_ bv10 64) strlen_573_64)))\n (not $x46629)))\n(assert\n (let (($x4398 (= (_ bv0 64) unconstrained_ret_mbrtowc_2865_64)))\n (not $x4398)))\n(assert\n (let (($x31534 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_2865_64)))\n (not $x31534)))\n(assert\n (let (($x62360 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_2865_64)))\n (not $x62360)))\n(assert\n (let (($x23278 (= (_ bv0 64) unconstrained_ret_mbrtowc_2785_64)))\n (not $x23278)))\n(assert\n (let (($x12603 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_2785_64)))\n (not $x12603)))\n(assert\n (let (($x52079 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_2785_64)))\n (not $x52079)))\n(assert\n (let ((?x54634 (bvadd (_ bv12 64) unconstrained_ret_mbrtowc_2785_64)))\n (let ((?x68946 (bvadd ?x54634 unconstrained_ret_mbrtowc_2865_64)))\n (let ((?x99756 (bvadd ?x68946 unconstrained_ret_mbrtowc_2937_64)))\n (let (($x86256 (bvule strlen_573_64 ?x99756)))\n (not $x86256))))))\n(assert\n (let ((?x773 ((_ extract 3 0) unconstrained_ret_mbrtowc_2000_64)))\n (let ((?x5853 (bvadd (_ bv9 4) ?x773)))\n (bvule ?x5853 (_ bv9 4)))))\n(assert\n (let ((?x22974 ((_ extract 3 0) strlen_573_64)))\n (bvule ?x22974 (_ bv10 4))))\n(assert\n (let ((?x61671 (bvadd (_ bv576460752303357918 64) unconstrained_ret_mbrtowc_2785_64)))\n (let ((?x35073 (bvadd ?x61671 unconstrained_ret_mbrtowc_2865_64)))\n (let ((?x70045 (bvadd ?x35073 unconstrained_ret_mbrtowc_2937_64)))\n (bvule (_ bv576460752303357906 64) ?x70045)))))\n(assert\n (let ((?x61671 (bvadd (_ bv576460752303357918 64) unconstrained_ret_mbrtowc_2785_64)))\n (let ((?x35073 (bvadd ?x61671 unconstrained_ret_mbrtowc_2865_64)))\n (let ((?x70045 (bvadd ?x35073 unconstrained_ret_mbrtowc_2937_64)))\n (let ((?x91998 ((_ extract 63 59) ?x70045)))\n (= (_ bv0 5) ?x91998))))))\n(assert\n (let ((?x69279 ((_ extract 58 0) unconstrained_ret_mbrtowc_2937_64)))\n (let ((?x68587 ((_ extract 58 0) unconstrained_ret_mbrtowc_2865_64)))\n (let ((?x78139 ((_ extract 58 0) unconstrained_ret_mbrtowc_2785_64)))\n (let ((?x3053 (bvadd (_ bv576460752303357918 59) ?x78139)))\n (let ((?x10283 (bvadd ?x3053 ?x68587)))\n (let ((?x71228 (bvadd ?x10283 ?x69279)))\n (bvule ?x71228 (_ bv576460752303357907 59)))))))))\n(assert\n (let ((?x3971 (bvadd unconstrained_ret_mbrtowc_2785_64 unconstrained_ret_mbrtowc_2865_64)))\n (let ((?x71808 (bvadd ?x3971 unconstrained_ret_mbrtowc_2937_64)))\n (let ((?x103592 (bvadd ?x71808 (_ bv576460752303357918 64))))\n (let (($x84158 (and (distinct (_ bv576460752303357907 64) ?x103592) true)))\n (let (($x77052 (and (distinct (_ bv576460752303357906 64) ?x103592) true)))\n (and $x77052 $x84158)))))))\n(check-sat)\n",
    "time": 17.430139303207397,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=13, tm_hour=17, tm_min=40, tm_sec=23, tm_wday=6, tm_yday=348, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            2.195948839187622
        ]
    }
}