{
    "filename": "test",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun unconstrained_ret_mbrtowc_3106_64 () (_ BitVec 64))\n(declare-fun sym_argv3_2_16 () (_ BitVec 16))\n(declare-fun strlen_1178_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_2931_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_3025_64 () (_ BitVec 64))\n(assert\n (let (($x6198 (= (_ bv0 64) unconstrained_ret_mbrtowc_3106_64)))\n (not $x6198)))\n(assert\n (let (($x74577 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_3106_64)))\n (not $x74577)))\n(assert\n (let (($x75030 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_3106_64)))\n (not $x75030)))\n(assert\n (let ((?x37608 ((_ extract 13 8) sym_argv3_2_16)))\n (let (($x47404 (bvule ?x37608 (_ bv39 6))))\n (let ((?x28015 ((_ extract 15 14) sym_argv3_2_16)))\n (let (($x19891 (= (_ bv0 2) ?x28015)))\n (let (($x47427 (and $x19891 $x47404)))\n (let ((?x1624 (ite $x47427 (_ bv2 8) (_ bv1 8))))\n (let ((?x955 ((_ extract 15 8) sym_argv3_2_16)))\n (let (($x45941 (bvule (_ bv39 8) ?x955)))\n (let ((?x17045 (ite $x45941 ?x1624 (_ bv255 8))))\n (let (($x32895 (= (_ bv39 8) ?x955)))\n (let ((?x44545 (ite $x32895 (_ bv0 8) ?x17045)))\n (let (($x38898 (= (_ bv0 8) ?x44545)))\n (let (($x29336 (not $x38898)))\n (let (($x31280 (or $x32895 $x45941)))\n (let ((?x10615 (ite $x31280 (_ bv0 8) (_ bv255 8))))\n (let (($x24507 (= (_ bv0 8) ?x10615)))\n (let (($x16923 (not $x24507)))\n (or $x16923 $x29336)))))))))))))))))))\n(assert\n (let ((?x11843 ((_ extract 14 8) sym_argv3_2_16)))\n (let (($x2750 (bvule ?x11843 (_ bv126 7))))\n (let (($x32513 (not $x2750)))\n (let ((?x35432 ((_ extract 15 15) sym_argv3_2_16)))\n (let (($x33975 (= (_ bv0 1) ?x35432)))\n (let (($x40018 (not $x33975)))\n (or $x40018 $x32513))))))))\n(assert\n (let ((?x45984 (bvadd (_ bv576460752303357909 64) strlen_1178_64)))\n (let ((?x426 ((_ extract 7 0) sym_argv3_2_16)))\n (let (($x1418 (= (_ bv0 8) ?x426)))\n (let ((?x1844 (ite $x1418 (_ bv576460752303357910 64) (_ bv576460752303357911 64))))\n (let ((?x955 ((_ extract 15 8) sym_argv3_2_16)))\n (let (($x1093 (= (_ bv0 8) ?x955)))\n (let ((?x219 (ite $x1093 (_ bv576460752303357909 64) ?x1844)))\n (= ?x219 ?x45984)))))))))\n(assert\n (bvule (_ bv2 64) strlen_1178_64))\n(assert\n (let ((?x426 ((_ extract 7 0) sym_argv3_2_16)))\n (let (($x13591 (bvule (_ bv39 8) ?x426)))\n (let (($x15654 (= (_ bv39 8) ?x426)))\n (let (($x38975 (or $x15654 $x13591)))\n (let ((?x39827 (ite $x38975 (_ bv0 8) (_ bv255 8))))\n (let (($x49436 (= (_ bv0 8) ?x39827)))\n (let (($x28210 (not $x49436)))\n (let ((?x37322 ((_ extract 5 0) sym_argv3_2_16)))\n (let (($x43834 (bvule ?x37322 (_ bv39 6))))\n (let ((?x49759 ((_ extract 7 6) sym_argv3_2_16)))\n (let (($x46208 (= (_ bv0 2) ?x49759)))\n (let (($x31432 (and $x46208 $x43834)))\n (let ((?x47449 (ite $x31432 (_ bv2 8) (_ bv1 8))))\n (let ((?x19176 (ite $x13591 ?x47449 (_ bv255 8))))\n (let ((?x16794 (ite $x15654 (_ bv0 8) ?x19176)))\n (let (($x45746 (= (_ bv0 8) ?x16794)))\n (let (($x54905 (not $x45746)))\n (or $x54905 $x28210)))))))))))))))))))\n(assert\n (let ((?x51380 ((_ extract 6 0) sym_argv3_2_16)))\n (let (($x1274 (bvule ?x51380 (_ bv126 7))))\n (let (($x390 (not $x1274)))\n (let ((?x21672 ((_ extract 7 7) sym_argv3_2_16)))\n (let (($x31576 (= (_ bv0 1) ?x21672)))\n (let (($x40019 (not $x31576)))\n (or $x40019 $x390))))))))\n(assert\n (let (($x52811 (= (_ bv4 64) strlen_1178_64)))\n (not $x52811)))\n(assert\n (let (($x47711 (= (_ bv5 64) strlen_1178_64)))\n (not $x47711)))\n(assert\n (let (($x20849 (= (_ bv6 64) strlen_1178_64)))\n (not $x20849)))\n(assert\n (let (($x9701 (bvule (_ bv8 64) strlen_1178_64)))\n (not $x9701)))\n(assert\n (let (($x41650 (= (_ bv0 64) unconstrained_ret_mbrtowc_2931_64)))\n (not $x41650)))\n(assert\n (let (($x33377 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_2931_64)))\n (not $x33377)))\n(assert\n (let (($x3351 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_2931_64)))\n (not $x3351)))\n(assert\n (let (($x42176 (= (_ bv0 64) unconstrained_ret_mbrtowc_3025_64)))\n (not $x42176)))\n(assert\n (let (($x86880 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_3025_64)))\n (not $x86880)))\n(assert\n (let (($x103653 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_3025_64)))\n (not $x103653)))\n(assert\n (let ((?x80592 (bvadd (_ bv10 64) unconstrained_ret_mbrtowc_2931_64)))\n (let ((?x206520 (bvadd ?x80592 unconstrained_ret_mbrtowc_3025_64)))\n (let ((?x175435 (bvadd ?x206520 unconstrained_ret_mbrtowc_3106_64)))\n (let (($x75626 (bvule strlen_1178_64 ?x175435)))\n (not $x75626))))))\n(assert\n (let ((?x7063 ((_ extract 2 0) strlen_1178_64)))\n (bvule ?x7063 (_ bv6 3))))\n(assert\n (let ((?x71271 (bvadd (_ bv576460752303357919 64) unconstrained_ret_mbrtowc_2931_64)))\n (let ((?x35125 (bvadd ?x71271 unconstrained_ret_mbrtowc_3025_64)))\n (let ((?x164380 (bvadd ?x35125 unconstrained_ret_mbrtowc_3106_64)))\n (bvule (_ bv576460752303357909 64) ?x164380)))))\n(assert\n (let ((?x71271 (bvadd (_ bv576460752303357919 64) unconstrained_ret_mbrtowc_2931_64)))\n (let ((?x35125 (bvadd ?x71271 unconstrained_ret_mbrtowc_3025_64)))\n (let ((?x164380 (bvadd ?x35125 unconstrained_ret_mbrtowc_3106_64)))\n (let ((?x150748 ((_ extract 63 59) ?x164380)))\n (= (_ bv0 5) ?x150748))))))\n(assert\n (let ((?x143983 ((_ extract 58 0) unconstrained_ret_mbrtowc_3106_64)))\n (let ((?x111519 ((_ extract 58 0) unconstrained_ret_mbrtowc_3025_64)))\n (let ((?x85338 ((_ extract 58 0) unconstrained_ret_mbrtowc_2931_64)))\n (let ((?x82692 (bvadd (_ bv576460752303357919 59) ?x85338)))\n (let ((?x47329 (bvadd ?x82692 ?x111519)))\n (let ((?x172335 (bvadd ?x47329 ?x143983)))\n (bvule ?x172335 (_ bv576460752303357910 59)))))))))\n(assert\n (let ((?x201478 (bvadd unconstrained_ret_mbrtowc_2931_64 unconstrained_ret_mbrtowc_3025_64)))\n (let ((?x202831 (bvadd ?x201478 unconstrained_ret_mbrtowc_3106_64)))\n (let ((?x56803 (bvadd ?x202831 (_ bv576460752303357919 64))))\n (let (($x162240 (and (distinct (_ bv576460752303357910 64) ?x56803) true)))\n (let (($x167904 (and (distinct (_ bv576460752303357909 64) ?x56803) true)))\n (and $x167904 $x162240)))))))\n(check-sat)\n",
    "time": 13.447097063064575,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=13, tm_hour=18, tm_min=2, tm_sec=3, tm_wday=6, tm_yday=348, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            0.9292788505554199
        ]
    }
}