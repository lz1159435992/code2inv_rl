{
    "filename": "test",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun unconstrained_ret_mbrtowc_3097_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_3187_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_3274_64 () (_ BitVec 64))\n(assert\n (let (($x187390 (= (_ bv0 64) unconstrained_ret_mbrtowc_3097_64)))\n (not $x187390)))\n(assert\n (let (($x92158 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_3097_64)))\n (not $x92158)))\n(assert\n (let (($x159374 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_3097_64)))\n (not $x159374)))\n(assert\n (let (($x153561 (= (_ bv0 64) unconstrained_ret_mbrtowc_3187_64)))\n (not $x153561)))\n(assert\n (let (($x159016 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_3187_64)))\n (not $x159016)))\n(assert\n (let (($x176272 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_3187_64)))\n (not $x176272)))\n(assert\n (let (($x85540 (= (_ bv0 64) unconstrained_ret_mbrtowc_3274_64)))\n (not $x85540)))\n(assert\n (let (($x187001 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_3274_64)))\n (not $x187001)))\n(assert\n (let (($x78497 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_3274_64)))\n (not $x78497)))\n(assert\n (let ((?x189010 (bvadd (_ bv13 64) unconstrained_ret_mbrtowc_3097_64)))\n (let ((?x105074 (bvadd ?x189010 unconstrained_ret_mbrtowc_3187_64)))\n (let ((?x163981 (bvadd ?x105074 unconstrained_ret_mbrtowc_3274_64)))\n (let (($x138240 (bvule (_ bv2 64) ?x163981)))\n (not $x138240))))))\n(assert\n (let ((?x184570 (bvadd (_ bv576460752303357919 64) unconstrained_ret_mbrtowc_3097_64)))\n (let ((?x147618 (bvadd ?x184570 unconstrained_ret_mbrtowc_3187_64)))\n (let ((?x190620 (bvadd ?x147618 unconstrained_ret_mbrtowc_3274_64)))\n (bvule (_ bv576460752303357906 64) ?x190620)))))\n(assert\n (let ((?x184570 (bvadd (_ bv576460752303357919 64) unconstrained_ret_mbrtowc_3097_64)))\n (let ((?x147618 (bvadd ?x184570 unconstrained_ret_mbrtowc_3187_64)))\n (let ((?x190620 (bvadd ?x147618 unconstrained_ret_mbrtowc_3274_64)))\n (let ((?x149074 ((_ extract 63 59) ?x190620)))\n (= (_ bv0 5) ?x149074))))))\n(assert\n (let ((?x200915 ((_ extract 58 0) unconstrained_ret_mbrtowc_3274_64)))\n (let ((?x187425 ((_ extract 58 0) unconstrained_ret_mbrtowc_3187_64)))\n (let ((?x62549 ((_ extract 58 0) unconstrained_ret_mbrtowc_3097_64)))\n (let ((?x157895 (bvadd (_ bv576460752303357919 59) ?x62549)))\n (let ((?x174746 (bvadd ?x157895 ?x187425)))\n (let ((?x161064 (bvadd ?x174746 ?x200915)))\n (bvule ?x161064 (_ bv576460752303357907 59)))))))))\n(assert\n (let ((?x64576 (bvadd unconstrained_ret_mbrtowc_3097_64 unconstrained_ret_mbrtowc_3187_64)))\n (let ((?x183003 (bvadd ?x64576 unconstrained_ret_mbrtowc_3274_64)))\n (let ((?x196063 (bvadd ?x183003 (_ bv576460752303357919 64))))\n (let (($x148101 (and (distinct (_ bv576460752303357907 64) ?x196063) true)))\n (let (($x70308 (and (distinct (_ bv576460752303357906 64) ?x196063) true)))\n (and $x70308 $x148101)))))))\n(check-sat)\n",
    "time": 29.283944368362427,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=13, tm_hour=18, tm_min=10, tm_sec=21, tm_wday=6, tm_yday=348, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            2.448793888092041
        ]
    }
}