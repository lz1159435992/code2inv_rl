{
    "filename": "factor",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun unconstrained_ret_mbrtowc_1269_64 () (_ BitVec 64))\n(declare-fun sym_argv_0_80 () (_ BitVec 80))\n(declare-fun strlen_1258_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_1355_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_1586_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_1422_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_1503_64 () (_ BitVec 64))\n(assert\n (let (($x136520 (= (_ bv0 64) unconstrained_ret_mbrtowc_1269_64)))\n (not $x136520)))\n(assert\n (let (($x26001 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1269_64)))\n (not $x26001)))\n(assert\n (let (($x185505 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1269_64)))\n (not $x185505)))\n(assert\n (let ((?x236 ((_ extract 55 55) sym_argv_0_80)))\n (= (_ bv0 1) ?x236)))\n(assert\n (let ((?x227 ((_ extract 47 47) sym_argv_0_80)))\n (= (_ bv0 1) ?x227)))\n(assert\n (let ((?x234 ((_ extract 39 39) sym_argv_0_80)))\n (= (_ bv0 1) ?x234)))\n(assert\n (let ((?x337 ((_ extract 31 31) sym_argv_0_80)))\n (= (_ bv0 1) ?x337)))\n(assert\n (let ((?x346 ((_ extract 23 23) sym_argv_0_80)))\n (= (_ bv0 1) ?x346)))\n(assert\n (let ((?x322 ((_ extract 15 15) sym_argv_0_80)))\n (= (_ bv0 1) ?x322)))\n(assert\n (let ((?x323 ((_ extract 7 7) sym_argv_0_80)))\n (= (_ bv0 1) ?x323)))\n(assert\n (let ((?x245 ((_ extract 54 48) sym_argv_0_80)))\n (bvule ?x245 (_ bv126 7))))\n(assert\n (let ((?x244 ((_ extract 46 40) sym_argv_0_80)))\n (bvule ?x244 (_ bv126 7))))\n(assert\n (let ((?x235 ((_ extract 38 32) sym_argv_0_80)))\n (bvule ?x235 (_ bv126 7))))\n(assert\n (let ((?x339 ((_ extract 30 24) sym_argv_0_80)))\n (bvule ?x339 (_ bv126 7))))\n(assert\n (let ((?x348 ((_ extract 22 16) sym_argv_0_80)))\n (bvule ?x348 (_ bv126 7))))\n(assert\n (let ((?x353 ((_ extract 14 8) sym_argv_0_80)))\n (bvule ?x353 (_ bv126 7))))\n(assert\n (let ((?x327 ((_ extract 6 0) sym_argv_0_80)))\n (bvule ?x327 (_ bv126 7))))\n(assert\n (let ((?x16 ((_ extract 79 72) sym_argv_0_80)))\n (= (_ bv45 8) ?x16)))\n(assert\n (let ((?x24 ((_ extract 71 64) sym_argv_0_80)))\n (= (_ bv63 8) ?x24)))\n(assert\n (let ((?x182512 ((_ extract 61 56) sym_argv_0_80)))\n (let (($x121211 (bvule ?x182512 (_ bv39 6))))\n (let ((?x234891 ((_ extract 63 62) sym_argv_0_80)))\n (let (($x10303 (= (_ bv0 2) ?x234891)))\n (let (($x237784 (and $x10303 $x121211)))\n (let ((?x78245 (ite $x237784 (_ bv2 8) (_ bv1 8))))\n (let (($x218709 (= (_ bv0 8) ?x78245)))\n (not $x218709)))))))))\n(assert\n (let ((?x18 ((_ extract 63 56) sym_argv_0_80)))\n (= (_ bv64 8) ?x18)))\n(assert\n (let ((?x47236 (bvadd (_ bv576460752303357897 64) strlen_1258_64)))\n (let ((?x35 ((_ extract 7 0) sym_argv_0_80)))\n (let (($x253317 (= (_ bv0 8) ?x35)))\n (let ((?x72018 (ite $x253317 (_ bv576460752303357906 64) (_ bv576460752303357907 64))))\n (let ((?x19 ((_ extract 15 8) sym_argv_0_80)))\n (let (($x41370 (= (_ bv0 8) ?x19)))\n (let ((?x212561 (ite $x41370 (_ bv576460752303357905 64) ?x72018)))\n (let ((?x21 ((_ extract 23 16) sym_argv_0_80)))\n (let (($x44358 (= (_ bv0 8) ?x21)))\n (let ((?x86881 (ite $x44358 (_ bv576460752303357904 64) ?x212561)))\n (let ((?x23 ((_ extract 31 24) sym_argv_0_80)))\n (let (($x258109 (= (_ bv0 8) ?x23)))\n (let ((?x134562 (ite $x258109 (_ bv576460752303357903 64) ?x86881)))\n (let ((?x27 ((_ extract 39 32) sym_argv_0_80)))\n (let (($x124641 (= (_ bv0 8) ?x27)))\n (let ((?x233436 (ite $x124641 (_ bv576460752303357902 64) ?x134562)))\n (let ((?x29 ((_ extract 47 40) sym_argv_0_80)))\n (let (($x99905 (= (_ bv0 8) ?x29)))\n (let ((?x108032 (ite $x99905 (_ bv576460752303357901 64) ?x233436)))\n (let ((?x31 ((_ extract 55 48) sym_argv_0_80)))\n (let (($x100656 (= (_ bv0 8) ?x31)))\n (let ((?x29893 (ite $x100656 (_ bv576460752303357900 64) ?x108032)))\n (= ?x29893 ?x47236))))))))))))))))))))))))\n(assert\n (let (($x18426 (= (_ bv0 64) unconstrained_ret_mbrtowc_1355_64)))\n (not $x18426)))\n(assert\n (let (($x258422 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1355_64)))\n (not $x258422)))\n(assert\n (let (($x297900 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1355_64)))\n (not $x297900)))\n(assert\n (let (($x305816 (= (_ bv0 64) unconstrained_ret_mbrtowc_1586_64)))\n (not $x305816)))\n(assert\n (let (($x327157 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1586_64)))\n (not $x327157)))\n(assert\n (let (($x72957 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1586_64)))\n (not $x72957)))\n(assert\n (let (($x303222 (= (_ bv0 64) unconstrained_ret_mbrtowc_1422_64)))\n (not $x303222)))\n(assert\n (let (($x414628 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1422_64)))\n (not $x414628)))\n(assert\n (let (($x237855 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1422_64)))\n (not $x237855)))\n(assert\n (let (($x139290 (= (_ bv0 64) unconstrained_ret_mbrtowc_1503_64)))\n (not $x139290)))\n(assert\n (let (($x84407 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1503_64)))\n (not $x84407)))\n(assert\n (let (($x307601 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1503_64)))\n (not $x307601)))\n(assert\n (let ((?x190937 (bvadd (_ bv2 64) unconstrained_ret_mbrtowc_1269_64)))\n (let ((?x119808 (bvadd (bvadd ?x190937 unconstrained_ret_mbrtowc_1355_64) unconstrained_ret_mbrtowc_1422_64)))\n (let ((?x43772 (bvadd ?x119808 unconstrained_ret_mbrtowc_1503_64)))\n (let ((?x29414 (bvadd ?x43772 unconstrained_ret_mbrtowc_1586_64)))\n (let (($x367575 (bvule strlen_1258_64 ?x29414)))\n (not $x367575)))))))\n(assert\n (let ((?x195475 (bvadd (_ bv576460752303357899 64) unconstrained_ret_mbrtowc_1269_64)))\n (let ((?x364093 (bvadd (bvadd ?x195475 unconstrained_ret_mbrtowc_1355_64) unconstrained_ret_mbrtowc_1422_64)))\n (let ((?x117268 (bvadd ?x364093 unconstrained_ret_mbrtowc_1503_64)))\n (let ((?x226668 (bvadd ?x117268 unconstrained_ret_mbrtowc_1586_64)))\n (bvule (_ bv576460752303357897 64) ?x226668))))))\n(assert\n (let ((?x195475 (bvadd (_ bv576460752303357899 64) unconstrained_ret_mbrtowc_1269_64)))\n (let ((?x364093 (bvadd (bvadd ?x195475 unconstrained_ret_mbrtowc_1355_64) unconstrained_ret_mbrtowc_1422_64)))\n (let ((?x117268 (bvadd ?x364093 unconstrained_ret_mbrtowc_1503_64)))\n (let ((?x226668 (bvadd ?x117268 unconstrained_ret_mbrtowc_1586_64)))\n (let ((?x185251 ((_ extract 63 59) ?x226668)))\n (= (_ bv0 5) ?x185251)))))))\n(assert\n (let ((?x112074 ((_ extract 58 0) unconstrained_ret_mbrtowc_1586_64)))\n (let ((?x429986 ((_ extract 58 0) unconstrained_ret_mbrtowc_1503_64)))\n (let ((?x425314 ((_ extract 58 0) unconstrained_ret_mbrtowc_1422_64)))\n (let ((?x133951 ((_ extract 58 0) unconstrained_ret_mbrtowc_1355_64)))\n (let ((?x301923 ((_ extract 58 0) unconstrained_ret_mbrtowc_1269_64)))\n (let ((?x310290 (bvadd (_ bv576460752303357899 59) ?x301923)))\n (let ((?x383950 (bvadd (bvadd ?x310290 ?x133951) ?x425314)))\n (let ((?x62913 (bvadd ?x383950 ?x429986)))\n (let ((?x502714 (bvadd ?x62913 ?x112074)))\n (bvule ?x502714 (_ bv576460752303357906 59))))))))))))\n(assert\n (let ((?x354645 (bvadd unconstrained_ret_mbrtowc_1269_64 unconstrained_ret_mbrtowc_1355_64)))\n (let ((?x252716 (bvadd (bvadd ?x354645 unconstrained_ret_mbrtowc_1422_64) unconstrained_ret_mbrtowc_1503_64)))\n (let ((?x28378 (bvadd ?x252716 unconstrained_ret_mbrtowc_1586_64)))\n (let ((?x725747 (bvadd ?x28378 (_ bv576460752303357899 64))))\n (let (($x714950 (and (distinct (_ bv576460752303357906 64) ?x725747) true)))\n (let (($x46578 (and (distinct (_ bv576460752303357899 64) ?x725747) true)))\n (let (($x688323 (and (distinct (_ bv576460752303357904 64) ?x725747) true)))\n (let (($x648668 (and (distinct (_ bv576460752303357898 64) ?x725747) true)))\n (let (($x198294 (and (distinct (_ bv576460752303357897 64) ?x725747) true)))\n (and $x198294 $x648668 $x688323 $x46578 $x714950)))))))))))\n(assert\n (let ((?x354645 (bvadd unconstrained_ret_mbrtowc_1269_64 unconstrained_ret_mbrtowc_1355_64)))\n (let ((?x252716 (bvadd (bvadd ?x354645 unconstrained_ret_mbrtowc_1422_64) unconstrained_ret_mbrtowc_1503_64)))\n (let ((?x28378 (bvadd ?x252716 unconstrained_ret_mbrtowc_1586_64)))\n (let ((?x725747 (bvadd ?x28378 (_ bv576460752303357899 64))))\n (and (distinct ?x725747 (_ bv576460752303357900 64)) true))))))\n(assert\n (let ((?x354645 (bvadd unconstrained_ret_mbrtowc_1269_64 unconstrained_ret_mbrtowc_1355_64)))\n (let ((?x252716 (bvadd (bvadd ?x354645 unconstrained_ret_mbrtowc_1422_64) unconstrained_ret_mbrtowc_1503_64)))\n (let ((?x28378 (bvadd ?x252716 unconstrained_ret_mbrtowc_1586_64)))\n (let ((?x725747 (bvadd ?x28378 (_ bv576460752303357899 64))))\n (and (distinct ?x725747 (_ bv576460752303357903 64)) true))))))\n(assert\n (let ((?x354645 (bvadd unconstrained_ret_mbrtowc_1269_64 unconstrained_ret_mbrtowc_1355_64)))\n (let ((?x252716 (bvadd (bvadd ?x354645 unconstrained_ret_mbrtowc_1422_64) unconstrained_ret_mbrtowc_1503_64)))\n (let ((?x28378 (bvadd ?x252716 unconstrained_ret_mbrtowc_1586_64)))\n (let ((?x725747 (bvadd ?x28378 (_ bv576460752303357899 64))))\n (and (distinct ?x725747 (_ bv576460752303357901 64)) true))))))\n(assert\n (let ((?x354645 (bvadd unconstrained_ret_mbrtowc_1269_64 unconstrained_ret_mbrtowc_1355_64)))\n (let ((?x252716 (bvadd (bvadd ?x354645 unconstrained_ret_mbrtowc_1422_64) unconstrained_ret_mbrtowc_1503_64)))\n (let ((?x28378 (bvadd ?x252716 unconstrained_ret_mbrtowc_1586_64)))\n (let ((?x725747 (bvadd ?x28378 (_ bv576460752303357899 64))))\n (and (distinct ?x725747 (_ bv576460752303357902 64)) true))))))\n(assert\n (let ((?x354645 (bvadd unconstrained_ret_mbrtowc_1269_64 unconstrained_ret_mbrtowc_1355_64)))\n (let ((?x252716 (bvadd (bvadd ?x354645 unconstrained_ret_mbrtowc_1422_64) unconstrained_ret_mbrtowc_1503_64)))\n (let ((?x28378 (bvadd ?x252716 unconstrained_ret_mbrtowc_1586_64)))\n (let ((?x725747 (bvadd ?x28378 (_ bv576460752303357899 64))))\n (and (distinct ?x725747 (_ bv576460752303357905 64)) true))))))\n(check-sat)\n",
    "time": 100.00028085708618,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=2, tm_hour=18, tm_min=20, tm_sec=51, tm_wday=2, tm_yday=337, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            300.0089621543884
        ]
    }
}