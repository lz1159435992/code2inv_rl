{
    "filename": "factor",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun unconstrained_ret_mbrtowc_1376_64 () (_ BitVec 64))\n(declare-fun sym_argv_0_80 () (_ BitVec 80))\n(declare-fun strlen_1361_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_1526_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_1447_64 () (_ BitVec 64))\n(assert\n (let (($x201374 (= (_ bv0 64) unconstrained_ret_mbrtowc_1376_64)))\n (not $x201374)))\n(assert\n (let (($x122592 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1376_64)))\n (not $x122592)))\n(assert\n (let (($x365439 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1376_64)))\n (not $x365439)))\n(assert\n (let ((?x227 ((_ extract 47 47) sym_argv_0_80)))\n (= (_ bv0 1) ?x227)))\n(assert\n (let ((?x234 ((_ extract 39 39) sym_argv_0_80)))\n (= (_ bv0 1) ?x234)))\n(assert\n (let ((?x337 ((_ extract 31 31) sym_argv_0_80)))\n (= (_ bv0 1) ?x337)))\n(assert\n (let ((?x346 ((_ extract 23 23) sym_argv_0_80)))\n (= (_ bv0 1) ?x346)))\n(assert\n (let ((?x322 ((_ extract 15 15) sym_argv_0_80)))\n (= (_ bv0 1) ?x322)))\n(assert\n (let ((?x323 ((_ extract 7 7) sym_argv_0_80)))\n (= (_ bv0 1) ?x323)))\n(assert\n (let ((?x244 ((_ extract 46 40) sym_argv_0_80)))\n (bvule ?x244 (_ bv126 7))))\n(assert\n (let ((?x235 ((_ extract 38 32) sym_argv_0_80)))\n (bvule ?x235 (_ bv126 7))))\n(assert\n (let ((?x339 ((_ extract 30 24) sym_argv_0_80)))\n (bvule ?x339 (_ bv126 7))))\n(assert\n (let ((?x348 ((_ extract 22 16) sym_argv_0_80)))\n (bvule ?x348 (_ bv126 7))))\n(assert\n (let ((?x353 ((_ extract 14 8) sym_argv_0_80)))\n (bvule ?x353 (_ bv126 7))))\n(assert\n (let ((?x327 ((_ extract 6 0) sym_argv_0_80)))\n (bvule ?x327 (_ bv126 7))))\n(assert\n (let ((?x16 ((_ extract 79 72) sym_argv_0_80)))\n (= (_ bv45 8) ?x16)))\n(assert\n (let ((?x24 ((_ extract 71 64) sym_argv_0_80)))\n (= (_ bv63 8) ?x24)))\n(assert\n (let ((?x18 ((_ extract 63 56) sym_argv_0_80)))\n (= (_ bv13 8) ?x18)))\n(assert\n (let ((?x109683 ((_ extract 53 48) sym_argv_0_80)))\n (let (($x301880 (bvule ?x109683 (_ bv39 6))))\n (let ((?x224877 ((_ extract 55 54) sym_argv_0_80)))\n (let (($x11687 (= (_ bv0 2) ?x224877)))\n (let (($x314718 (and $x11687 $x301880)))\n (let ((?x226498 (ite $x314718 (_ bv2 8) (_ bv1 8))))\n (let (($x58152 (= (_ bv0 8) ?x226498)))\n (not $x58152)))))))))\n(assert\n (let ((?x31 ((_ extract 55 48) sym_argv_0_80)))\n (= (_ bv64 8) ?x31)))\n(assert\n (let ((?x364946 (bvadd (_ bv576460752303357897 64) strlen_1361_64)))\n (let ((?x35 ((_ extract 7 0) sym_argv_0_80)))\n (let (($x253317 (= (_ bv0 8) ?x35)))\n (let ((?x72018 (ite $x253317 (_ bv576460752303357906 64) (_ bv576460752303357907 64))))\n (let ((?x19 ((_ extract 15 8) sym_argv_0_80)))\n (let (($x41370 (= (_ bv0 8) ?x19)))\n (let ((?x212561 (ite $x41370 (_ bv576460752303357905 64) ?x72018)))\n (let ((?x21 ((_ extract 23 16) sym_argv_0_80)))\n (let (($x44358 (= (_ bv0 8) ?x21)))\n (let ((?x86881 (ite $x44358 (_ bv576460752303357904 64) ?x212561)))\n (let ((?x23 ((_ extract 31 24) sym_argv_0_80)))\n (let (($x258109 (= (_ bv0 8) ?x23)))\n (let ((?x134562 (ite $x258109 (_ bv576460752303357903 64) ?x86881)))\n (let ((?x27 ((_ extract 39 32) sym_argv_0_80)))\n (let (($x124641 (= (_ bv0 8) ?x27)))\n (let ((?x233436 (ite $x124641 (_ bv576460752303357902 64) ?x134562)))\n (let ((?x29 ((_ extract 47 40) sym_argv_0_80)))\n (let (($x99905 (= (_ bv0 8) ?x29)))\n (let ((?x108032 (ite $x99905 (_ bv576460752303357901 64) ?x233436)))\n (= ?x108032 ?x364946)))))))))))))))))))))\n(assert\n (let (($x71092 (= (_ bv0 64) unconstrained_ret_mbrtowc_1526_64)))\n (not $x71092)))\n(assert\n (let (($x105594 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1526_64)))\n (not $x105594)))\n(assert\n (let (($x431956 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1526_64)))\n (not $x431956)))\n(assert\n (let (($x121661 (= (_ bv0 64) unconstrained_ret_mbrtowc_1447_64)))\n (not $x121661)))\n(assert\n (let (($x113693 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1447_64)))\n (not $x113693)))\n(assert\n (let (($x50622 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1447_64)))\n (not $x50622)))\n(assert\n (let ((?x384935 (bvadd (_ bv3 64) unconstrained_ret_mbrtowc_1376_64)))\n (let ((?x338700 (bvadd ?x384935 unconstrained_ret_mbrtowc_1447_64)))\n (let ((?x149570 (bvadd ?x338700 unconstrained_ret_mbrtowc_1526_64)))\n (let (($x1965 (bvule strlen_1361_64 ?x149570)))\n (not $x1965))))))\n(assert\n (let ((?x93037 (bvadd (_ bv576460752303357900 64) unconstrained_ret_mbrtowc_1376_64)))\n (let ((?x271169 (bvadd ?x93037 unconstrained_ret_mbrtowc_1447_64)))\n (let ((?x99994 (bvadd ?x271169 unconstrained_ret_mbrtowc_1526_64)))\n (bvule (_ bv576460752303357897 64) ?x99994)))))\n(assert\n (let ((?x93037 (bvadd (_ bv576460752303357900 64) unconstrained_ret_mbrtowc_1376_64)))\n (let ((?x271169 (bvadd ?x93037 unconstrained_ret_mbrtowc_1447_64)))\n (let ((?x99994 (bvadd ?x271169 unconstrained_ret_mbrtowc_1526_64)))\n (let ((?x187139 ((_ extract 63 59) ?x99994)))\n (= (_ bv0 5) ?x187139))))))\n(assert\n (let ((?x219889 ((_ extract 58 0) unconstrained_ret_mbrtowc_1526_64)))\n (let ((?x450055 ((_ extract 58 0) unconstrained_ret_mbrtowc_1447_64)))\n (let ((?x372255 ((_ extract 58 0) unconstrained_ret_mbrtowc_1376_64)))\n (let ((?x171385 (bvadd (_ bv576460752303357900 59) ?x372255)))\n (let ((?x354478 (bvadd ?x171385 ?x450055)))\n (let ((?x18129 (bvadd ?x354478 ?x219889)))\n (bvule ?x18129 (_ bv576460752303357906 59)))))))))\n(assert\n (let ((?x261498 (bvadd unconstrained_ret_mbrtowc_1376_64 unconstrained_ret_mbrtowc_1447_64)))\n (let ((?x292689 (bvadd ?x261498 unconstrained_ret_mbrtowc_1526_64)))\n (let ((?x15217 (bvadd ?x292689 (_ bv576460752303357900 64))))\n (let (($x3121 (and (distinct (_ bv576460752303357906 64) ?x15217) true)))\n (let (($x50514 (and (distinct (_ bv576460752303357900 64) ?x15217) true)))\n (let (($x243143 (and (distinct (_ bv576460752303357905 64) ?x15217) true)))\n (let (($x372771 (and (distinct (_ bv576460752303357898 64) ?x15217) true)))\n (let (($x41242 (and (distinct (_ bv576460752303357897 64) ?x15217) true)))\n (and $x41242 $x372771 $x243143 $x50514 $x3121))))))))))\n(assert\n (let ((?x261498 (bvadd unconstrained_ret_mbrtowc_1376_64 unconstrained_ret_mbrtowc_1447_64)))\n (let ((?x292689 (bvadd ?x261498 unconstrained_ret_mbrtowc_1526_64)))\n (let ((?x15217 (bvadd ?x292689 (_ bv576460752303357900 64))))\n (and (distinct ?x15217 (_ bv576460752303357899 64)) true)))))\n(assert\n (let ((?x261498 (bvadd unconstrained_ret_mbrtowc_1376_64 unconstrained_ret_mbrtowc_1447_64)))\n (let ((?x292689 (bvadd ?x261498 unconstrained_ret_mbrtowc_1526_64)))\n (let ((?x15217 (bvadd ?x292689 (_ bv576460752303357900 64))))\n (and (distinct ?x15217 (_ bv576460752303357903 64)) true)))))\n(assert\n (let ((?x261498 (bvadd unconstrained_ret_mbrtowc_1376_64 unconstrained_ret_mbrtowc_1447_64)))\n (let ((?x292689 (bvadd ?x261498 unconstrained_ret_mbrtowc_1526_64)))\n (let ((?x15217 (bvadd ?x292689 (_ bv576460752303357900 64))))\n (and (distinct ?x15217 (_ bv576460752303357904 64)) true)))))\n(assert\n (let ((?x261498 (bvadd unconstrained_ret_mbrtowc_1376_64 unconstrained_ret_mbrtowc_1447_64)))\n (let ((?x292689 (bvadd ?x261498 unconstrained_ret_mbrtowc_1526_64)))\n (let ((?x15217 (bvadd ?x292689 (_ bv576460752303357900 64))))\n (and (distinct ?x15217 (_ bv576460752303357902 64)) true)))))\n(assert\n (let ((?x261498 (bvadd unconstrained_ret_mbrtowc_1376_64 unconstrained_ret_mbrtowc_1447_64)))\n (let ((?x292689 (bvadd ?x261498 unconstrained_ret_mbrtowc_1526_64)))\n (let ((?x15217 (bvadd ?x292689 (_ bv576460752303357900 64))))\n (and (distinct ?x15217 (_ bv576460752303357901 64)) true)))))\n(check-sat)\n",
    "time": 100.0004608631134,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=2, tm_hour=15, tm_min=41, tm_sec=51, tm_wday=2, tm_yday=337, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            16.743388652801514
        ]
    }
}