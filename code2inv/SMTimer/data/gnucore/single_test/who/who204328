{
    "filename": "who",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun sym_argv3_2_16 () (_ BitVec 16))\n(declare-fun strlen_2125_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_8356_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_8188_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_8537_64 () (_ BitVec 64))\n(assert\n (let ((?x2676 ((_ extract 15 8) sym_argv3_2_16)))\n (let (($x10358 (bvule (_ bv39 8) ?x2676)))\n (let (($x23905 (= (_ bv39 8) ?x2676)))\n (let (($x7322 (or $x23905 $x10358)))\n (let ((?x23042 (ite $x7322 (_ bv0 8) (_ bv255 8))))\n (let (($x3693 (= (_ bv0 8) ?x23042)))\n (let (($x11977 (not $x3693)))\n (let ((?x10674 ((_ extract 13 8) sym_argv3_2_16)))\n (let (($x18388 (bvule ?x10674 (_ bv39 6))))\n (let ((?x8564 ((_ extract 15 14) sym_argv3_2_16)))\n (let (($x15756 (= (_ bv0 2) ?x8564)))\n (let (($x26767 (and $x15756 $x18388)))\n (let ((?x25913 (ite $x26767 (_ bv2 8) (_ bv1 8))))\n (let ((?x3996 (ite $x10358 ?x25913 (_ bv255 8))))\n (let ((?x26002 (ite $x23905 (_ bv0 8) ?x3996)))\n (let (($x13169 (= (_ bv0 8) ?x26002)))\n (let (($x11798 (not $x13169)))\n (or $x11798 $x11977)))))))))))))))))))\n(assert\n (let ((?x15262 ((_ extract 14 8) sym_argv3_2_16)))\n (let (($x5141 (bvule ?x15262 (_ bv126 7))))\n (let (($x15912 (not $x5141)))\n (let ((?x1101 ((_ extract 15 15) sym_argv3_2_16)))\n (let (($x7267 (= (_ bv0 1) ?x1101)))\n (let (($x12654 (not $x7267)))\n (or $x12654 $x15912))))))))\n(assert\n (let ((?x19868 (bvadd (_ bv576460752303357908 64) strlen_2125_64)))\n (let ((?x2676 ((_ extract 15 8) sym_argv3_2_16)))\n (let (($x22430 (= (_ bv0 8) ?x2676)))\n (let ((?x690390 (ite $x22430 (_ bv576460752303357908 64) (_ bv576460752303357910 64))))\n (= ?x690390 ?x19868))))))\n(assert\n (bvule (_ bv2 64) strlen_2125_64))\n(assert\n (let ((?x25878 ((_ extract 5 0) sym_argv3_2_16)))\n (let (($x25941 (bvule ?x25878 (_ bv39 6))))\n (let ((?x207565 ((_ extract 7 6) sym_argv3_2_16)))\n (let (($x120646 (= (_ bv0 2) ?x207565)))\n (let (($x123322 (and $x120646 $x25941)))\n (let ((?x128129 (ite $x123322 (_ bv2 8) (_ bv1 8))))\n (let (($x350563 (= (_ bv0 8) ?x128129)))\n (not $x350563)))))))))\n(assert\n (let ((?x29965 ((_ extract 7 0) sym_argv3_2_16)))\n (= (_ bv64 8) ?x29965)))\n(assert\n (let (($x634826 (= (_ bv4 64) strlen_2125_64)))\n (not $x634826)))\n(assert\n (let (($x521310 (= (_ bv5 64) strlen_2125_64)))\n (not $x521310)))\n(assert\n (let (($x386344 (= (_ bv6 64) strlen_2125_64)))\n (not $x386344)))\n(assert\n (let (($x521641 (= (_ bv7 64) strlen_2125_64)))\n (not $x521641)))\n(assert\n (let (($x18156 (= (_ bv8 64) strlen_2125_64)))\n (not $x18156)))\n(assert\n (let (($x481074 (bvule (_ bv16 64) strlen_2125_64)))\n (not $x481074)))\n(assert\n (let (($x960926 (= (_ bv0 64) unconstrained_ret_mbrtowc_8356_64)))\n (not $x960926)))\n(assert\n (let (($x125709 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_8356_64)))\n (not $x125709)))\n(assert\n (let (($x203275 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_8356_64)))\n (not $x203275)))\n(assert\n (let (($x1020552 (= (_ bv0 64) unconstrained_ret_mbrtowc_8188_64)))\n (not $x1020552)))\n(assert\n (let (($x1079092 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_8188_64)))\n (not $x1079092)))\n(assert\n (let (($x991491 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_8188_64)))\n (not $x991491)))\n(assert\n (let (($x1084714 (= (_ bv0 64) unconstrained_ret_mbrtowc_8537_64)))\n (not $x1084714)))\n(assert\n (let (($x156882 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_8537_64)))\n (not $x156882)))\n(assert\n (let (($x379573 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_8537_64)))\n (not $x379573)))\n(assert\n (let ((?x247085 (bvadd (_ bv18 64) unconstrained_ret_mbrtowc_8188_64)))\n (let ((?x168300 (bvadd ?x247085 unconstrained_ret_mbrtowc_8356_64)))\n (let ((?x1117086 (bvadd ?x168300 unconstrained_ret_mbrtowc_8537_64)))\n (let (($x414692 (bvule strlen_2125_64 ?x1117086)))\n (not $x414692))))))\n(assert\n (let ((?x101567 ((_ extract 3 0) strlen_2125_64)))\n (bvule ?x101567 (_ bv8 4))))\n(assert\n (let ((?x205209 (bvadd (_ bv576460752303357926 64) unconstrained_ret_mbrtowc_8188_64)))\n (let ((?x139986 (bvadd ?x205209 unconstrained_ret_mbrtowc_8356_64)))\n (let ((?x1102421 (bvadd ?x139986 unconstrained_ret_mbrtowc_8537_64)))\n (bvule (_ bv576460752303357908 64) ?x1102421)))))\n(assert\n (let ((?x205209 (bvadd (_ bv576460752303357926 64) unconstrained_ret_mbrtowc_8188_64)))\n (let ((?x139986 (bvadd ?x205209 unconstrained_ret_mbrtowc_8356_64)))\n (let ((?x1102421 (bvadd ?x139986 unconstrained_ret_mbrtowc_8537_64)))\n (let ((?x1019360 ((_ extract 63 59) ?x1102421)))\n (= (_ bv0 5) ?x1019360))))))\n(assert\n (let ((?x1034704 ((_ extract 58 0) unconstrained_ret_mbrtowc_8537_64)))\n (let ((?x570215 ((_ extract 58 0) unconstrained_ret_mbrtowc_8356_64)))\n (let ((?x342358 ((_ extract 58 0) unconstrained_ret_mbrtowc_8188_64)))\n (let ((?x152971 (bvadd (_ bv576460752303357926 59) ?x342358)))\n (let ((?x309769 (bvadd (bvadd ?x152971 ?x570215) ?x1034704)))\n (bvule ?x309769 (_ bv576460752303357909 59))))))))\n(assert\n (let ((?x460781 (bvadd unconstrained_ret_mbrtowc_8188_64 unconstrained_ret_mbrtowc_8356_64)))\n (let ((?x303461 (bvadd ?x460781 unconstrained_ret_mbrtowc_8537_64)))\n (let ((?x684452 (bvadd ?x303461 (_ bv576460752303357926 64))))\n (let (($x943480 (and (distinct (_ bv576460752303357908 64) ?x684452) true)))\n (let (($x991197 (and (distinct (_ bv576460752303357909 64) ?x684452) true)))\n (and $x991197 $x943480)))))))\n(check-sat)\n",
    "time": 10.53006649017334,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=3, tm_hour=20, tm_min=49, tm_sec=14, tm_wday=3, tm_yday=338, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            2.234226703643799
        ]
    }
}