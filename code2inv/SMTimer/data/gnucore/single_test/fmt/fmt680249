{
    "filename": "fmt",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun unconstrained_ret_mbrtowc_15517_64 () (_ BitVec 64))\n(declare-fun sym_argv_0_80 () (_ BitVec 80))\n(declare-fun num_bytes_6216_64 () (_ BitVec 64))\n(declare-fun strlen_8089_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_14919_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_15678_64 () (_ BitVec 64))\n(assert\n (let (($x366219 (= (_ bv0 64) unconstrained_ret_mbrtowc_15517_64)))\n (not $x366219)))\n(assert\n (let (($x8859 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_15517_64)))\n (not $x8859)))\n(assert\n (let (($x267566 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_15517_64)))\n (not $x267566)))\n(assert\n (let ((?x269 ((_ extract 15 15) sym_argv_0_80)))\n (= (_ bv0 1) ?x269)))\n(assert\n (let ((?x254 ((_ extract 7 7) sym_argv_0_80)))\n (= (_ bv0 1) ?x254)))\n(assert\n (let ((?x16 ((_ extract 79 72) sym_argv_0_80)))\n (= (_ bv45 8) ?x16)))\n(assert\n (let ((?x303 ((_ extract 14 8) sym_argv_0_80)))\n (bvule ?x303 (_ bv126 7))))\n(assert\n (let ((?x515 ((_ extract 6 0) sym_argv_0_80)))\n (bvule ?x515 (_ bv126 7))))\n(assert\n (let ((?x15866 ((_ extract 71 70) sym_argv_0_80)))\n (let (($x25805 (= (_ bv0 2) ?x15866)))\n (let (($x19587 (not $x25805)))\n (let ((?x12086 ((_ extract 69 64) sym_argv_0_80)))\n (let (($x24776 (bvule ?x12086 (_ bv57 6))))\n (let (($x28476 (not $x24776)))\n (let (($x19158 (or $x28476 $x19587)))\n (let (($x229339 (= (_ bv1 64) num_bytes_6216_64)))\n (let (($x274266 (not $x229339)))\n (let (($x264758 (or $x274266 $x19158)))\n (let (($x198057 (not $x264758)))\n (let (($x252354 (not $x19158)))\n (let (($x240976 (= (_ bv0 64) num_bytes_6216_64)))\n (let (($x277071 (not $x240976)))\n (let (($x99970 (or $x277071 $x252354)))\n (let (($x277411 (not $x99970)))\n (or $x277411 $x198057))))))))))))))))))\n(assert\n (let ((?x12086 ((_ extract 69 64) sym_argv_0_80)))\n (let (($x24776 (bvule ?x12086 (_ bv57 6))))\n (let ((?x15866 ((_ extract 71 70) sym_argv_0_80)))\n (let (($x25805 (= (_ bv0 2) ?x15866)))\n (let (($x59530 (and $x25805 $x24776)))\n (let ((?x263664 (ite $x59530 num_bytes_6216_64 (_ bv0 64))))\n (let (($x269239 (= (_ bv1 64) ?x263664)))\n (let ((?x105426 (ite $x269239 (_ bv12 8) (_ bv190 8))))\n (let (($x141298 (= (_ bv9 64) ?x263664)))\n (let ((?x267940 (ite $x141298 (_ bv0 8) ?x105426)))\n (let (($x163907 (= (_ bv2 64) ?x263664)))\n (let ((?x238430 (ite $x163907 (_ bv12 8) ?x267940)))\n (let ((?x35 ((_ extract 7 0) sym_argv_0_80)))\n (let (($x305623 (= (_ bv8 64) ?x263664)))\n (let ((?x99551 (ite $x305623 ?x35 ?x238430)))\n (let (($x246680 (= (_ bv3 64) ?x263664)))\n (let ((?x87758 (ite $x246680 (_ bv12 8) ?x99551)))\n (let ((?x19 ((_ extract 15 8) sym_argv_0_80)))\n (let (($x243599 (= (_ bv7 64) ?x263664)))\n (let ((?x42530 (ite $x243599 ?x19 ?x87758)))\n (let (($x89242 (= (_ bv4 64) ?x263664)))\n (let ((?x175472 (ite $x89242 (_ bv12 8) ?x42530)))\n (let (($x275850 (= (_ bv6 64) ?x263664)))\n (let ((?x273307 (ite $x275850 (_ bv64 8) ?x175472)))\n (let (($x213195 (= (_ bv5 64) ?x263664)))\n (let ((?x215753 (ite $x213195 (_ bv62 8) ?x273307)))\n (let (($x238253 (= (_ bv0 8) ?x215753)))\n (not $x238253)))))))))))))))))))))))))))))\n(assert\n (let ((?x12086 ((_ extract 69 64) sym_argv_0_80)))\n (let (($x24776 (bvule ?x12086 (_ bv57 6))))\n (let ((?x15866 ((_ extract 71 70) sym_argv_0_80)))\n (let (($x25805 (= (_ bv0 2) ?x15866)))\n (let (($x59530 (and $x25805 $x24776)))\n (let ((?x263664 (ite $x59530 num_bytes_6216_64 (_ bv0 64))))\n (let (($x269239 (= (_ bv1 64) ?x263664)))\n (let ((?x105426 (ite $x269239 (_ bv12 8) (_ bv190 8))))\n (let ((?x35 ((_ extract 7 0) sym_argv_0_80)))\n (let (($x305623 (= (_ bv8 64) ?x263664)))\n (let ((?x183439 (ite $x305623 ?x35 ?x105426)))\n (let (($x163907 (= (_ bv2 64) ?x263664)))\n (let ((?x148861 (ite $x163907 (_ bv12 8) ?x183439)))\n (let ((?x19 ((_ extract 15 8) sym_argv_0_80)))\n (let (($x243599 (= (_ bv7 64) ?x263664)))\n (let ((?x272033 (ite $x243599 ?x19 ?x148861)))\n (let (($x246680 (= (_ bv3 64) ?x263664)))\n (let ((?x298686 (ite $x246680 (_ bv12 8) ?x272033)))\n (let (($x275850 (= (_ bv6 64) ?x263664)))\n (let ((?x158481 (ite $x275850 (_ bv64 8) ?x298686)))\n (let (($x89242 (= (_ bv4 64) ?x263664)))\n (let ((?x190026 (ite $x89242 (_ bv12 8) ?x158481)))\n (let (($x213195 (= (_ bv5 64) ?x263664)))\n (let ((?x123951 (ite $x213195 (_ bv62 8) ?x190026)))\n (let ((?x223175 (concat (_ bv0 24) ?x123951)))\n (let ((?x223061 (bvadd (_ bv4294967230 32) ?x223175)))\n (let ((?x47927 ((_ extract 31 6) ?x223061)))\n (let (($x211235 (= (_ bv0 26) ?x47927)))\n (let (($x297607 (not $x211235)))\n (let ((?x14260 ((_ extract 61 56) sym_argv_0_80)))\n (let ((?x264421 (ite $x269239 ?x14260 (_ bv62 6))))\n (let ((?x30203 ((_ extract 5 0) sym_argv_0_80)))\n (let ((?x151097 (ite $x305623 ?x30203 ?x264421)))\n (let ((?x27454 ((_ extract 53 48) sym_argv_0_80)))\n (let ((?x170289 (ite $x163907 ?x27454 ?x151097)))\n (let ((?x24760 ((_ extract 13 8) sym_argv_0_80)))\n (let ((?x200177 (ite $x243599 ?x24760 ?x170289)))\n (let ((?x24601 ((_ extract 45 40) sym_argv_0_80)))\n (let ((?x282455 (ite $x246680 ?x24601 ?x200177)))\n (let ((?x33344 ((_ extract 21 16) sym_argv_0_80)))\n (let ((?x121234 (ite $x275850 ?x33344 ?x282455)))\n (let ((?x32591 ((_ extract 37 32) sym_argv_0_80)))\n (let ((?x124754 (ite $x89242 ?x32591 ?x121234)))\n (let ((?x30483 ((_ extract 29 24) sym_argv_0_80)))\n (let ((?x220411 (ite $x213195 ?x30483 ?x124754)))\n (let ((?x280334 (bvadd (_ bv62 6) ?x220411)))\n (let (($x220741 (bvule ?x280334 (_ bv53 6))))\n (let (($x324867 (not $x220741)))\n (or $x324867 $x297607))))))))))))))))))))))))))))))))))))))))))))))))))\n(assert\n (let ((?x24 ((_ extract 71 64) sym_argv_0_80)))\n (= (_ bv53 8) ?x24)))\n(assert\n (let ((?x18 ((_ extract 63 56) sym_argv_0_80)))\n (= (_ bv12 8) ?x18)))\n(assert\n (let ((?x31 ((_ extract 55 48) sym_argv_0_80)))\n (= (_ bv12 8) ?x31)))\n(assert\n (let ((?x29 ((_ extract 47 40) sym_argv_0_80)))\n (= (_ bv12 8) ?x29)))\n(assert\n (let ((?x27 ((_ extract 39 32) sym_argv_0_80)))\n (= (_ bv12 8) ?x27)))\n(assert\n (let ((?x23 ((_ extract 31 24) sym_argv_0_80)))\n (= (_ bv62 8) ?x23)))\n(assert\n (let ((?x33344 ((_ extract 21 16) sym_argv_0_80)))\n (let (($x169246 (bvule ?x33344 (_ bv39 6))))\n (let ((?x34721 ((_ extract 23 22) sym_argv_0_80)))\n (let (($x21467 (= (_ bv0 2) ?x34721)))\n (let (($x16956 (and $x21467 $x169246)))\n (let ((?x157706 (ite $x16956 (_ bv2 8) (_ bv1 8))))\n (let (($x163389 (= (_ bv0 8) ?x157706)))\n (not $x163389)))))))))\n(assert\n (let ((?x21 ((_ extract 23 16) sym_argv_0_80)))\n (= (_ bv64 8) ?x21)))\n(assert\n (let ((?x259140 (bvadd (_ bv576460752303357895 64) strlen_8089_64)))\n (let ((?x35 ((_ extract 7 0) sym_argv_0_80)))\n (let (($x358 (= (_ bv0 8) ?x35)))\n (let ((?x544 (ite $x358 (_ bv576460752303357903 64) (_ bv576460752303357904 64))))\n (let ((?x19 ((_ extract 15 8) sym_argv_0_80)))\n (let (($x304426 (= (_ bv0 8) ?x19)))\n (let ((?x93282 (ite $x304426 (_ bv576460752303357902 64) ?x544)))\n (= ?x93282 ?x259140)))))))))\n(assert\n (let (($x311432 (= (_ bv13 64) strlen_8089_64)))\n (not $x311432)))\n(assert\n (let (($x228870 (bvule (_ bv14 64) strlen_8089_64)))\n (not $x228870)))\n(assert\n (let (($x295605 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_14919_64)))\n (not $x295605)))\n(assert\n (let (($x287313 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_14919_64)))\n (not $x287313)))\n(assert\n (let ((?x276423 (bvadd (_ bv28 64) unconstrained_ret_mbrtowc_14919_64)))\n (bvule strlen_8089_64 ?x276423)))\n(assert\n (let ((?x216511 ((_ extract 63 1) unconstrained_ret_mbrtowc_14919_64)))\n (let (($x214494 (= (_ bv0 63) ?x216511)))\n (not $x214494))))\n(assert\n (let ((?x276423 (bvadd (_ bv28 64) unconstrained_ret_mbrtowc_14919_64)))\n (let ((?x350594 ((_ extract 63 5) ?x276423)))\n (= (_ bv0 59) ?x350594))))\n(assert\n (let (($x289992 (= (_ bv0 64) unconstrained_ret_mbrtowc_15678_64)))\n (not $x289992)))\n(assert\n (let (($x281983 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_15678_64)))\n (not $x281983)))\n(assert\n (let (($x281384 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_15678_64)))\n (not $x281384)))\n(assert\n (let ((?x361280 (bvadd (_ bv29 64) unconstrained_ret_mbrtowc_15517_64)))\n (let ((?x236597 (bvadd ?x361280 unconstrained_ret_mbrtowc_15678_64)))\n (let (($x211889 (bvule strlen_8089_64 ?x236597)))\n (not $x211889)))))\n(assert\n (let ((?x257725 ((_ extract 4 0) unconstrained_ret_mbrtowc_14919_64)))\n (let ((?x241079 (bvadd (_ bv28 5) ?x257725)))\n (bvule ?x241079 (_ bv29 5)))))\n(assert\n (let ((?x323881 (bvadd (bvadd (_ bv576460752303357924 64) unconstrained_ret_mbrtowc_15517_64) unconstrained_ret_mbrtowc_15678_64)))\n (bvule (_ bv576460752303357895 64) ?x323881)))\n(assert\n (let ((?x323881 (bvadd (bvadd (_ bv576460752303357924 64) unconstrained_ret_mbrtowc_15517_64) unconstrained_ret_mbrtowc_15678_64)))\n (let ((?x83498 ((_ extract 63 59) ?x323881)))\n (= (_ bv0 5) ?x83498))))\n(assert\n (let ((?x95329 ((_ extract 58 0) unconstrained_ret_mbrtowc_15678_64)))\n (let ((?x332048 (bvadd (bvadd (_ bv576460752303357924 59) ((_ extract 58 0) unconstrained_ret_mbrtowc_15517_64)) ?x95329)))\n (bvule ?x332048 (_ bv576460752303357903 59)))))\n(assert\n (let ((?x285483 (bvadd unconstrained_ret_mbrtowc_15517_64 unconstrained_ret_mbrtowc_15678_64)))\n (let ((?x84251 (bvadd ?x285483 (_ bv576460752303357924 64))))\n (let (($x333539 (and (distinct (_ bv576460752303357903 64) ?x84251) true)))\n (let (($x348564 (and (distinct (_ bv576460752303357902 64) ?x84251) true)))\n (let (($x360803 (and (distinct (_ bv576460752303357901 64) ?x84251) true)))\n (let (($x109409 (and (distinct (_ bv576460752303357895 64) ?x84251) true)))\n (and $x109409 $x360803 $x348564 $x333539))))))))\n(assert\n (let ((?x285483 (bvadd unconstrained_ret_mbrtowc_15517_64 unconstrained_ret_mbrtowc_15678_64)))\n (let ((?x84251 (bvadd ?x285483 (_ bv576460752303357924 64))))\n (and (distinct ?x84251 (_ bv576460752303357896 64)) true))))\n(assert\n (let ((?x285483 (bvadd unconstrained_ret_mbrtowc_15517_64 unconstrained_ret_mbrtowc_15678_64)))\n (let ((?x84251 (bvadd ?x285483 (_ bv576460752303357924 64))))\n (and (distinct ?x84251 (_ bv576460752303357897 64)) true))))\n(assert\n (let ((?x285483 (bvadd unconstrained_ret_mbrtowc_15517_64 unconstrained_ret_mbrtowc_15678_64)))\n (let ((?x84251 (bvadd ?x285483 (_ bv576460752303357924 64))))\n (and (distinct ?x84251 (_ bv576460752303357898 64)) true))))\n(assert\n (let ((?x285483 (bvadd unconstrained_ret_mbrtowc_15517_64 unconstrained_ret_mbrtowc_15678_64)))\n (let ((?x84251 (bvadd ?x285483 (_ bv576460752303357924 64))))\n (and (distinct ?x84251 (_ bv576460752303357899 64)) true))))\n(assert\n (let ((?x285483 (bvadd unconstrained_ret_mbrtowc_15517_64 unconstrained_ret_mbrtowc_15678_64)))\n (let ((?x84251 (bvadd ?x285483 (_ bv576460752303357924 64))))\n (and (distinct ?x84251 (_ bv576460752303357900 64)) true))))\n(check-sat)\n",
    "time": 1.5723273754119873,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=4, tm_hour=11, tm_min=33, tm_sec=39, tm_wday=4, tm_yday=339, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            7.975900173187256
        ]
    }
}