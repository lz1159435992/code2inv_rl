{
    "filename": "fmt",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun unconstrained_ret_mbrtowc_8448_64 () (_ BitVec 64))\n(declare-fun sym_argv_0_80 () (_ BitVec 80))\n(declare-fun num_bytes_6216_64 () (_ BitVec 64))\n(declare-fun strlen_8075_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_8112_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_8267_64 () (_ BitVec 64))\n(assert\n (let (($x303055 (= (_ bv0 64) unconstrained_ret_mbrtowc_8448_64)))\n (not $x303055)))\n(assert\n (let (($x93185 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_8448_64)))\n (not $x93185)))\n(assert\n (let (($x175710 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_8448_64)))\n (not $x175710)))\n(assert\n (let ((?x269 ((_ extract 15 15) sym_argv_0_80)))\n (= (_ bv0 1) ?x269)))\n(assert\n (let ((?x254 ((_ extract 7 7) sym_argv_0_80)))\n (= (_ bv0 1) ?x254)))\n(assert\n (let ((?x16 ((_ extract 79 72) sym_argv_0_80)))\n (= (_ bv45 8) ?x16)))\n(assert\n (let ((?x303 ((_ extract 14 8) sym_argv_0_80)))\n (bvule ?x303 (_ bv126 7))))\n(assert\n (let ((?x515 ((_ extract 6 0) sym_argv_0_80)))\n (bvule ?x515 (_ bv126 7))))\n(assert\n (let ((?x15866 ((_ extract 71 70) sym_argv_0_80)))\n (let (($x25805 (= (_ bv0 2) ?x15866)))\n (let (($x19587 (not $x25805)))\n (let ((?x12086 ((_ extract 69 64) sym_argv_0_80)))\n (let (($x24776 (bvule ?x12086 (_ bv57 6))))\n (let (($x28476 (not $x24776)))\n (let (($x19158 (or $x28476 $x19587)))\n (let (($x229339 (= (_ bv1 64) num_bytes_6216_64)))\n (let (($x274266 (not $x229339)))\n (let (($x264758 (or $x274266 $x19158)))\n (let (($x198057 (not $x264758)))\n (let (($x252354 (not $x19158)))\n (let (($x240976 (= (_ bv0 64) num_bytes_6216_64)))\n (let (($x277071 (not $x240976)))\n (let (($x99970 (or $x277071 $x252354)))\n (let (($x277411 (not $x99970)))\n (or $x277411 $x198057))))))))))))))))))\n(assert\n (let ((?x12086 ((_ extract 69 64) sym_argv_0_80)))\n (let (($x24776 (bvule ?x12086 (_ bv57 6))))\n (let ((?x15866 ((_ extract 71 70) sym_argv_0_80)))\n (let (($x25805 (= (_ bv0 2) ?x15866)))\n (let (($x59530 (and $x25805 $x24776)))\n (let ((?x263664 (ite $x59530 num_bytes_6216_64 (_ bv0 64))))\n (let (($x269239 (= (_ bv1 64) ?x263664)))\n (let ((?x105426 (ite $x269239 (_ bv12 8) (_ bv190 8))))\n (let (($x141298 (= (_ bv9 64) ?x263664)))\n (let ((?x267940 (ite $x141298 (_ bv0 8) ?x105426)))\n (let (($x163907 (= (_ bv2 64) ?x263664)))\n (let ((?x238430 (ite $x163907 (_ bv12 8) ?x267940)))\n (let ((?x35 ((_ extract 7 0) sym_argv_0_80)))\n (let (($x305623 (= (_ bv8 64) ?x263664)))\n (let ((?x99551 (ite $x305623 ?x35 ?x238430)))\n (let (($x246680 (= (_ bv3 64) ?x263664)))\n (let ((?x87758 (ite $x246680 (_ bv12 8) ?x99551)))\n (let ((?x19 ((_ extract 15 8) sym_argv_0_80)))\n (let (($x243599 (= (_ bv7 64) ?x263664)))\n (let ((?x42530 (ite $x243599 ?x19 ?x87758)))\n (let (($x89242 (= (_ bv4 64) ?x263664)))\n (let ((?x175472 (ite $x89242 (_ bv12 8) ?x42530)))\n (let (($x275850 (= (_ bv6 64) ?x263664)))\n (let ((?x273307 (ite $x275850 (_ bv64 8) ?x175472)))\n (let (($x213195 (= (_ bv5 64) ?x263664)))\n (let ((?x216473 (ite $x213195 (_ bv12 8) ?x273307)))\n (let (($x283533 (= (_ bv0 8) ?x216473)))\n (not $x283533)))))))))))))))))))))))))))))\n(assert\n (let ((?x12086 ((_ extract 69 64) sym_argv_0_80)))\n (let (($x24776 (bvule ?x12086 (_ bv57 6))))\n (let ((?x15866 ((_ extract 71 70) sym_argv_0_80)))\n (let (($x25805 (= (_ bv0 2) ?x15866)))\n (let (($x59530 (and $x25805 $x24776)))\n (let ((?x263664 (ite $x59530 num_bytes_6216_64 (_ bv0 64))))\n (let (($x269239 (= (_ bv1 64) ?x263664)))\n (let ((?x105426 (ite $x269239 (_ bv12 8) (_ bv190 8))))\n (let ((?x35 ((_ extract 7 0) sym_argv_0_80)))\n (let (($x305623 (= (_ bv8 64) ?x263664)))\n (let ((?x183439 (ite $x305623 ?x35 ?x105426)))\n (let (($x163907 (= (_ bv2 64) ?x263664)))\n (let ((?x148861 (ite $x163907 (_ bv12 8) ?x183439)))\n (let ((?x19 ((_ extract 15 8) sym_argv_0_80)))\n (let (($x243599 (= (_ bv7 64) ?x263664)))\n (let ((?x272033 (ite $x243599 ?x19 ?x148861)))\n (let (($x246680 (= (_ bv3 64) ?x263664)))\n (let ((?x298686 (ite $x246680 (_ bv12 8) ?x272033)))\n (let (($x275850 (= (_ bv6 64) ?x263664)))\n (let ((?x158481 (ite $x275850 (_ bv64 8) ?x298686)))\n (let (($x213195 (= (_ bv5 64) ?x263664)))\n (let (($x89242 (= (_ bv4 64) ?x263664)))\n (let (($x258950 (or $x89242 $x213195)))\n (let ((?x296602 (ite $x258950 (_ bv12 8) ?x158481)))\n (let ((?x157873 (concat (_ bv0 24) ?x296602)))\n (let ((?x178980 (bvadd (_ bv4294967230 32) ?x157873)))\n (let ((?x207460 ((_ extract 31 6) ?x178980)))\n (let (($x221116 (= (_ bv0 26) ?x207460)))\n (let (($x134129 (not $x221116)))\n (let ((?x14260 ((_ extract 61 56) sym_argv_0_80)))\n (let ((?x264421 (ite $x269239 ?x14260 (_ bv62 6))))\n (let ((?x30203 ((_ extract 5 0) sym_argv_0_80)))\n (let ((?x151097 (ite $x305623 ?x30203 ?x264421)))\n (let ((?x27454 ((_ extract 53 48) sym_argv_0_80)))\n (let ((?x170289 (ite $x163907 ?x27454 ?x151097)))\n (let ((?x24760 ((_ extract 13 8) sym_argv_0_80)))\n (let ((?x200177 (ite $x243599 ?x24760 ?x170289)))\n (let ((?x24601 ((_ extract 45 40) sym_argv_0_80)))\n (let ((?x282455 (ite $x246680 ?x24601 ?x200177)))\n (let ((?x33344 ((_ extract 21 16) sym_argv_0_80)))\n (let ((?x121234 (ite $x275850 ?x33344 ?x282455)))\n (let ((?x32591 ((_ extract 37 32) sym_argv_0_80)))\n (let ((?x124754 (ite $x89242 ?x32591 ?x121234)))\n (let ((?x30483 ((_ extract 29 24) sym_argv_0_80)))\n (let ((?x220411 (ite $x213195 ?x30483 ?x124754)))\n (let ((?x280334 (bvadd (_ bv62 6) ?x220411)))\n (let (($x220741 (bvule ?x280334 (_ bv53 6))))\n (let (($x324867 (not $x220741)))\n (or $x324867 $x134129))))))))))))))))))))))))))))))))))))))))))))))))))\n(assert\n (let ((?x24 ((_ extract 71 64) sym_argv_0_80)))\n (= (_ bv53 8) ?x24)))\n(assert\n (let ((?x18 ((_ extract 63 56) sym_argv_0_80)))\n (= (_ bv12 8) ?x18)))\n(assert\n (let ((?x31 ((_ extract 55 48) sym_argv_0_80)))\n (= (_ bv12 8) ?x31)))\n(assert\n (let ((?x29 ((_ extract 47 40) sym_argv_0_80)))\n (= (_ bv12 8) ?x29)))\n(assert\n (let ((?x27 ((_ extract 39 32) sym_argv_0_80)))\n (= (_ bv12 8) ?x27)))\n(assert\n (let ((?x23 ((_ extract 31 24) sym_argv_0_80)))\n (= (_ bv12 8) ?x23)))\n(assert\n (let ((?x33344 ((_ extract 21 16) sym_argv_0_80)))\n (let (($x169246 (bvule ?x33344 (_ bv39 6))))\n (let ((?x34721 ((_ extract 23 22) sym_argv_0_80)))\n (let (($x21467 (= (_ bv0 2) ?x34721)))\n (let (($x16956 (and $x21467 $x169246)))\n (let ((?x157706 (ite $x16956 (_ bv2 8) (_ bv1 8))))\n (let (($x163389 (= (_ bv0 8) ?x157706)))\n (not $x163389)))))))))\n(assert\n (let ((?x21 ((_ extract 23 16) sym_argv_0_80)))\n (= (_ bv64 8) ?x21)))\n(assert\n (let ((?x301202 (bvadd (_ bv576460752303357895 64) strlen_8075_64)))\n (let ((?x35 ((_ extract 7 0) sym_argv_0_80)))\n (let (($x358 (= (_ bv0 8) ?x35)))\n (let ((?x544 (ite $x358 (_ bv576460752303357903 64) (_ bv576460752303357904 64))))\n (let ((?x19 ((_ extract 15 8) sym_argv_0_80)))\n (let (($x304426 (= (_ bv0 8) ?x19)))\n (let ((?x93282 (ite $x304426 (_ bv576460752303357902 64) ?x544)))\n (= ?x93282 ?x301202)))))))))\n(assert\n (let (($x280452 (= (_ bv0 64) unconstrained_ret_mbrtowc_8112_64)))\n (not $x280452)))\n(assert\n (let (($x161591 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_8112_64)))\n (not $x161591)))\n(assert\n (let (($x231321 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_8112_64)))\n (not $x231321)))\n(assert\n (let (($x260126 (= (_ bv0 64) unconstrained_ret_mbrtowc_8267_64)))\n (not $x260126)))\n(assert\n (let (($x8879 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_8267_64)))\n (not $x8879)))\n(assert\n (let (($x261144 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_8267_64)))\n (not $x261144)))\n(assert\n (let ((?x257915 (bvadd (_ bv6 64) unconstrained_ret_mbrtowc_8112_64)))\n (let ((?x326352 (bvadd ?x257915 unconstrained_ret_mbrtowc_8267_64)))\n (let ((?x154782 (bvadd ?x326352 unconstrained_ret_mbrtowc_8448_64)))\n (let (($x322986 (bvule strlen_8075_64 ?x154782)))\n (not $x322986))))))\n(assert\n (let ((?x183742 (bvadd (_ bv576460752303357901 64) unconstrained_ret_mbrtowc_8112_64)))\n (let ((?x214309 (bvadd ?x183742 unconstrained_ret_mbrtowc_8267_64)))\n (let ((?x211321 (bvadd ?x214309 unconstrained_ret_mbrtowc_8448_64)))\n (bvule (_ bv576460752303357895 64) ?x211321)))))\n(assert\n (let ((?x183742 (bvadd (_ bv576460752303357901 64) unconstrained_ret_mbrtowc_8112_64)))\n (let ((?x214309 (bvadd ?x183742 unconstrained_ret_mbrtowc_8267_64)))\n (let ((?x211321 (bvadd ?x214309 unconstrained_ret_mbrtowc_8448_64)))\n (let ((?x289725 ((_ extract 63 59) ?x211321)))\n (= (_ bv0 5) ?x289725))))))\n(assert\n (let ((?x298012 ((_ extract 58 0) unconstrained_ret_mbrtowc_8448_64)))\n (let ((?x247588 ((_ extract 58 0) unconstrained_ret_mbrtowc_8267_64)))\n (let ((?x263817 (bvadd (bvadd (_ bv576460752303357901 59) ((_ extract 58 0) unconstrained_ret_mbrtowc_8112_64)) ?x247588)))\n (let ((?x248694 (bvadd ?x263817 ?x298012)))\n (bvule ?x248694 (_ bv576460752303357903 59)))))))\n(assert\n (let ((?x192388 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_8448_64)))\n (let ((?x58788 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_8267_64)))\n (let ((?x312636 (bvadd (_ bv1 64) ?x58788)))\n (let ((?x115209 (bvadd ?x312636 ?x192388)))\n (let (($x207284 (= unconstrained_ret_mbrtowc_8112_64 ?x115209)))\n (let ((?x168725 (bvadd (_ bv2 64) ?x58788)))\n (let ((?x242345 (bvadd ?x168725 ?x192388)))\n (let (($x202462 (= unconstrained_ret_mbrtowc_8112_64 ?x242345)))\n (let (($x113516 (or $x202462 $x207284)))\n (let ((?x192489 (bvadd (_ bv18446744073709551615 64) ?x58788)))\n (let ((?x222348 (bvadd ?x192489 ?x192388)))\n (let (($x166105 (= unconstrained_ret_mbrtowc_8112_64 ?x222348)))\n (let (($x217048 (or $x166105 $x113516)))\n (let ((?x133118 (bvadd ?x58788 ?x192388)))\n (let (($x276378 (= unconstrained_ret_mbrtowc_8112_64 ?x133118)))\n (let (($x232470 (or $x276378 $x217048)))\n (let ((?x191334 (bvadd (_ bv18446744073709551614 64) ?x58788)))\n (let ((?x242321 (bvadd ?x191334 ?x192388)))\n (let (($x218739 (= unconstrained_ret_mbrtowc_8112_64 ?x242321)))\n (let (($x90840 (or $x218739 $x232470)))\n (let ((?x321939 (bvadd (_ bv18446744073709551611 64) ?x58788)))\n (let ((?x289876 (bvadd ?x321939 ?x192388)))\n (let (($x196189 (= unconstrained_ret_mbrtowc_8112_64 ?x289876)))\n (let (($x209011 (or $x196189 $x90840)))\n (let ((?x189270 (bvadd (_ bv18446744073709551610 64) ?x58788)))\n (let ((?x248211 (bvadd ?x189270 ?x192388)))\n (let (($x252013 (= unconstrained_ret_mbrtowc_8112_64 ?x248211)))\n (let (($x169116 (or $x252013 $x209011)))\n (let ((?x213299 (bvadd (_ bv18446744073709551613 64) ?x58788)))\n (let ((?x185820 (bvadd ?x213299 ?x192388)))\n (let (($x232107 (= unconstrained_ret_mbrtowc_8112_64 ?x185820)))\n (let (($x306177 (or $x232107 $x169116)))\n (let ((?x55172 (bvadd (_ bv18446744073709551612 64) ?x58788)))\n (let ((?x292328 (bvadd ?x55172 ?x192388)))\n (let (($x199950 (= unconstrained_ret_mbrtowc_8112_64 ?x292328)))\n (or $x199950 $x306177)))))))))))))))))))))))))))))))))))))\n(assert\n (let ((?x192388 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_8448_64)))\n (let ((?x58788 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_8267_64)))\n (let ((?x189270 (bvadd (_ bv18446744073709551610 64) ?x58788)))\n (let ((?x248211 (bvadd ?x189270 ?x192388)))\n (let (($x252013 (= unconstrained_ret_mbrtowc_8112_64 ?x248211)))\n (let ((?x137109 (ite $x252013 (_ bv53 8) (_ bv190 8))))\n (let ((?x35 ((_ extract 7 0) sym_argv_0_80)))\n (let ((?x168725 (bvadd (_ bv2 64) ?x58788)))\n (let ((?x242345 (bvadd ?x168725 ?x192388)))\n (let (($x202462 (= unconstrained_ret_mbrtowc_8112_64 ?x242345)))\n (let ((?x150474 (ite $x202462 ?x35 ?x137109)))\n (let ((?x321939 (bvadd (_ bv18446744073709551611 64) ?x58788)))\n (let ((?x289876 (bvadd ?x321939 ?x192388)))\n (let (($x196189 (= unconstrained_ret_mbrtowc_8112_64 ?x289876)))\n (let ((?x267663 (ite $x196189 (_ bv12 8) ?x150474)))\n (let ((?x19 ((_ extract 15 8) sym_argv_0_80)))\n (let ((?x312636 (bvadd (_ bv1 64) ?x58788)))\n (let ((?x115209 (bvadd ?x312636 ?x192388)))\n (let (($x207284 (= unconstrained_ret_mbrtowc_8112_64 ?x115209)))\n (let ((?x174877 (ite $x207284 ?x19 ?x267663)))\n (let ((?x55172 (bvadd (_ bv18446744073709551612 64) ?x58788)))\n (let ((?x292328 (bvadd ?x55172 ?x192388)))\n (let (($x199950 (= unconstrained_ret_mbrtowc_8112_64 ?x292328)))\n (let ((?x197523 (ite $x199950 (_ bv12 8) ?x174877)))\n (let ((?x133118 (bvadd ?x58788 ?x192388)))\n (let (($x276378 (= unconstrained_ret_mbrtowc_8112_64 ?x133118)))\n (let ((?x210767 (ite $x276378 (_ bv64 8) ?x197523)))\n (let ((?x213299 (bvadd (_ bv18446744073709551613 64) ?x58788)))\n (let ((?x185820 (bvadd ?x213299 ?x192388)))\n (let (($x232107 (= unconstrained_ret_mbrtowc_8112_64 ?x185820)))\n (let ((?x191334 (bvadd (_ bv18446744073709551614 64) ?x58788)))\n (let ((?x242321 (bvadd ?x191334 ?x192388)))\n (let (($x218739 (= unconstrained_ret_mbrtowc_8112_64 ?x242321)))\n (let ((?x192489 (bvadd (_ bv18446744073709551615 64) ?x58788)))\n (let ((?x222348 (bvadd ?x192489 ?x192388)))\n (let (($x166105 (= unconstrained_ret_mbrtowc_8112_64 ?x222348)))\n (let (($x272261 (or $x166105 $x218739 $x232107)))\n (let ((?x29318 (ite $x272261 (_ bv12 8) ?x210767)))\n (let (($x63920 (= (_ bv0 8) ?x29318)))\n (not $x63920)))))))))))))))))))))))))))))))))))))))))\n(assert\n (let ((?x276844 (bvadd (_ bv7 64) unconstrained_ret_mbrtowc_8112_64)))\n (let ((?x260414 (bvadd ?x276844 unconstrained_ret_mbrtowc_8267_64)))\n (let ((?x231687 (bvadd ?x260414 unconstrained_ret_mbrtowc_8448_64)))\n (let (($x129359 (bvule strlen_8075_64 ?x231687)))\n (not $x129359))))))\n(assert\n (let ((?x239318 (bvadd (bvadd (_ bv576460752303357902 64) unconstrained_ret_mbrtowc_8112_64) unconstrained_ret_mbrtowc_8267_64)))\n (let ((?x109781 (bvadd ?x239318 unconstrained_ret_mbrtowc_8448_64)))\n (bvule (_ bv576460752303357896 64) ?x109781))))\n(assert\n (let ((?x239318 (bvadd (bvadd (_ bv576460752303357902 64) unconstrained_ret_mbrtowc_8112_64) unconstrained_ret_mbrtowc_8267_64)))\n (let ((?x109781 (bvadd ?x239318 unconstrained_ret_mbrtowc_8448_64)))\n (let ((?x174617 ((_ extract 63 59) ?x109781)))\n (= (_ bv0 5) ?x174617)))))\n(assert\n (let ((?x298012 ((_ extract 58 0) unconstrained_ret_mbrtowc_8448_64)))\n (let ((?x247588 ((_ extract 58 0) unconstrained_ret_mbrtowc_8267_64)))\n (let ((?x237917 (bvadd (bvadd (_ bv576460752303357902 59) ((_ extract 58 0) unconstrained_ret_mbrtowc_8112_64)) ?x247588)))\n (let ((?x233844 (bvadd ?x237917 ?x298012)))\n (bvule ?x233844 (_ bv576460752303357903 59)))))))\n(assert\n (let ((?x218870 (bvadd unconstrained_ret_mbrtowc_8112_64 unconstrained_ret_mbrtowc_8267_64)))\n (let ((?x280400 (bvadd ?x218870 unconstrained_ret_mbrtowc_8448_64)))\n (let ((?x246991 (bvadd ?x280400 (_ bv576460752303357902 64))))\n (let (($x183064 (and (distinct (_ bv576460752303357902 64) ?x246991) true)))\n (let (($x107427 (and (distinct (_ bv576460752303357901 64) ?x246991) true)))\n (let (($x172399 (and (distinct (_ bv576460752303357900 64) ?x246991) true)))\n (let (($x70820 (and (distinct (_ bv576460752303357899 64) ?x246991) true)))\n (let (($x245056 (and (distinct (_ bv576460752303357898 64) ?x246991) true)))\n (let (($x308856 (and (distinct (_ bv576460752303357897 64) ?x246991) true)))\n (let (($x254589 (and (distinct (_ bv576460752303357896 64) ?x246991) true)))\n (let (($x312538 (and (distinct (_ bv576460752303357903 64) ?x246991) true)))\n (and $x312538 $x254589 $x308856 $x245056 $x70820 $x172399 $x107427 $x183064)))))))))))))\n(check-sat)\n",
    "time": 50.46831154823303,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=4, tm_hour=6, tm_min=52, tm_sec=54, tm_wday=4, tm_yday=339, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            0.2830085754394531
        ]
    }
}