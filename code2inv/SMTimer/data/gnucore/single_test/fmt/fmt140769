{
    "filename": "fmt",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun unconstrained_ret_mbrtowc_2925_64 () (_ BitVec 64))\n(declare-fun sym_argv_0_80 () (_ BitVec 80))\n(declare-fun num_bytes_996_64 () (_ BitVec 64))\n(declare-fun strlen_2606_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_2783_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_2641_64 () (_ BitVec 64))\n(assert\n (let (($x173911 (= (_ bv0 64) unconstrained_ret_mbrtowc_2925_64)))\n (not $x173911)))\n(assert\n (let (($x132816 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_2925_64)))\n (not $x132816)))\n(assert\n (let (($x97776 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_2925_64)))\n (not $x97776)))\n(assert\n (let ((?x166 ((_ extract 31 31) sym_argv_0_80)))\n (= (_ bv0 1) ?x166)))\n(assert\n (let ((?x512 ((_ extract 23 23) sym_argv_0_80)))\n (= (_ bv0 1) ?x512)))\n(assert\n (let ((?x269 ((_ extract 15 15) sym_argv_0_80)))\n (= (_ bv0 1) ?x269)))\n(assert\n (let ((?x254 ((_ extract 7 7) sym_argv_0_80)))\n (= (_ bv0 1) ?x254)))\n(assert\n (let ((?x16 ((_ extract 79 72) sym_argv_0_80)))\n (= (_ bv45 8) ?x16)))\n(assert\n (let ((?x415 ((_ extract 30 24) sym_argv_0_80)))\n (bvule ?x415 (_ bv126 7))))\n(assert\n (let ((?x513 ((_ extract 22 16) sym_argv_0_80)))\n (bvule ?x513 (_ bv126 7))))\n(assert\n (let ((?x303 ((_ extract 14 8) sym_argv_0_80)))\n (bvule ?x303 (_ bv126 7))))\n(assert\n (let ((?x515 ((_ extract 6 0) sym_argv_0_80)))\n (bvule ?x515 (_ bv126 7))))\n(assert\n (let ((?x12086 ((_ extract 69 64) sym_argv_0_80)))\n (let (($x24776 (bvule ?x12086 (_ bv57 6))))\n (let (($x28476 (not $x24776)))\n (let ((?x15866 ((_ extract 71 70) sym_argv_0_80)))\n (let (($x25805 (= (_ bv0 2) ?x15866)))\n (let (($x19587 (not $x25805)))\n (let (($x80177 (or $x19587 $x28476)))\n (let (($x17516 (= (_ bv1 64) num_bytes_996_64)))\n (let (($x18302 (not $x17516)))\n (let (($x67548 (or $x18302 $x80177)))\n (let (($x53370 (not $x67548)))\n (let (($x60343 (not $x80177)))\n (let (($x2731 (= (_ bv0 64) num_bytes_996_64)))\n (let (($x20140 (not $x2731)))\n (let (($x20720 (or $x20140 $x60343)))\n (let (($x76967 (not $x20720)))\n (or $x76967 $x53370))))))))))))))))))\n(assert\n (let ((?x12086 ((_ extract 69 64) sym_argv_0_80)))\n (let (($x24776 (bvule ?x12086 (_ bv57 6))))\n (let ((?x15866 ((_ extract 71 70) sym_argv_0_80)))\n (let (($x25805 (= (_ bv0 2) ?x15866)))\n (let (($x59530 (and $x25805 $x24776)))\n (let ((?x76149 (ite $x59530 num_bytes_996_64 (_ bv0 64))))\n (let (($x10329 (= (_ bv1 64) ?x76149)))\n (let ((?x142909 (ite $x10329 (_ bv12 8) (_ bv190 8))))\n (let (($x54016 (= (_ bv9 64) ?x76149)))\n (let ((?x92112 (ite $x54016 (_ bv0 8) ?x142909)))\n (let (($x88010 (= (_ bv2 64) ?x76149)))\n (let ((?x115263 (ite $x88010 (_ bv12 8) ?x92112)))\n (let ((?x35 ((_ extract 7 0) sym_argv_0_80)))\n (let (($x2837 (= (_ bv8 64) ?x76149)))\n (let ((?x34028 (ite $x2837 ?x35 ?x115263)))\n (let (($x69186 (= (_ bv3 64) ?x76149)))\n (let ((?x6354 (ite $x69186 (_ bv12 8) ?x34028)))\n (let ((?x19 ((_ extract 15 8) sym_argv_0_80)))\n (let (($x103344 (= (_ bv7 64) ?x76149)))\n (let ((?x128903 (ite $x103344 ?x19 ?x6354)))\n (let (($x49901 (= (_ bv4 64) ?x76149)))\n (let ((?x163929 (ite $x49901 (_ bv64 8) ?x128903)))\n (let ((?x21 ((_ extract 23 16) sym_argv_0_80)))\n (let (($x45875 (= (_ bv6 64) ?x76149)))\n (let ((?x166283 (ite $x45875 ?x21 ?x163929)))\n (let ((?x23 ((_ extract 31 24) sym_argv_0_80)))\n (let (($x17644 (= (_ bv5 64) ?x76149)))\n (let ((?x43380 (ite $x17644 ?x23 ?x166283)))\n (let (($x157024 (= (_ bv0 8) ?x43380)))\n (not $x157024)))))))))))))))))))))))))))))))\n(assert\n (let ((?x12086 ((_ extract 69 64) sym_argv_0_80)))\n (let (($x24776 (bvule ?x12086 (_ bv57 6))))\n (let ((?x15866 ((_ extract 71 70) sym_argv_0_80)))\n (let (($x25805 (= (_ bv0 2) ?x15866)))\n (let (($x59530 (and $x25805 $x24776)))\n (let ((?x76149 (ite $x59530 num_bytes_996_64 (_ bv0 64))))\n (let (($x10329 (= (_ bv1 64) ?x76149)))\n (let ((?x142909 (ite $x10329 (_ bv12 8) (_ bv190 8))))\n (let ((?x35 ((_ extract 7 0) sym_argv_0_80)))\n (let (($x2837 (= (_ bv8 64) ?x76149)))\n (let ((?x144285 (ite $x2837 ?x35 ?x142909)))\n (let (($x88010 (= (_ bv2 64) ?x76149)))\n (let ((?x105054 (ite $x88010 (_ bv12 8) ?x144285)))\n (let ((?x19 ((_ extract 15 8) sym_argv_0_80)))\n (let (($x103344 (= (_ bv7 64) ?x76149)))\n (let ((?x103027 (ite $x103344 ?x19 ?x105054)))\n (let (($x69186 (= (_ bv3 64) ?x76149)))\n (let ((?x96304 (ite $x69186 (_ bv12 8) ?x103027)))\n (let ((?x21 ((_ extract 23 16) sym_argv_0_80)))\n (let (($x45875 (= (_ bv6 64) ?x76149)))\n (let ((?x128728 (ite $x45875 ?x21 ?x96304)))\n (let (($x49901 (= (_ bv4 64) ?x76149)))\n (let ((?x68488 (ite $x49901 (_ bv64 8) ?x128728)))\n (let ((?x23 ((_ extract 31 24) sym_argv_0_80)))\n (let (($x17644 (= (_ bv5 64) ?x76149)))\n (let ((?x14159 (ite $x17644 ?x23 ?x68488)))\n (let ((?x142722 (concat (_ bv0 24) ?x14159)))\n (let ((?x167137 (bvadd (_ bv4294967230 32) ?x142722)))\n (let ((?x54017 ((_ extract 31 6) ?x167137)))\n (let (($x36481 (= (_ bv0 26) ?x54017)))\n (let (($x153038 (not $x36481)))\n (let ((?x14260 ((_ extract 61 56) sym_argv_0_80)))\n (let ((?x35335 (ite $x10329 ?x14260 (_ bv62 6))))\n (let ((?x30203 ((_ extract 5 0) sym_argv_0_80)))\n (let ((?x67899 (ite $x2837 ?x30203 ?x35335)))\n (let ((?x27454 ((_ extract 53 48) sym_argv_0_80)))\n (let ((?x26910 (ite $x88010 ?x27454 ?x67899)))\n (let ((?x24760 ((_ extract 13 8) sym_argv_0_80)))\n (let ((?x19334 (ite $x103344 ?x24760 ?x26910)))\n (let ((?x24601 ((_ extract 45 40) sym_argv_0_80)))\n (let ((?x51125 (ite $x69186 ?x24601 ?x19334)))\n (let ((?x33344 ((_ extract 21 16) sym_argv_0_80)))\n (let ((?x43756 (ite $x45875 ?x33344 ?x51125)))\n (let ((?x32591 ((_ extract 37 32) sym_argv_0_80)))\n (let ((?x40398 (ite $x49901 ?x32591 ?x43756)))\n (let ((?x30483 ((_ extract 29 24) sym_argv_0_80)))\n (let ((?x111665 (ite $x17644 ?x30483 ?x40398)))\n (let ((?x110386 (bvadd (_ bv62 6) ?x111665)))\n (let (($x120755 (bvule ?x110386 (_ bv53 6))))\n (let (($x16386 (not $x120755)))\n (or $x16386 $x153038))))))))))))))))))))))))))))))))))))))))))))))))))))\n(assert\n (let ((?x24 ((_ extract 71 64) sym_argv_0_80)))\n (= (_ bv53 8) ?x24)))\n(assert\n (let ((?x18 ((_ extract 63 56) sym_argv_0_80)))\n (= (_ bv12 8) ?x18)))\n(assert\n (let ((?x31 ((_ extract 55 48) sym_argv_0_80)))\n (= (_ bv12 8) ?x31)))\n(assert\n (let ((?x29 ((_ extract 47 40) sym_argv_0_80)))\n (= (_ bv12 8) ?x29)))\n(assert\n (let ((?x32591 ((_ extract 37 32) sym_argv_0_80)))\n (let (($x119050 (bvule ?x32591 (_ bv39 6))))\n (let ((?x33000 ((_ extract 39 38) sym_argv_0_80)))\n (let (($x10411 (= (_ bv0 2) ?x33000)))\n (let (($x123437 (and $x10411 $x119050)))\n (let ((?x162746 (ite $x123437 (_ bv2 8) (_ bv1 8))))\n (let (($x87418 (= (_ bv0 8) ?x162746)))\n (not $x87418)))))))))\n(assert\n (let ((?x27 ((_ extract 39 32) sym_argv_0_80)))\n (= (_ bv64 8) ?x27)))\n(assert\n (let ((?x128784 (bvadd (_ bv576460752303357895 64) strlen_2606_64)))\n (let ((?x35 ((_ extract 7 0) sym_argv_0_80)))\n (let (($x358 (= (_ bv0 8) ?x35)))\n (let ((?x544 (ite $x358 (_ bv576460752303357903 64) (_ bv576460752303357904 64))))\n (let ((?x19 ((_ extract 15 8) sym_argv_0_80)))\n (let (($x769 (= (_ bv0 8) ?x19)))\n (let ((?x110 (ite $x769 (_ bv576460752303357902 64) ?x544)))\n (let ((?x21 ((_ extract 23 16) sym_argv_0_80)))\n (let (($x877 (= (_ bv0 8) ?x21)))\n (let ((?x445 (ite $x877 (_ bv576460752303357901 64) ?x110)))\n (let ((?x23 ((_ extract 31 24) sym_argv_0_80)))\n (let (($x634 (= (_ bv0 8) ?x23)))\n (let ((?x1275 (ite $x634 (_ bv576460752303357900 64) ?x445)))\n (= ?x1275 ?x128784)))))))))))))))\n(assert\n (let (($x148337 (= (_ bv0 64) unconstrained_ret_mbrtowc_2783_64)))\n (not $x148337)))\n(assert\n (let (($x164141 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_2783_64)))\n (not $x164141)))\n(assert\n (let (($x97881 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_2783_64)))\n (not $x97881)))\n(assert\n (let (($x96172 (= (_ bv0 64) unconstrained_ret_mbrtowc_2641_64)))\n (not $x96172)))\n(assert\n (let (($x113605 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_2641_64)))\n (not $x113605)))\n(assert\n (let (($x158784 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_2641_64)))\n (not $x158784)))\n(assert\n (let ((?x52828 (bvadd (_ bv4 64) unconstrained_ret_mbrtowc_2641_64)))\n (let ((?x168681 (bvadd ?x52828 unconstrained_ret_mbrtowc_2783_64)))\n (let ((?x128616 (bvadd ?x168681 unconstrained_ret_mbrtowc_2925_64)))\n (let (($x96981 (bvule strlen_2606_64 ?x128616)))\n (not $x96981))))))\n(assert\n (let ((?x53490 (bvadd (_ bv576460752303357899 64) unconstrained_ret_mbrtowc_2641_64)))\n (let ((?x121653 (bvadd (bvadd ?x53490 unconstrained_ret_mbrtowc_2783_64) unconstrained_ret_mbrtowc_2925_64)))\n (bvule (_ bv576460752303357895 64) ?x121653))))\n(assert\n (let ((?x53490 (bvadd (_ bv576460752303357899 64) unconstrained_ret_mbrtowc_2641_64)))\n (let ((?x121653 (bvadd (bvadd ?x53490 unconstrained_ret_mbrtowc_2783_64) unconstrained_ret_mbrtowc_2925_64)))\n (let ((?x116376 ((_ extract 63 59) ?x121653)))\n (= (_ bv0 5) ?x116376)))))\n(assert\n (let ((?x176655 ((_ extract 58 0) unconstrained_ret_mbrtowc_2925_64)))\n (let ((?x118246 ((_ extract 58 0) unconstrained_ret_mbrtowc_2783_64)))\n (let ((?x45603 ((_ extract 58 0) unconstrained_ret_mbrtowc_2641_64)))\n (let ((?x165874 (bvadd (_ bv576460752303357899 59) ?x45603)))\n (let ((?x118167 (bvadd (bvadd ?x165874 ?x118246) ?x176655)))\n (bvule ?x118167 (_ bv576460752303357903 59))))))))\n(assert\n (let ((?x171191 (bvadd unconstrained_ret_mbrtowc_2641_64 unconstrained_ret_mbrtowc_2783_64)))\n (let ((?x79876 (bvadd ?x171191 unconstrained_ret_mbrtowc_2925_64)))\n (let ((?x85793 (bvadd ?x79876 (_ bv576460752303357899 64))))\n (let (($x91579 (and (distinct (_ bv576460752303357902 64) ?x85793) true)))\n (let (($x147777 (and (distinct (_ bv576460752303357895 64) ?x85793) true)))\n (let (($x163788 (and (distinct (_ bv576460752303357900 64) ?x85793) true)))\n (let (($x14456 (and (distinct (_ bv576460752303357899 64) ?x85793) true)))\n (let (($x99335 (and (distinct (_ bv576460752303357897 64) ?x85793) true)))\n (let (($x114020 (and (distinct (_ bv576460752303357903 64) ?x85793) true)))\n (and $x114020 $x99335 $x14456 $x163788 $x147777 $x91579)))))))))))\n(assert\n (let ((?x171191 (bvadd unconstrained_ret_mbrtowc_2641_64 unconstrained_ret_mbrtowc_2783_64)))\n (let ((?x79876 (bvadd ?x171191 unconstrained_ret_mbrtowc_2925_64)))\n (let ((?x85793 (bvadd ?x79876 (_ bv576460752303357899 64))))\n (and (distinct ?x85793 (_ bv576460752303357901 64)) true)))))\n(assert\n (let ((?x171191 (bvadd unconstrained_ret_mbrtowc_2641_64 unconstrained_ret_mbrtowc_2783_64)))\n (let ((?x79876 (bvadd ?x171191 unconstrained_ret_mbrtowc_2925_64)))\n (let ((?x85793 (bvadd ?x79876 (_ bv576460752303357899 64))))\n (and (distinct ?x85793 (_ bv576460752303357896 64)) true)))))\n(assert\n (let ((?x171191 (bvadd unconstrained_ret_mbrtowc_2641_64 unconstrained_ret_mbrtowc_2783_64)))\n (let ((?x79876 (bvadd ?x171191 unconstrained_ret_mbrtowc_2925_64)))\n (let ((?x85793 (bvadd ?x79876 (_ bv576460752303357899 64))))\n (and (distinct ?x85793 (_ bv576460752303357898 64)) true)))))\n(check-sat)\n",
    "time": 73.13321423530579,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=4, tm_hour=3, tm_min=47, tm_sec=8, tm_wday=4, tm_yday=339, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            15.19567346572876
        ]
    }
}