{
    "filename": "fmt",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun sym_argv_0_80 () (_ BitVec 80))\n(declare-fun num_bytes_996_64 () (_ BitVec 64))\n(declare-fun strlen_2606_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_7334_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_7491_64 () (_ BitVec 64))\n(assert\n (let ((?x254 ((_ extract 7 7) sym_argv_0_80)))\n (= (_ bv0 1) ?x254)))\n(assert\n (let ((?x16 ((_ extract 79 72) sym_argv_0_80)))\n (= (_ bv45 8) ?x16)))\n(assert\n (let ((?x515 ((_ extract 6 0) sym_argv_0_80)))\n (bvule ?x515 (_ bv126 7))))\n(assert\n (let ((?x12086 ((_ extract 69 64) sym_argv_0_80)))\n (let (($x24776 (bvule ?x12086 (_ bv57 6))))\n (let (($x28476 (not $x24776)))\n (let ((?x15866 ((_ extract 71 70) sym_argv_0_80)))\n (let (($x25805 (= (_ bv0 2) ?x15866)))\n (let (($x19587 (not $x25805)))\n (let (($x80177 (or $x19587 $x28476)))\n (let (($x17516 (= (_ bv1 64) num_bytes_996_64)))\n (let (($x18302 (not $x17516)))\n (let (($x67548 (or $x18302 $x80177)))\n (let (($x53370 (not $x67548)))\n (let (($x60343 (not $x80177)))\n (let (($x2731 (= (_ bv0 64) num_bytes_996_64)))\n (let (($x20140 (not $x2731)))\n (let (($x20720 (or $x20140 $x60343)))\n (let (($x76967 (not $x20720)))\n (or $x76967 $x53370))))))))))))))))))\n(assert\n (let ((?x12086 ((_ extract 69 64) sym_argv_0_80)))\n (let (($x24776 (bvule ?x12086 (_ bv57 6))))\n (let ((?x15866 ((_ extract 71 70) sym_argv_0_80)))\n (let (($x25805 (= (_ bv0 2) ?x15866)))\n (let (($x59530 (and $x25805 $x24776)))\n (let ((?x76149 (ite $x59530 num_bytes_996_64 (_ bv0 64))))\n (let (($x10329 (= (_ bv1 64) ?x76149)))\n (let ((?x142909 (ite $x10329 (_ bv12 8) (_ bv190 8))))\n (let (($x54016 (= (_ bv9 64) ?x76149)))\n (let ((?x92112 (ite $x54016 (_ bv0 8) ?x142909)))\n (let (($x88010 (= (_ bv2 64) ?x76149)))\n (let ((?x115263 (ite $x88010 (_ bv12 8) ?x92112)))\n (let ((?x35 ((_ extract 7 0) sym_argv_0_80)))\n (let (($x2837 (= (_ bv8 64) ?x76149)))\n (let ((?x34028 (ite $x2837 ?x35 ?x115263)))\n (let (($x69186 (= (_ bv3 64) ?x76149)))\n (let ((?x6354 (ite $x69186 (_ bv12 8) ?x34028)))\n (let (($x49901 (= (_ bv4 64) ?x76149)))\n (let (($x103344 (= (_ bv7 64) ?x76149)))\n (let (($x45875 (= (_ bv6 64) ?x76149)))\n (let (($x130427 (or $x45875 $x103344 $x49901)))\n (let ((?x172145 (ite $x130427 (_ bv64 8) ?x6354)))\n (let (($x17644 (= (_ bv5 64) ?x76149)))\n (let ((?x83437 (ite $x17644 (_ bv13 8) ?x172145)))\n (let (($x156894 (= (_ bv0 8) ?x83437)))\n (not $x156894)))))))))))))))))))))))))))\n(assert\n (let ((?x12086 ((_ extract 69 64) sym_argv_0_80)))\n (let (($x24776 (bvule ?x12086 (_ bv57 6))))\n (let ((?x15866 ((_ extract 71 70) sym_argv_0_80)))\n (let (($x25805 (= (_ bv0 2) ?x15866)))\n (let (($x59530 (and $x25805 $x24776)))\n (let ((?x76149 (ite $x59530 num_bytes_996_64 (_ bv0 64))))\n (let (($x10329 (= (_ bv1 64) ?x76149)))\n (let ((?x142909 (ite $x10329 (_ bv12 8) (_ bv190 8))))\n (let ((?x35 ((_ extract 7 0) sym_argv_0_80)))\n (let (($x2837 (= (_ bv8 64) ?x76149)))\n (let ((?x144285 (ite $x2837 ?x35 ?x142909)))\n (let (($x88010 (= (_ bv2 64) ?x76149)))\n (let ((?x105054 (ite $x88010 (_ bv12 8) ?x144285)))\n (let (($x103344 (= (_ bv7 64) ?x76149)))\n (let ((?x180256 (ite $x103344 (_ bv64 8) ?x105054)))\n (let (($x69186 (= (_ bv3 64) ?x76149)))\n (let ((?x98728 (ite $x69186 (_ bv12 8) ?x180256)))\n (let (($x45875 (= (_ bv6 64) ?x76149)))\n (let (($x49901 (= (_ bv4 64) ?x76149)))\n (let (($x138889 (or $x49901 $x45875)))\n (let ((?x174739 (ite $x138889 (_ bv64 8) ?x98728)))\n (let (($x17644 (= (_ bv5 64) ?x76149)))\n (let ((?x149543 (ite $x17644 (_ bv13 8) ?x174739)))\n (let ((?x48664 (concat (_ bv0 24) ?x149543)))\n (let ((?x85042 (bvadd (_ bv4294967230 32) ?x48664)))\n (let ((?x157895 ((_ extract 31 6) ?x85042)))\n (let (($x177724 (= (_ bv0 26) ?x157895)))\n (let (($x175421 (not $x177724)))\n (let ((?x14260 ((_ extract 61 56) sym_argv_0_80)))\n (let ((?x35335 (ite $x10329 ?x14260 (_ bv62 6))))\n (let ((?x30203 ((_ extract 5 0) sym_argv_0_80)))\n (let ((?x67899 (ite $x2837 ?x30203 ?x35335)))\n (let ((?x27454 ((_ extract 53 48) sym_argv_0_80)))\n (let ((?x26910 (ite $x88010 ?x27454 ?x67899)))\n (let ((?x24760 ((_ extract 13 8) sym_argv_0_80)))\n (let ((?x19334 (ite $x103344 ?x24760 ?x26910)))\n (let ((?x24601 ((_ extract 45 40) sym_argv_0_80)))\n (let ((?x51125 (ite $x69186 ?x24601 ?x19334)))\n (let ((?x33344 ((_ extract 21 16) sym_argv_0_80)))\n (let ((?x43756 (ite $x45875 ?x33344 ?x51125)))\n (let ((?x32591 ((_ extract 37 32) sym_argv_0_80)))\n (let ((?x40398 (ite $x49901 ?x32591 ?x43756)))\n (let ((?x30483 ((_ extract 29 24) sym_argv_0_80)))\n (let ((?x111665 (ite $x17644 ?x30483 ?x40398)))\n (let ((?x110386 (bvadd (_ bv62 6) ?x111665)))\n (let (($x120755 (bvule ?x110386 (_ bv53 6))))\n (let (($x16386 (not $x120755)))\n (or $x16386 $x175421)))))))))))))))))))))))))))))))))))))))))))))))))\n(assert\n (let ((?x24 ((_ extract 71 64) sym_argv_0_80)))\n (= (_ bv53 8) ?x24)))\n(assert\n (let ((?x18 ((_ extract 63 56) sym_argv_0_80)))\n (= (_ bv12 8) ?x18)))\n(assert\n (let ((?x31 ((_ extract 55 48) sym_argv_0_80)))\n (= (_ bv12 8) ?x31)))\n(assert\n (let ((?x29 ((_ extract 47 40) sym_argv_0_80)))\n (= (_ bv12 8) ?x29)))\n(assert\n (let ((?x32591 ((_ extract 37 32) sym_argv_0_80)))\n (let (($x119050 (bvule ?x32591 (_ bv39 6))))\n (let ((?x33000 ((_ extract 39 38) sym_argv_0_80)))\n (let (($x10411 (= (_ bv0 2) ?x33000)))\n (let (($x123437 (and $x10411 $x119050)))\n (let ((?x162746 (ite $x123437 (_ bv2 8) (_ bv1 8))))\n (let (($x87418 (= (_ bv0 8) ?x162746)))\n (not $x87418)))))))))\n(assert\n (let ((?x27 ((_ extract 39 32) sym_argv_0_80)))\n (= (_ bv64 8) ?x27)))\n(assert\n (let ((?x128784 (bvadd (_ bv576460752303357895 64) strlen_2606_64)))\n (let ((?x35 ((_ extract 7 0) sym_argv_0_80)))\n (let (($x358 (= (_ bv0 8) ?x35)))\n (let ((?x544 (ite $x358 (_ bv576460752303357903 64) (_ bv576460752303357904 64))))\n (= ?x544 ?x128784))))))\n(assert\n (let ((?x23 ((_ extract 31 24) sym_argv_0_80)))\n (= (_ bv13 8) ?x23)))\n(assert\n (let ((?x33344 ((_ extract 21 16) sym_argv_0_80)))\n (let (($x169246 (bvule ?x33344 (_ bv39 6))))\n (let ((?x34721 ((_ extract 23 22) sym_argv_0_80)))\n (let (($x21467 (= (_ bv0 2) ?x34721)))\n (let (($x16956 (and $x21467 $x169246)))\n (let ((?x157706 (ite $x16956 (_ bv2 8) (_ bv1 8))))\n (let (($x163389 (= (_ bv0 8) ?x157706)))\n (not $x163389)))))))))\n(assert\n (let ((?x21 ((_ extract 23 16) sym_argv_0_80)))\n (= (_ bv64 8) ?x21)))\n(assert\n (bvule (_ bv8 64) strlen_2606_64))\n(assert\n (let ((?x24760 ((_ extract 13 8) sym_argv_0_80)))\n (let (($x136899 (bvule ?x24760 (_ bv39 6))))\n (let ((?x27436 ((_ extract 15 14) sym_argv_0_80)))\n (let (($x21479 (= (_ bv0 2) ?x27436)))\n (let (($x166341 (and $x21479 $x136899)))\n (let ((?x131047 (ite $x166341 (_ bv2 8) (_ bv1 8))))\n (let (($x178983 (= (_ bv0 8) ?x131047)))\n (not $x178983)))))))))\n(assert\n (let ((?x19 ((_ extract 15 8) sym_argv_0_80)))\n (= (_ bv64 8) ?x19)))\n(assert\n (let (($x6683 (= (_ bv10 64) strlen_2606_64)))\n (not $x6683)))\n(assert\n (let (($x72451 (= (_ bv11 64) strlen_2606_64)))\n (not $x72451)))\n(assert\n (let (($x79044 (= (_ bv12 64) strlen_2606_64)))\n (not $x79044)))\n(assert\n (let (($x177152 (= (_ bv13 64) strlen_2606_64)))\n (not $x177152)))\n(assert\n (let (($x170172 (= (_ bv14 64) strlen_2606_64)))\n (not $x170172)))\n(assert\n (let (($x162492 (= (_ bv15 64) strlen_2606_64)))\n (not $x162492)))\n(assert\n (let (($x257538 (= (_ bv16 64) strlen_2606_64)))\n (not $x257538)))\n(assert\n (let (($x224679 (bvule (_ bv21 64) strlen_2606_64)))\n (not $x224679)))\n(assert\n (let (($x315503 (= (_ bv0 64) unconstrained_ret_mbrtowc_7334_64)))\n (not $x315503)))\n(assert\n (let (($x203338 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_7334_64)))\n (not $x203338)))\n(assert\n (let (($x185403 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_7334_64)))\n (not $x185403)))\n(assert\n (let (($x275081 (= (_ bv0 64) unconstrained_ret_mbrtowc_7491_64)))\n (not $x275081)))\n(assert\n (let (($x203191 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_7491_64)))\n (not $x203191)))\n(assert\n (let (($x265080 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_7491_64)))\n (not $x265080)))\n(assert\n (let ((?x169475 (bvadd (_ bv20 64) unconstrained_ret_mbrtowc_7334_64)))\n (let ((?x95184 (bvadd ?x169475 unconstrained_ret_mbrtowc_7491_64)))\n (let (($x156852 (bvule strlen_2606_64 ?x95184)))\n (not $x156852)))))\n(assert\n (let ((?x220569 ((_ extract 4 0) strlen_2606_64)))\n (bvule ?x220569 (_ bv16 5))))\n(assert\n (let ((?x78641 (bvadd (bvadd (_ bv576460752303357915 64) unconstrained_ret_mbrtowc_7334_64) unconstrained_ret_mbrtowc_7491_64)))\n (bvule (_ bv576460752303357895 64) ?x78641)))\n(assert\n (let ((?x78641 (bvadd (bvadd (_ bv576460752303357915 64) unconstrained_ret_mbrtowc_7334_64) unconstrained_ret_mbrtowc_7491_64)))\n (let ((?x264661 ((_ extract 63 59) ?x78641)))\n (= (_ bv0 5) ?x264661))))\n(assert\n (let ((?x42932 ((_ extract 58 0) unconstrained_ret_mbrtowc_7491_64)))\n (let ((?x302791 (bvadd (bvadd (_ bv576460752303357915 59) ((_ extract 58 0) unconstrained_ret_mbrtowc_7334_64)) ?x42932)))\n (bvule ?x302791 (_ bv576460752303357903 59)))))\n(assert\n (let ((?x154741 (bvadd unconstrained_ret_mbrtowc_7334_64 unconstrained_ret_mbrtowc_7491_64)))\n (let ((?x321205 (bvadd ?x154741 (_ bv576460752303357915 64))))\n (let (($x135036 (and (distinct (_ bv576460752303357902 64) ?x321205) true)))\n (let (($x125144 (and (distinct (_ bv576460752303357901 64) ?x321205) true)))\n (let (($x241456 (and (distinct (_ bv576460752303357895 64) ?x321205) true)))\n (let (($x231537 (and (distinct (_ bv576460752303357900 64) ?x321205) true)))\n (let (($x236926 (and (distinct (_ bv576460752303357899 64) ?x321205) true)))\n (let (($x70806 (and (distinct (_ bv576460752303357903 64) ?x321205) true)))\n (and $x70806 $x236926 $x231537 $x241456 $x125144 $x135036))))))))))\n(assert\n (let ((?x154741 (bvadd unconstrained_ret_mbrtowc_7334_64 unconstrained_ret_mbrtowc_7491_64)))\n (let ((?x321205 (bvadd ?x154741 (_ bv576460752303357915 64))))\n (and (distinct ?x321205 (_ bv576460752303357896 64)) true))))\n(assert\n (let ((?x154741 (bvadd unconstrained_ret_mbrtowc_7334_64 unconstrained_ret_mbrtowc_7491_64)))\n (let ((?x321205 (bvadd ?x154741 (_ bv576460752303357915 64))))\n (and (distinct ?x321205 (_ bv576460752303357898 64)) true))))\n(assert\n (let ((?x154741 (bvadd unconstrained_ret_mbrtowc_7334_64 unconstrained_ret_mbrtowc_7491_64)))\n (let ((?x321205 (bvadd ?x154741 (_ bv576460752303357915 64))))\n (and (distinct ?x321205 (_ bv576460752303357897 64)) true))))\n(check-sat)\n",
    "time": 1.2131855487823486,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=4, tm_hour=6, tm_min=18, tm_sec=57, tm_wday=4, tm_yday=339, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            1.5340118408203125
        ]
    }
}