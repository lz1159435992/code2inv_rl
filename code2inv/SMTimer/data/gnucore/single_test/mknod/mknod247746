{
    "filename": "mknod",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun unconstrained_ret_mbrtowc_3179_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_3040_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_3287_64 () (_ BitVec 64))\n(declare-fun sym_argv_0_80 () (_ BitVec 80))\n(declare-fun strlen_3012_64 () (_ BitVec 64))\n(assert\n (let (($x30188 (= (_ bv0 64) unconstrained_ret_mbrtowc_3179_64)))\n (not $x30188)))\n(assert\n (let (($x80343 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_3179_64)))\n (not $x80343)))\n(assert\n (let (($x54377 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_3179_64)))\n (not $x54377)))\n(assert\n (let (($x152158 (= (_ bv0 64) unconstrained_ret_mbrtowc_3040_64)))\n (not $x152158)))\n(assert\n (let (($x24317 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_3040_64)))\n (not $x24317)))\n(assert\n (let (($x43243 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_3040_64)))\n (not $x43243)))\n(assert\n (let (($x111441 (= (_ bv0 64) unconstrained_ret_mbrtowc_3287_64)))\n (not $x111441)))\n(assert\n (let (($x53653 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_3287_64)))\n (not $x53653)))\n(assert\n (let (($x5197 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_3287_64)))\n (not $x5197)))\n(assert\n (let ((?x608 ((_ extract 47 47) sym_argv_0_80)))\n (= (_ bv0 1) ?x608)))\n(assert\n (let ((?x435 ((_ extract 39 39) sym_argv_0_80)))\n (= (_ bv0 1) ?x435)))\n(assert\n (let ((?x543 ((_ extract 31 31) sym_argv_0_80)))\n (= (_ bv0 1) ?x543)))\n(assert\n (let ((?x384 ((_ extract 23 23) sym_argv_0_80)))\n (= (_ bv0 1) ?x384)))\n(assert\n (let ((?x523 ((_ extract 15 15) sym_argv_0_80)))\n (= (_ bv0 1) ?x523)))\n(assert\n (let ((?x460 ((_ extract 7 7) sym_argv_0_80)))\n (= (_ bv0 1) ?x460)))\n(assert\n (let ((?x625 ((_ extract 46 40) sym_argv_0_80)))\n (bvule ?x625 (_ bv126 7))))\n(assert\n (let ((?x633 ((_ extract 38 32) sym_argv_0_80)))\n (bvule ?x633 (_ bv126 7))))\n(assert\n (let ((?x338 ((_ extract 30 24) sym_argv_0_80)))\n (bvule ?x338 (_ bv126 7))))\n(assert\n (let ((?x170 ((_ extract 22 16) sym_argv_0_80)))\n (bvule ?x170 (_ bv126 7))))\n(assert\n (let ((?x469 ((_ extract 14 8) sym_argv_0_80)))\n (bvule ?x469 (_ bv126 7))))\n(assert\n (let ((?x318 ((_ extract 6 0) sym_argv_0_80)))\n (bvule ?x318 (_ bv126 7))))\n(assert\n (let ((?x7584 ((_ extract 77 72) sym_argv_0_80)))\n (let (($x2681 (bvule ?x7584 (_ bv39 6))))\n (let ((?x10031 ((_ extract 79 78) sym_argv_0_80)))\n (let (($x17400 (= (_ bv0 2) ?x10031)))\n (let (($x15041 (and $x17400 $x2681)))\n (let ((?x17732 (ite $x15041 (_ bv2 8) (_ bv1 8))))\n (let (($x7713 (= (_ bv0 8) ?x17732)))\n (not $x7713)))))))))\n(assert\n (let ((?x16 ((_ extract 79 72) sym_argv_0_80)))\n (= (_ bv92 8) ?x16)))\n(assert\n (let ((?x24 ((_ extract 71 64) sym_argv_0_80)))\n (= (_ bv39 8) ?x24)))\n(assert\n (let ((?x18 ((_ extract 63 56) sym_argv_0_80)))\n (= (_ bv39 8) ?x18)))\n(assert\n (let ((?x38490 ((_ extract 53 48) sym_argv_0_80)))\n (let (($x425 (bvule ?x38490 (_ bv39 6))))\n (let ((?x25576 ((_ extract 55 54) sym_argv_0_80)))\n (let (($x40563 (= (_ bv0 2) ?x25576)))\n (let (($x35342 (and $x40563 $x425)))\n (let ((?x37840 (ite $x35342 (_ bv2 8) (_ bv1 8))))\n (let (($x60801 (= (_ bv0 8) ?x37840)))\n (not $x60801)))))))))\n(assert\n (let ((?x31 ((_ extract 55 48) sym_argv_0_80)))\n (= (_ bv64 8) ?x31)))\n(assert\n (let ((?x152879 (bvadd (_ bv576460752303357896 64) strlen_3012_64)))\n (let ((?x35 ((_ extract 7 0) sym_argv_0_80)))\n (let (($x8853 (= (_ bv0 8) ?x35)))\n (let ((?x27304 (ite $x8853 (_ bv576460752303357905 64) (_ bv576460752303357906 64))))\n (let ((?x19 ((_ extract 15 8) sym_argv_0_80)))\n (let (($x19002 (= (_ bv0 8) ?x19)))\n (let ((?x16556 (ite $x19002 (_ bv576460752303357904 64) ?x27304)))\n (let ((?x21 ((_ extract 23 16) sym_argv_0_80)))\n (let (($x19422 (= (_ bv0 8) ?x21)))\n (let ((?x27906 (ite $x19422 (_ bv576460752303357903 64) ?x16556)))\n (let ((?x23 ((_ extract 31 24) sym_argv_0_80)))\n (let (($x22509 (= (_ bv0 8) ?x23)))\n (let ((?x17176 (ite $x22509 (_ bv576460752303357902 64) ?x27906)))\n (let ((?x27 ((_ extract 39 32) sym_argv_0_80)))\n (let (($x28433 (= (_ bv0 8) ?x27)))\n (let ((?x26332 (ite $x28433 (_ bv576460752303357901 64) ?x17176)))\n (let ((?x29 ((_ extract 47 40) sym_argv_0_80)))\n (let (($x1876 (= (_ bv0 8) ?x29)))\n (let ((?x7628 (ite $x1876 (_ bv576460752303357900 64) ?x26332)))\n (= ?x7628 ?x152879)))))))))))))))))))))\n(assert\n (let ((?x96758 (bvadd (_ bv3 64) unconstrained_ret_mbrtowc_3040_64)))\n (let ((?x123139 (bvadd ?x96758 unconstrained_ret_mbrtowc_3179_64)))\n (let ((?x148781 (bvadd ?x123139 unconstrained_ret_mbrtowc_3287_64)))\n (let (($x98537 (bvule strlen_3012_64 ?x148781)))\n (not $x98537))))))\n(assert\n (let ((?x126256 (bvadd (_ bv576460752303357899 64) unconstrained_ret_mbrtowc_3040_64)))\n (let ((?x63750 (bvadd ?x126256 unconstrained_ret_mbrtowc_3179_64)))\n (let ((?x89041 (bvadd ?x63750 unconstrained_ret_mbrtowc_3287_64)))\n (bvule (_ bv576460752303357896 64) ?x89041)))))\n(assert\n (let ((?x126256 (bvadd (_ bv576460752303357899 64) unconstrained_ret_mbrtowc_3040_64)))\n (let ((?x63750 (bvadd ?x126256 unconstrained_ret_mbrtowc_3179_64)))\n (let ((?x89041 (bvadd ?x63750 unconstrained_ret_mbrtowc_3287_64)))\n (let ((?x119450 ((_ extract 63 59) ?x89041)))\n (= (_ bv0 5) ?x119450))))))\n(assert\n (let ((?x90133 ((_ extract 58 0) unconstrained_ret_mbrtowc_3287_64)))\n (let ((?x43970 ((_ extract 58 0) unconstrained_ret_mbrtowc_3179_64)))\n (let ((?x51212 ((_ extract 58 0) unconstrained_ret_mbrtowc_3040_64)))\n (let ((?x87060 (bvadd (_ bv576460752303357899 59) ?x51212)))\n (let ((?x119089 (bvadd ?x87060 ?x43970)))\n (let ((?x155286 (bvadd ?x119089 ?x90133)))\n (bvule ?x155286 (_ bv576460752303357905 59)))))))))\n(assert\n (let ((?x77392 (bvadd unconstrained_ret_mbrtowc_3040_64 unconstrained_ret_mbrtowc_3179_64)))\n (let ((?x50804 (bvadd ?x77392 unconstrained_ret_mbrtowc_3287_64)))\n (let ((?x19852 (bvadd ?x50804 (_ bv576460752303357899 64))))\n (let (($x67532 (and (distinct (_ bv576460752303357904 64) ?x19852) true)))\n (let (($x53187 (and (distinct (_ bv576460752303357905 64) ?x19852) true)))\n (let (($x98219 (and (distinct (_ bv576460752303357896 64) ?x19852) true)))\n (let (($x48923 (and (distinct (_ bv576460752303357903 64) ?x19852) true)))\n (and $x48923 $x98219 $x53187 $x67532)))))))))\n(assert\n (let ((?x77392 (bvadd unconstrained_ret_mbrtowc_3040_64 unconstrained_ret_mbrtowc_3179_64)))\n (let ((?x50804 (bvadd ?x77392 unconstrained_ret_mbrtowc_3287_64)))\n (let ((?x19852 (bvadd ?x50804 (_ bv576460752303357899 64))))\n (and (distinct ?x19852 (_ bv576460752303357899 64)) true)))))\n(assert\n (let ((?x77392 (bvadd unconstrained_ret_mbrtowc_3040_64 unconstrained_ret_mbrtowc_3179_64)))\n (let ((?x50804 (bvadd ?x77392 unconstrained_ret_mbrtowc_3287_64)))\n (let ((?x19852 (bvadd ?x50804 (_ bv576460752303357899 64))))\n (and (distinct ?x19852 (_ bv576460752303357900 64)) true)))))\n(assert\n (let ((?x77392 (bvadd unconstrained_ret_mbrtowc_3040_64 unconstrained_ret_mbrtowc_3179_64)))\n (let ((?x50804 (bvadd ?x77392 unconstrained_ret_mbrtowc_3287_64)))\n (let ((?x19852 (bvadd ?x50804 (_ bv576460752303357899 64))))\n (and (distinct ?x19852 (_ bv576460752303357902 64)) true)))))\n(assert\n (let ((?x77392 (bvadd unconstrained_ret_mbrtowc_3040_64 unconstrained_ret_mbrtowc_3179_64)))\n (let ((?x50804 (bvadd ?x77392 unconstrained_ret_mbrtowc_3287_64)))\n (let ((?x19852 (bvadd ?x50804 (_ bv576460752303357899 64))))\n (and (distinct ?x19852 (_ bv576460752303357901 64)) true)))))\n(assert\n (let ((?x77392 (bvadd unconstrained_ret_mbrtowc_3040_64 unconstrained_ret_mbrtowc_3179_64)))\n (let ((?x50804 (bvadd ?x77392 unconstrained_ret_mbrtowc_3287_64)))\n (let ((?x19852 (bvadd ?x50804 (_ bv576460752303357899 64))))\n (and (distinct ?x19852 (_ bv576460752303357897 64)) true)))))\n(assert\n (let ((?x77392 (bvadd unconstrained_ret_mbrtowc_3040_64 unconstrained_ret_mbrtowc_3179_64)))\n (let ((?x50804 (bvadd ?x77392 unconstrained_ret_mbrtowc_3287_64)))\n (let ((?x19852 (bvadd ?x50804 (_ bv576460752303357899 64))))\n (and (distinct ?x19852 (_ bv576460752303357898 64)) true)))))\n(check-sat)\n",
    "time": 100.00035285949707,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=3, tm_hour=6, tm_min=39, tm_sec=19, tm_wday=3, tm_yday=338, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            17.531899213790894
        ]
    }
}