{
    "filename": "mknod",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun unconstrained_ret_mbrtowc_2720_64 () (_ BitVec 64))\n(declare-fun sym_argv_0_80 () (_ BitVec 80))\n(declare-fun strlen_2557_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_2583_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_2865_64 () (_ BitVec 64))\n(assert\n (let (($x82259 (= (_ bv0 64) unconstrained_ret_mbrtowc_2720_64)))\n (not $x82259)))\n(assert\n (let (($x5559 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_2720_64)))\n (not $x5559)))\n(assert\n (let (($x7775 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_2720_64)))\n (not $x7775)))\n(assert\n (let ((?x646 ((_ extract 55 55) sym_argv_0_80)))\n (= (_ bv0 1) ?x646)))\n(assert\n (let ((?x608 ((_ extract 47 47) sym_argv_0_80)))\n (= (_ bv0 1) ?x608)))\n(assert\n (let ((?x435 ((_ extract 39 39) sym_argv_0_80)))\n (= (_ bv0 1) ?x435)))\n(assert\n (let ((?x543 ((_ extract 31 31) sym_argv_0_80)))\n (= (_ bv0 1) ?x543)))\n(assert\n (let ((?x384 ((_ extract 23 23) sym_argv_0_80)))\n (= (_ bv0 1) ?x384)))\n(assert\n (let ((?x523 ((_ extract 15 15) sym_argv_0_80)))\n (= (_ bv0 1) ?x523)))\n(assert\n (let ((?x460 ((_ extract 7 7) sym_argv_0_80)))\n (= (_ bv0 1) ?x460)))\n(assert\n (let ((?x427 ((_ extract 54 48) sym_argv_0_80)))\n (bvule ?x427 (_ bv126 7))))\n(assert\n (let ((?x625 ((_ extract 46 40) sym_argv_0_80)))\n (bvule ?x625 (_ bv126 7))))\n(assert\n (let ((?x633 ((_ extract 38 32) sym_argv_0_80)))\n (bvule ?x633 (_ bv126 7))))\n(assert\n (let ((?x338 ((_ extract 30 24) sym_argv_0_80)))\n (bvule ?x338 (_ bv126 7))))\n(assert\n (let ((?x170 ((_ extract 22 16) sym_argv_0_80)))\n (bvule ?x170 (_ bv126 7))))\n(assert\n (let ((?x469 ((_ extract 14 8) sym_argv_0_80)))\n (bvule ?x469 (_ bv126 7))))\n(assert\n (let ((?x318 ((_ extract 6 0) sym_argv_0_80)))\n (bvule ?x318 (_ bv126 7))))\n(assert\n (let ((?x16 ((_ extract 79 72) sym_argv_0_80)))\n (= (_ bv13 8) ?x16)))\n(assert\n (let ((?x15046 ((_ extract 69 64) sym_argv_0_80)))\n (let (($x25707 (bvule ?x15046 (_ bv39 6))))\n (let ((?x19008 ((_ extract 71 70) sym_argv_0_80)))\n (let (($x15119 (= (_ bv0 2) ?x19008)))\n (let (($x16334 (and $x15119 $x25707)))\n (let ((?x29300 (ite $x16334 (_ bv2 8) (_ bv1 8))))\n (let (($x13245 (= (_ bv0 8) ?x29300)))\n (not $x13245)))))))))\n(assert\n (let ((?x24 ((_ extract 71 64) sym_argv_0_80)))\n (= (_ bv92 8) ?x24)))\n(assert\n (let ((?x31572 ((_ extract 61 56) sym_argv_0_80)))\n (let (($x31705 (bvule ?x31572 (_ bv39 6))))\n (let ((?x28097 ((_ extract 63 62) sym_argv_0_80)))\n (let (($x27881 (= (_ bv0 2) ?x28097)))\n (let (($x16092 (and $x27881 $x31705)))\n (let ((?x3607 (ite $x16092 (_ bv2 8) (_ bv1 8))))\n (let (($x91661 (= (_ bv0 8) ?x3607)))\n (not $x91661)))))))))\n(assert\n (let ((?x18 ((_ extract 63 56) sym_argv_0_80)))\n (= (_ bv64 8) ?x18)))\n(assert\n (let ((?x130270 (bvadd (_ bv576460752303357896 64) strlen_2557_64)))\n (let ((?x35 ((_ extract 7 0) sym_argv_0_80)))\n (let (($x8853 (= (_ bv0 8) ?x35)))\n (let ((?x27304 (ite $x8853 (_ bv576460752303357905 64) (_ bv576460752303357906 64))))\n (let ((?x19 ((_ extract 15 8) sym_argv_0_80)))\n (let (($x19002 (= (_ bv0 8) ?x19)))\n (let ((?x16556 (ite $x19002 (_ bv576460752303357904 64) ?x27304)))\n (let ((?x21 ((_ extract 23 16) sym_argv_0_80)))\n (let (($x19422 (= (_ bv0 8) ?x21)))\n (let ((?x27906 (ite $x19422 (_ bv576460752303357903 64) ?x16556)))\n (let ((?x23 ((_ extract 31 24) sym_argv_0_80)))\n (let (($x22509 (= (_ bv0 8) ?x23)))\n (let ((?x17176 (ite $x22509 (_ bv576460752303357902 64) ?x27906)))\n (let ((?x27 ((_ extract 39 32) sym_argv_0_80)))\n (let (($x28433 (= (_ bv0 8) ?x27)))\n (let ((?x26332 (ite $x28433 (_ bv576460752303357901 64) ?x17176)))\n (let ((?x29 ((_ extract 47 40) sym_argv_0_80)))\n (let (($x1876 (= (_ bv0 8) ?x29)))\n (let ((?x7628 (ite $x1876 (_ bv576460752303357900 64) ?x26332)))\n (let ((?x31 ((_ extract 55 48) sym_argv_0_80)))\n (let (($x30711 (= (_ bv0 8) ?x31)))\n (let ((?x28781 (ite $x30711 (_ bv576460752303357899 64) ?x7628)))\n (= ?x28781 ?x130270))))))))))))))))))))))))\n(assert\n (let (($x45857 (= (_ bv0 64) unconstrained_ret_mbrtowc_2583_64)))\n (not $x45857)))\n(assert\n (let (($x95346 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_2583_64)))\n (not $x95346)))\n(assert\n (let (($x6053 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_2583_64)))\n (not $x6053)))\n(assert\n (let (($x72864 (= (_ bv0 64) unconstrained_ret_mbrtowc_2865_64)))\n (not $x72864)))\n(assert\n (let (($x188 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_2865_64)))\n (not $x188)))\n(assert\n (let (($x10675 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_2865_64)))\n (not $x10675)))\n(assert\n (let ((?x14610 (bvadd (_ bv2 64) unconstrained_ret_mbrtowc_2583_64)))\n (let ((?x141051 (bvadd (bvadd ?x14610 unconstrained_ret_mbrtowc_2720_64) unconstrained_ret_mbrtowc_2865_64)))\n (let (($x11287 (bvule strlen_2557_64 ?x141051)))\n (not $x11287)))))\n(assert\n (let ((?x132762 (bvadd (bvadd (_ bv576460752303357898 64) unconstrained_ret_mbrtowc_2583_64) unconstrained_ret_mbrtowc_2720_64)))\n (let ((?x39437 (bvadd ?x132762 unconstrained_ret_mbrtowc_2865_64)))\n (bvule (_ bv576460752303357896 64) ?x39437))))\n(assert\n (let ((?x132762 (bvadd (bvadd (_ bv576460752303357898 64) unconstrained_ret_mbrtowc_2583_64) unconstrained_ret_mbrtowc_2720_64)))\n (let ((?x39437 (bvadd ?x132762 unconstrained_ret_mbrtowc_2865_64)))\n (let ((?x48275 ((_ extract 63 59) ?x39437)))\n (= (_ bv0 5) ?x48275)))))\n(assert\n (let ((?x154848 ((_ extract 58 0) unconstrained_ret_mbrtowc_2865_64)))\n (let ((?x45924 ((_ extract 58 0) unconstrained_ret_mbrtowc_2720_64)))\n (let ((?x78160 (bvadd (bvadd (bvadd (_ bv576460752303357898 59) ((_ extract 58 0) unconstrained_ret_mbrtowc_2583_64)) ?x45924) ?x154848)))\n (bvule ?x78160 (_ bv576460752303357905 59))))))\n(assert\n (let ((?x21256 (bvadd unconstrained_ret_mbrtowc_2583_64 unconstrained_ret_mbrtowc_2720_64)))\n (let ((?x60774 (bvadd ?x21256 unconstrained_ret_mbrtowc_2865_64)))\n (let ((?x41914 (bvadd ?x60774 (_ bv576460752303357898 64))))\n (let (($x74108 (and (distinct (_ bv576460752303357905 64) ?x41914) true)))\n (let (($x92465 (and (distinct (_ bv576460752303357904 64) ?x41914) true)))\n (let (($x39585 (and (distinct (_ bv576460752303357898 64) ?x41914) true)))\n (let (($x117911 (and (distinct (_ bv576460752303357897 64) ?x41914) true)))\n (let (($x43604 (and (distinct (_ bv576460752303357896 64) ?x41914) true)))\n (and $x43604 $x117911 $x39585 $x92465 $x74108))))))))))\n(assert\n (let ((?x21256 (bvadd unconstrained_ret_mbrtowc_2583_64 unconstrained_ret_mbrtowc_2720_64)))\n (let ((?x60774 (bvadd ?x21256 unconstrained_ret_mbrtowc_2865_64)))\n (let ((?x41914 (bvadd ?x60774 (_ bv576460752303357898 64))))\n (and (distinct ?x41914 (_ bv576460752303357899 64)) true)))))\n(assert\n (let ((?x21256 (bvadd unconstrained_ret_mbrtowc_2583_64 unconstrained_ret_mbrtowc_2720_64)))\n (let ((?x60774 (bvadd ?x21256 unconstrained_ret_mbrtowc_2865_64)))\n (let ((?x41914 (bvadd ?x60774 (_ bv576460752303357898 64))))\n (and (distinct ?x41914 (_ bv576460752303357900 64)) true)))))\n(assert\n (let ((?x21256 (bvadd unconstrained_ret_mbrtowc_2583_64 unconstrained_ret_mbrtowc_2720_64)))\n (let ((?x60774 (bvadd ?x21256 unconstrained_ret_mbrtowc_2865_64)))\n (let ((?x41914 (bvadd ?x60774 (_ bv576460752303357898 64))))\n (and (distinct ?x41914 (_ bv576460752303357902 64)) true)))))\n(assert\n (let ((?x21256 (bvadd unconstrained_ret_mbrtowc_2583_64 unconstrained_ret_mbrtowc_2720_64)))\n (let ((?x60774 (bvadd ?x21256 unconstrained_ret_mbrtowc_2865_64)))\n (let ((?x41914 (bvadd ?x60774 (_ bv576460752303357898 64))))\n (and (distinct ?x41914 (_ bv576460752303357903 64)) true)))))\n(assert\n (let ((?x21256 (bvadd unconstrained_ret_mbrtowc_2583_64 unconstrained_ret_mbrtowc_2720_64)))\n (let ((?x60774 (bvadd ?x21256 unconstrained_ret_mbrtowc_2865_64)))\n (let ((?x41914 (bvadd ?x60774 (_ bv576460752303357898 64))))\n (and (distinct ?x41914 (_ bv576460752303357901 64)) true)))))\n(check-sat)\n",
    "time": 100.00034594535828,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=3, tm_hour=1, tm_min=20, tm_sec=42, tm_wday=3, tm_yday=338, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            19.412914276123047
        ]
    }
}