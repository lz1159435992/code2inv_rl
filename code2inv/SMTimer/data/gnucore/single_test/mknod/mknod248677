{
    "filename": "mknod",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun sym_argv_0_80 () (_ BitVec 80))\n(declare-fun strlen_3000_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_3032_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_3278_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_3171_64 () (_ BitVec 64))\n(assert\n (let ((?x608 ((_ extract 47 47) sym_argv_0_80)))\n (= (_ bv0 1) ?x608)))\n(assert\n (let ((?x435 ((_ extract 39 39) sym_argv_0_80)))\n (= (_ bv0 1) ?x435)))\n(assert\n (let ((?x543 ((_ extract 31 31) sym_argv_0_80)))\n (= (_ bv0 1) ?x543)))\n(assert\n (let ((?x384 ((_ extract 23 23) sym_argv_0_80)))\n (= (_ bv0 1) ?x384)))\n(assert\n (let ((?x523 ((_ extract 15 15) sym_argv_0_80)))\n (= (_ bv0 1) ?x523)))\n(assert\n (let ((?x460 ((_ extract 7 7) sym_argv_0_80)))\n (= (_ bv0 1) ?x460)))\n(assert\n (let ((?x625 ((_ extract 46 40) sym_argv_0_80)))\n (bvule ?x625 (_ bv126 7))))\n(assert\n (let ((?x633 ((_ extract 38 32) sym_argv_0_80)))\n (bvule ?x633 (_ bv126 7))))\n(assert\n (let ((?x338 ((_ extract 30 24) sym_argv_0_80)))\n (bvule ?x338 (_ bv126 7))))\n(assert\n (let ((?x170 ((_ extract 22 16) sym_argv_0_80)))\n (bvule ?x170 (_ bv126 7))))\n(assert\n (let ((?x469 ((_ extract 14 8) sym_argv_0_80)))\n (bvule ?x469 (_ bv126 7))))\n(assert\n (let ((?x318 ((_ extract 6 0) sym_argv_0_80)))\n (bvule ?x318 (_ bv126 7))))\n(assert\n (let ((?x16 ((_ extract 79 72) sym_argv_0_80)))\n (= (_ bv35 8) ?x16)))\n(assert\n (let ((?x24 ((_ extract 71 64) sym_argv_0_80)))\n (= (_ bv39 8) ?x24)))\n(assert\n (let ((?x31572 ((_ extract 61 56) sym_argv_0_80)))\n (let (($x31705 (bvule ?x31572 (_ bv39 6))))\n (let ((?x28097 ((_ extract 63 62) sym_argv_0_80)))\n (let (($x27881 (= (_ bv0 2) ?x28097)))\n (let (($x16092 (and $x27881 $x31705)))\n (let ((?x3607 (ite $x16092 (_ bv2 8) (_ bv1 8))))\n (let (($x91661 (= (_ bv0 8) ?x3607)))\n (not $x91661)))))))))\n(assert\n (let ((?x18 ((_ extract 63 56) sym_argv_0_80)))\n (= (_ bv92 8) ?x18)))\n(assert\n (let ((?x38490 ((_ extract 53 48) sym_argv_0_80)))\n (let (($x425 (bvule ?x38490 (_ bv39 6))))\n (let ((?x25576 ((_ extract 55 54) sym_argv_0_80)))\n (let (($x40563 (= (_ bv0 2) ?x25576)))\n (let (($x35342 (and $x40563 $x425)))\n (let ((?x37840 (ite $x35342 (_ bv2 8) (_ bv1 8))))\n (let (($x60801 (= (_ bv0 8) ?x37840)))\n (not $x60801)))))))))\n(assert\n (let ((?x31 ((_ extract 55 48) sym_argv_0_80)))\n (= (_ bv64 8) ?x31)))\n(assert\n (let ((?x46419 (bvadd (_ bv576460752303357896 64) strlen_3000_64)))\n (let ((?x35 ((_ extract 7 0) sym_argv_0_80)))\n (let (($x8853 (= (_ bv0 8) ?x35)))\n (let ((?x27304 (ite $x8853 (_ bv576460752303357905 64) (_ bv576460752303357906 64))))\n (let ((?x19 ((_ extract 15 8) sym_argv_0_80)))\n (let (($x19002 (= (_ bv0 8) ?x19)))\n (let ((?x16556 (ite $x19002 (_ bv576460752303357904 64) ?x27304)))\n (let ((?x21 ((_ extract 23 16) sym_argv_0_80)))\n (let (($x19422 (= (_ bv0 8) ?x21)))\n (let ((?x27906 (ite $x19422 (_ bv576460752303357903 64) ?x16556)))\n (let ((?x23 ((_ extract 31 24) sym_argv_0_80)))\n (let (($x22509 (= (_ bv0 8) ?x23)))\n (let ((?x17176 (ite $x22509 (_ bv576460752303357902 64) ?x27906)))\n (let ((?x27 ((_ extract 39 32) sym_argv_0_80)))\n (let (($x28433 (= (_ bv0 8) ?x27)))\n (let ((?x26332 (ite $x28433 (_ bv576460752303357901 64) ?x17176)))\n (let ((?x29 ((_ extract 47 40) sym_argv_0_80)))\n (let (($x1876 (= (_ bv0 8) ?x29)))\n (let ((?x7628 (ite $x1876 (_ bv576460752303357900 64) ?x26332)))\n (= ?x7628 ?x46419)))))))))))))))))))))\n(assert\n (let (($x152581 (= (_ bv0 64) unconstrained_ret_mbrtowc_3032_64)))\n (not $x152581)))\n(assert\n (let (($x68212 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_3032_64)))\n (not $x68212)))\n(assert\n (let (($x35450 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_3032_64)))\n (not $x35450)))\n(assert\n (let (($x65786 (= (_ bv0 64) unconstrained_ret_mbrtowc_3278_64)))\n (not $x65786)))\n(assert\n (let (($x21450 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_3278_64)))\n (not $x21450)))\n(assert\n (let (($x25558 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_3278_64)))\n (not $x25558)))\n(assert\n (let (($x71182 (= (_ bv0 64) unconstrained_ret_mbrtowc_3171_64)))\n (not $x71182)))\n(assert\n (let (($x153833 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_3171_64)))\n (not $x153833)))\n(assert\n (let (($x55921 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_3171_64)))\n (not $x55921)))\n(assert\n (let ((?x143913 (bvadd (_ bv3 64) unconstrained_ret_mbrtowc_3032_64)))\n (let ((?x80101 (bvadd ?x143913 unconstrained_ret_mbrtowc_3171_64)))\n (let ((?x20736 (bvadd ?x80101 unconstrained_ret_mbrtowc_3278_64)))\n (let (($x5526 (bvule strlen_3000_64 ?x20736)))\n (not $x5526))))))\n(assert\n (let ((?x24528 (bvadd (_ bv576460752303357899 64) unconstrained_ret_mbrtowc_3032_64)))\n (let ((?x38223 (bvadd ?x24528 unconstrained_ret_mbrtowc_3171_64)))\n (let ((?x8488 (bvadd ?x38223 unconstrained_ret_mbrtowc_3278_64)))\n (bvule (_ bv576460752303357896 64) ?x8488)))))\n(assert\n (let ((?x24528 (bvadd (_ bv576460752303357899 64) unconstrained_ret_mbrtowc_3032_64)))\n (let ((?x38223 (bvadd ?x24528 unconstrained_ret_mbrtowc_3171_64)))\n (let ((?x8488 (bvadd ?x38223 unconstrained_ret_mbrtowc_3278_64)))\n (let ((?x4874 ((_ extract 63 59) ?x8488)))\n (= (_ bv0 5) ?x4874))))))\n(assert\n (let ((?x38610 ((_ extract 58 0) unconstrained_ret_mbrtowc_3278_64)))\n (let ((?x154287 ((_ extract 58 0) unconstrained_ret_mbrtowc_3171_64)))\n (let ((?x93261 ((_ extract 58 0) unconstrained_ret_mbrtowc_3032_64)))\n (let ((?x155793 (bvadd (_ bv576460752303357899 59) ?x93261)))\n (let ((?x65672 (bvadd ?x155793 ?x154287)))\n (let ((?x94810 (bvadd ?x65672 ?x38610)))\n (bvule ?x94810 (_ bv576460752303357905 59)))))))))\n(assert\n (let ((?x88176 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_3278_64)))\n (let ((?x44606 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_3171_64)))\n (let ((?x97474 (bvadd (_ bv18446744073709551613 64) ?x44606)))\n (let ((?x104153 (bvadd ?x97474 ?x88176)))\n (let (($x38579 (= unconstrained_ret_mbrtowc_3032_64 ?x104153)))\n (let ((?x9266 (ite $x38579 (_ bv35 8) (_ bv190 8))))\n (let ((?x35 ((_ extract 7 0) sym_argv_0_80)))\n (let ((?x75879 (bvadd (_ bv6 64) ?x44606)))\n (let ((?x105269 (bvadd ?x75879 ?x88176)))\n (let (($x82343 (= unconstrained_ret_mbrtowc_3032_64 ?x105269)))\n (let ((?x135110 (ite $x82343 ?x35 ?x9266)))\n (let ((?x153949 (bvadd (_ bv18446744073709551614 64) ?x44606)))\n (let ((?x91437 (bvadd ?x153949 ?x88176)))\n (let (($x78736 (= unconstrained_ret_mbrtowc_3032_64 ?x91437)))\n (let ((?x76091 (ite $x78736 (_ bv39 8) ?x135110)))\n (let ((?x19 ((_ extract 15 8) sym_argv_0_80)))\n (let ((?x123949 (bvadd (_ bv5 64) ?x44606)))\n (let ((?x52713 (bvadd ?x123949 ?x88176)))\n (let (($x3899 (= unconstrained_ret_mbrtowc_3032_64 ?x52713)))\n (let ((?x14646 (ite $x3899 ?x19 ?x76091)))\n (let ((?x92891 (bvadd (_ bv18446744073709551615 64) ?x44606)))\n (let ((?x39237 (bvadd ?x92891 ?x88176)))\n (let (($x117644 (= unconstrained_ret_mbrtowc_3032_64 ?x39237)))\n (let ((?x26558 (ite $x117644 (_ bv92 8) ?x14646)))\n (let ((?x21 ((_ extract 23 16) sym_argv_0_80)))\n (let ((?x93749 (bvadd (_ bv4 64) ?x44606)))\n (let ((?x3732 (bvadd ?x93749 ?x88176)))\n (let (($x85548 (= unconstrained_ret_mbrtowc_3032_64 ?x3732)))\n (let ((?x41443 (ite $x85548 ?x21 ?x26558)))\n (let ((?x62698 (bvadd ?x44606 ?x88176)))\n (let (($x51642 (= unconstrained_ret_mbrtowc_3032_64 ?x62698)))\n (let ((?x64138 (ite $x51642 (_ bv64 8) ?x41443)))\n (let ((?x23 ((_ extract 31 24) sym_argv_0_80)))\n (let ((?x26730 (bvadd (_ bv3 64) ?x44606)))\n (let ((?x87069 (bvadd ?x26730 ?x88176)))\n (let (($x132813 (= unconstrained_ret_mbrtowc_3032_64 ?x87069)))\n (let ((?x75204 (ite $x132813 ?x23 ?x64138)))\n (let ((?x29 ((_ extract 47 40) sym_argv_0_80)))\n (let ((?x90512 (bvadd (_ bv1 64) ?x44606)))\n (let ((?x29573 (bvadd ?x90512 ?x88176)))\n (let (($x49474 (= unconstrained_ret_mbrtowc_3032_64 ?x29573)))\n (let ((?x151280 (ite $x49474 ?x29 ?x75204)))\n (let ((?x27 ((_ extract 39 32) sym_argv_0_80)))\n (let ((?x98882 (bvadd (_ bv2 64) ?x44606)))\n (let ((?x94625 (bvadd ?x98882 ?x88176)))\n (let (($x96553 (= unconstrained_ret_mbrtowc_3032_64 ?x94625)))\n (let ((?x86406 (ite $x96553 ?x27 ?x151280)))\n (let (($x78112 (= (_ bv0 8) ?x86406)))\n (not $x78112))))))))))))))))))))))))))))))))))))))))))))))))))\n(assert\n (let ((?x96534 (bvadd (_ bv4 64) unconstrained_ret_mbrtowc_3032_64)))\n (let ((?x132825 (bvadd ?x96534 unconstrained_ret_mbrtowc_3171_64)))\n (let ((?x72373 (bvadd ?x132825 unconstrained_ret_mbrtowc_3278_64)))\n (let (($x52751 (bvule strlen_3000_64 ?x72373)))\n (not $x52751))))))\n(assert\n (let ((?x19755 (bvadd (_ bv576460752303357900 64) unconstrained_ret_mbrtowc_3032_64)))\n (let ((?x91014 (bvadd ?x19755 unconstrained_ret_mbrtowc_3171_64)))\n (let ((?x108427 (bvadd ?x91014 unconstrained_ret_mbrtowc_3278_64)))\n (bvule (_ bv576460752303357897 64) ?x108427)))))\n(assert\n (let ((?x19755 (bvadd (_ bv576460752303357900 64) unconstrained_ret_mbrtowc_3032_64)))\n (let ((?x91014 (bvadd ?x19755 unconstrained_ret_mbrtowc_3171_64)))\n (let ((?x108427 (bvadd ?x91014 unconstrained_ret_mbrtowc_3278_64)))\n (let ((?x88264 ((_ extract 63 59) ?x108427)))\n (= (_ bv0 5) ?x88264))))))\n(assert\n (let ((?x38610 ((_ extract 58 0) unconstrained_ret_mbrtowc_3278_64)))\n (let ((?x154287 ((_ extract 58 0) unconstrained_ret_mbrtowc_3171_64)))\n (let ((?x93261 ((_ extract 58 0) unconstrained_ret_mbrtowc_3032_64)))\n (let ((?x76868 (bvadd (_ bv576460752303357900 59) ?x93261)))\n (let ((?x78901 (bvadd ?x76868 ?x154287)))\n (let ((?x141686 (bvadd ?x78901 ?x38610)))\n (bvule ?x141686 (_ bv576460752303357905 59)))))))))\n(assert\n (let ((?x88176 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_3278_64)))\n (let ((?x44606 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_3171_64)))\n (let ((?x62698 (bvadd ?x44606 ?x88176)))\n (let (($x51642 (= unconstrained_ret_mbrtowc_3032_64 ?x62698)))\n (let ((?x97474 (bvadd (_ bv18446744073709551613 64) ?x44606)))\n (let ((?x104153 (bvadd ?x97474 ?x88176)))\n (let (($x38579 (= unconstrained_ret_mbrtowc_3032_64 ?x104153)))\n (let (($x155428 (or $x38579 $x51642)))\n (let ((?x98882 (bvadd (_ bv2 64) ?x44606)))\n (let ((?x94625 (bvadd ?x98882 ?x88176)))\n (let (($x96553 (= unconstrained_ret_mbrtowc_3032_64 ?x94625)))\n (let (($x44331 (or $x96553 $x155428)))\n (let ((?x26730 (bvadd (_ bv3 64) ?x44606)))\n (let ((?x87069 (bvadd ?x26730 ?x88176)))\n (let (($x132813 (= unconstrained_ret_mbrtowc_3032_64 ?x87069)))\n (let (($x93881 (or $x132813 $x44331)))\n (let ((?x92891 (bvadd (_ bv18446744073709551615 64) ?x44606)))\n (let ((?x39237 (bvadd ?x92891 ?x88176)))\n (let (($x117644 (= unconstrained_ret_mbrtowc_3032_64 ?x39237)))\n (let (($x139760 (or $x117644 $x93881)))\n (let ((?x123949 (bvadd (_ bv5 64) ?x44606)))\n (let ((?x52713 (bvadd ?x123949 ?x88176)))\n (let (($x3899 (= unconstrained_ret_mbrtowc_3032_64 ?x52713)))\n (let (($x33975 (or $x3899 $x139760)))\n (let ((?x93749 (bvadd (_ bv4 64) ?x44606)))\n (let ((?x3732 (bvadd ?x93749 ?x88176)))\n (let (($x85548 (= unconstrained_ret_mbrtowc_3032_64 ?x3732)))\n (let (($x60768 (or $x85548 $x33975)))\n (let ((?x153949 (bvadd (_ bv18446744073709551614 64) ?x44606)))\n (let ((?x91437 (bvadd ?x153949 ?x88176)))\n (let (($x78736 (= unconstrained_ret_mbrtowc_3032_64 ?x91437)))\n (let (($x73650 (or $x78736 $x60768)))\n (let ((?x90512 (bvadd (_ bv1 64) ?x44606)))\n (let ((?x29573 (bvadd ?x90512 ?x88176)))\n (let (($x49474 (= unconstrained_ret_mbrtowc_3032_64 ?x29573)))\n (or $x49474 $x73650)))))))))))))))))))))))))))))))))))))\n(assert\n (let ((?x88176 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_3278_64)))\n (let ((?x44606 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_3171_64)))\n (let ((?x97474 (bvadd (_ bv18446744073709551613 64) ?x44606)))\n (let ((?x104153 (bvadd ?x97474 ?x88176)))\n (let (($x38579 (= unconstrained_ret_mbrtowc_3032_64 ?x104153)))\n (let ((?x63770 (ite $x38579 (_ bv39 8) (_ bv190 8))))\n (let ((?x35 ((_ extract 7 0) sym_argv_0_80)))\n (let ((?x123949 (bvadd (_ bv5 64) ?x44606)))\n (let ((?x52713 (bvadd ?x123949 ?x88176)))\n (let (($x3899 (= unconstrained_ret_mbrtowc_3032_64 ?x52713)))\n (let ((?x64417 (ite $x3899 ?x35 ?x63770)))\n (let ((?x153949 (bvadd (_ bv18446744073709551614 64) ?x44606)))\n (let ((?x91437 (bvadd ?x153949 ?x88176)))\n (let (($x78736 (= unconstrained_ret_mbrtowc_3032_64 ?x91437)))\n (let ((?x88288 (ite $x78736 (_ bv92 8) ?x64417)))\n (let ((?x19 ((_ extract 15 8) sym_argv_0_80)))\n (let ((?x93749 (bvadd (_ bv4 64) ?x44606)))\n (let ((?x3732 (bvadd ?x93749 ?x88176)))\n (let (($x85548 (= unconstrained_ret_mbrtowc_3032_64 ?x3732)))\n (let ((?x78763 (ite $x85548 ?x19 ?x88288)))\n (let ((?x92891 (bvadd (_ bv18446744073709551615 64) ?x44606)))\n (let ((?x39237 (bvadd ?x92891 ?x88176)))\n (let (($x117644 (= unconstrained_ret_mbrtowc_3032_64 ?x39237)))\n (let ((?x151900 (ite $x117644 (_ bv64 8) ?x78763)))\n (let ((?x21 ((_ extract 23 16) sym_argv_0_80)))\n (let ((?x26730 (bvadd (_ bv3 64) ?x44606)))\n (let ((?x87069 (bvadd ?x26730 ?x88176)))\n (let (($x132813 (= unconstrained_ret_mbrtowc_3032_64 ?x87069)))\n (let ((?x29640 (ite $x132813 ?x21 ?x151900)))\n (let ((?x29 ((_ extract 47 40) sym_argv_0_80)))\n (let ((?x62698 (bvadd ?x44606 ?x88176)))\n (let (($x51642 (= unconstrained_ret_mbrtowc_3032_64 ?x62698)))\n (let ((?x152743 (ite $x51642 ?x29 ?x29640)))\n (let ((?x23 ((_ extract 31 24) sym_argv_0_80)))\n (let ((?x98882 (bvadd (_ bv2 64) ?x44606)))\n (let ((?x94625 (bvadd ?x98882 ?x88176)))\n (let (($x96553 (= unconstrained_ret_mbrtowc_3032_64 ?x94625)))\n (let ((?x85010 (ite $x96553 ?x23 ?x152743)))\n (let ((?x27 ((_ extract 39 32) sym_argv_0_80)))\n (let ((?x90512 (bvadd (_ bv1 64) ?x44606)))\n (let ((?x29573 (bvadd ?x90512 ?x88176)))\n (let (($x49474 (= unconstrained_ret_mbrtowc_3032_64 ?x29573)))\n (let ((?x34862 (ite $x49474 ?x27 ?x85010)))\n (let (($x66010 (= (_ bv0 8) ?x34862)))\n (not $x66010))))))))))))))))))))))))))))))))))))))))))))))\n(assert\n (let ((?x72464 (bvadd (_ bv5 64) unconstrained_ret_mbrtowc_3032_64)))\n (let ((?x108708 (bvadd (bvadd ?x72464 unconstrained_ret_mbrtowc_3171_64) unconstrained_ret_mbrtowc_3278_64)))\n (let (($x63302 (bvule strlen_3000_64 ?x108708)))\n (not $x63302)))))\n(assert\n (let ((?x153120 (bvadd (_ bv576460752303357901 64) unconstrained_ret_mbrtowc_3032_64)))\n (let ((?x125011 (bvadd (bvadd ?x153120 unconstrained_ret_mbrtowc_3171_64) unconstrained_ret_mbrtowc_3278_64)))\n (bvule (_ bv576460752303357898 64) ?x125011))))\n(assert\n (let ((?x153120 (bvadd (_ bv576460752303357901 64) unconstrained_ret_mbrtowc_3032_64)))\n (let ((?x125011 (bvadd (bvadd ?x153120 unconstrained_ret_mbrtowc_3171_64) unconstrained_ret_mbrtowc_3278_64)))\n (let ((?x35226 ((_ extract 63 59) ?x125011)))\n (= (_ bv0 5) ?x35226)))))\n(assert\n (let ((?x38610 ((_ extract 58 0) unconstrained_ret_mbrtowc_3278_64)))\n (let ((?x154287 ((_ extract 58 0) unconstrained_ret_mbrtowc_3171_64)))\n (let ((?x93261 ((_ extract 58 0) unconstrained_ret_mbrtowc_3032_64)))\n (let ((?x41647 (bvadd (_ bv576460752303357901 59) ?x93261)))\n (let ((?x153826 (bvadd (bvadd ?x41647 ?x154287) ?x38610)))\n (bvule ?x153826 (_ bv576460752303357905 59))))))))\n(assert\n (let ((?x58950 (bvadd unconstrained_ret_mbrtowc_3032_64 unconstrained_ret_mbrtowc_3171_64)))\n (let ((?x155613 (bvadd ?x58950 unconstrained_ret_mbrtowc_3278_64)))\n (let ((?x1916 (bvadd ?x155613 (_ bv576460752303357901 64))))\n (let (($x98250 (and (distinct (_ bv576460752303357905 64) ?x1916) true)))\n (let (($x46388 (and (distinct (_ bv576460752303357899 64) ?x1916) true)))\n (let (($x93962 (and (distinct (_ bv576460752303357904 64) ?x1916) true)))\n (let (($x93108 (and (distinct (_ bv576460752303357898 64) ?x1916) true)))\n (let (($x53941 (and (distinct (_ bv576460752303357903 64) ?x1916) true)))\n (and $x53941 $x93108 $x93962 $x46388 $x98250))))))))))\n(assert\n (let ((?x58950 (bvadd unconstrained_ret_mbrtowc_3032_64 unconstrained_ret_mbrtowc_3171_64)))\n (let ((?x155613 (bvadd ?x58950 unconstrained_ret_mbrtowc_3278_64)))\n (let ((?x1916 (bvadd ?x155613 (_ bv576460752303357901 64))))\n (and (distinct ?x1916 (_ bv576460752303357900 64)) true)))))\n(assert\n (let ((?x58950 (bvadd unconstrained_ret_mbrtowc_3032_64 unconstrained_ret_mbrtowc_3171_64)))\n (let ((?x155613 (bvadd ?x58950 unconstrained_ret_mbrtowc_3278_64)))\n (let ((?x1916 (bvadd ?x155613 (_ bv576460752303357901 64))))\n (and (distinct ?x1916 (_ bv576460752303357902 64)) true)))))\n(assert\n (let ((?x58950 (bvadd unconstrained_ret_mbrtowc_3032_64 unconstrained_ret_mbrtowc_3171_64)))\n (let ((?x155613 (bvadd ?x58950 unconstrained_ret_mbrtowc_3278_64)))\n (let ((?x1916 (bvadd ?x155613 (_ bv576460752303357901 64))))\n (and (distinct ?x1916 (_ bv576460752303357901 64)) true)))))\n(check-sat)\n",
    "time": 52.09026885032654,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=3, tm_hour=6, tm_min=47, tm_sec=0, tm_wday=3, tm_yday=338, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            0.4115571975708008
        ]
    }
}