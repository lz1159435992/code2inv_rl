{
    "filename": "mknod",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun sym_argv_0_80 () (_ BitVec 80))\n(declare-fun strlen_3000_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_3032_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_3171_64 () (_ BitVec 64))\n(assert\n (let ((?x608 ((_ extract 47 47) sym_argv_0_80)))\n (= (_ bv0 1) ?x608)))\n(assert\n (let ((?x435 ((_ extract 39 39) sym_argv_0_80)))\n (= (_ bv0 1) ?x435)))\n(assert\n (let ((?x543 ((_ extract 31 31) sym_argv_0_80)))\n (= (_ bv0 1) ?x543)))\n(assert\n (let ((?x384 ((_ extract 23 23) sym_argv_0_80)))\n (= (_ bv0 1) ?x384)))\n(assert\n (let ((?x523 ((_ extract 15 15) sym_argv_0_80)))\n (= (_ bv0 1) ?x523)))\n(assert\n (let ((?x460 ((_ extract 7 7) sym_argv_0_80)))\n (= (_ bv0 1) ?x460)))\n(assert\n (let ((?x625 ((_ extract 46 40) sym_argv_0_80)))\n (bvule ?x625 (_ bv126 7))))\n(assert\n (let ((?x633 ((_ extract 38 32) sym_argv_0_80)))\n (bvule ?x633 (_ bv126 7))))\n(assert\n (let ((?x338 ((_ extract 30 24) sym_argv_0_80)))\n (bvule ?x338 (_ bv126 7))))\n(assert\n (let ((?x170 ((_ extract 22 16) sym_argv_0_80)))\n (bvule ?x170 (_ bv126 7))))\n(assert\n (let ((?x469 ((_ extract 14 8) sym_argv_0_80)))\n (bvule ?x469 (_ bv126 7))))\n(assert\n (let ((?x318 ((_ extract 6 0) sym_argv_0_80)))\n (bvule ?x318 (_ bv126 7))))\n(assert\n (let ((?x16 ((_ extract 79 72) sym_argv_0_80)))\n (= (_ bv35 8) ?x16)))\n(assert\n (let ((?x24 ((_ extract 71 64) sym_argv_0_80)))\n (= (_ bv39 8) ?x24)))\n(assert\n (let ((?x31572 ((_ extract 61 56) sym_argv_0_80)))\n (let (($x31705 (bvule ?x31572 (_ bv39 6))))\n (let ((?x28097 ((_ extract 63 62) sym_argv_0_80)))\n (let (($x27881 (= (_ bv0 2) ?x28097)))\n (let (($x16092 (and $x27881 $x31705)))\n (let ((?x3607 (ite $x16092 (_ bv2 8) (_ bv1 8))))\n (let (($x91661 (= (_ bv0 8) ?x3607)))\n (not $x91661)))))))))\n(assert\n (let ((?x18 ((_ extract 63 56) sym_argv_0_80)))\n (= (_ bv92 8) ?x18)))\n(assert\n (let ((?x38490 ((_ extract 53 48) sym_argv_0_80)))\n (let (($x425 (bvule ?x38490 (_ bv39 6))))\n (let ((?x25576 ((_ extract 55 54) sym_argv_0_80)))\n (let (($x40563 (= (_ bv0 2) ?x25576)))\n (let (($x35342 (and $x40563 $x425)))\n (let ((?x37840 (ite $x35342 (_ bv2 8) (_ bv1 8))))\n (let (($x60801 (= (_ bv0 8) ?x37840)))\n (not $x60801)))))))))\n(assert\n (let ((?x31 ((_ extract 55 48) sym_argv_0_80)))\n (= (_ bv64 8) ?x31)))\n(assert\n (let ((?x46419 (bvadd (_ bv576460752303357896 64) strlen_3000_64)))\n (let ((?x35 ((_ extract 7 0) sym_argv_0_80)))\n (let (($x8853 (= (_ bv0 8) ?x35)))\n (let ((?x27304 (ite $x8853 (_ bv576460752303357905 64) (_ bv576460752303357906 64))))\n (let ((?x19 ((_ extract 15 8) sym_argv_0_80)))\n (let (($x19002 (= (_ bv0 8) ?x19)))\n (let ((?x16556 (ite $x19002 (_ bv576460752303357904 64) ?x27304)))\n (let ((?x21 ((_ extract 23 16) sym_argv_0_80)))\n (let (($x19422 (= (_ bv0 8) ?x21)))\n (let ((?x27906 (ite $x19422 (_ bv576460752303357903 64) ?x16556)))\n (let ((?x23 ((_ extract 31 24) sym_argv_0_80)))\n (let (($x22509 (= (_ bv0 8) ?x23)))\n (let ((?x17176 (ite $x22509 (_ bv576460752303357902 64) ?x27906)))\n (let ((?x27 ((_ extract 39 32) sym_argv_0_80)))\n (let (($x28433 (= (_ bv0 8) ?x27)))\n (let ((?x26332 (ite $x28433 (_ bv576460752303357901 64) ?x17176)))\n (let ((?x29 ((_ extract 47 40) sym_argv_0_80)))\n (let (($x1876 (= (_ bv0 8) ?x29)))\n (let ((?x7628 (ite $x1876 (_ bv576460752303357900 64) ?x26332)))\n (= ?x7628 ?x46419)))))))))))))))))))))\n(assert\n (let (($x152581 (= (_ bv0 64) unconstrained_ret_mbrtowc_3032_64)))\n (not $x152581)))\n(assert\n (let (($x68212 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_3032_64)))\n (not $x68212)))\n(assert\n (let (($x35450 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_3032_64)))\n (not $x35450)))\n(assert\n (let (($x71182 (= (_ bv0 64) unconstrained_ret_mbrtowc_3171_64)))\n (not $x71182)))\n(assert\n (let (($x153833 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_3171_64)))\n (not $x153833)))\n(assert\n (let (($x55921 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_3171_64)))\n (not $x55921)))\n(assert\n (let ((?x143913 (bvadd (_ bv3 64) unconstrained_ret_mbrtowc_3032_64)))\n (let ((?x80101 (bvadd ?x143913 unconstrained_ret_mbrtowc_3171_64)))\n (let (($x1698 (bvule strlen_3000_64 ?x80101)))\n (not $x1698)))))\n(assert\n (let ((?x24528 (bvadd (_ bv576460752303357899 64) unconstrained_ret_mbrtowc_3032_64)))\n (let ((?x38223 (bvadd ?x24528 unconstrained_ret_mbrtowc_3171_64)))\n (bvule (_ bv576460752303357896 64) ?x38223))))\n(assert\n (let ((?x24528 (bvadd (_ bv576460752303357899 64) unconstrained_ret_mbrtowc_3032_64)))\n (let ((?x38223 (bvadd ?x24528 unconstrained_ret_mbrtowc_3171_64)))\n (let ((?x57959 ((_ extract 63 59) ?x38223)))\n (= (_ bv0 5) ?x57959)))))\n(assert\n (let ((?x154287 ((_ extract 58 0) unconstrained_ret_mbrtowc_3171_64)))\n (let ((?x93261 ((_ extract 58 0) unconstrained_ret_mbrtowc_3032_64)))\n (let ((?x155793 (bvadd (_ bv576460752303357899 59) ?x93261)))\n (let ((?x65672 (bvadd ?x155793 ?x154287)))\n (bvule ?x65672 (_ bv576460752303357905 59)))))))\n(assert\n (let ((?x44606 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_3171_64)))\n (let ((?x75879 (bvadd (_ bv6 64) ?x44606)))\n (let (($x25345 (= unconstrained_ret_mbrtowc_3032_64 ?x75879)))\n (let ((?x97474 (bvadd (_ bv18446744073709551613 64) ?x44606)))\n (let (($x24395 (= unconstrained_ret_mbrtowc_3032_64 ?x97474)))\n (let (($x36065 (or $x24395 $x25345)))\n (let ((?x98882 (bvadd (_ bv2 64) ?x44606)))\n (let (($x64735 (= unconstrained_ret_mbrtowc_3032_64 ?x98882)))\n (let (($x114781 (or $x64735 $x36065)))\n (let (($x73400 (= unconstrained_ret_mbrtowc_3032_64 ?x44606)))\n (let (($x49838 (or $x73400 $x114781)))\n (let ((?x153949 (bvadd (_ bv18446744073709551614 64) ?x44606)))\n (let (($x78895 (= unconstrained_ret_mbrtowc_3032_64 ?x153949)))\n (let (($x72010 (or $x78895 $x49838)))\n (let ((?x123949 (bvadd (_ bv5 64) ?x44606)))\n (let (($x88712 (= unconstrained_ret_mbrtowc_3032_64 ?x123949)))\n (let (($x78140 (or $x88712 $x72010)))\n (let ((?x90512 (bvadd (_ bv1 64) ?x44606)))\n (let (($x90043 (= unconstrained_ret_mbrtowc_3032_64 ?x90512)))\n (let (($x89764 (or $x90043 $x78140)))\n (let ((?x26730 (bvadd (_ bv3 64) ?x44606)))\n (let (($x91480 (= unconstrained_ret_mbrtowc_3032_64 ?x26730)))\n (let (($x75251 (or $x91480 $x89764)))\n (let ((?x93749 (bvadd (_ bv4 64) ?x44606)))\n (let (($x152075 (= unconstrained_ret_mbrtowc_3032_64 ?x93749)))\n (let (($x31752 (or $x152075 $x75251)))\n (let ((?x92891 (bvadd (_ bv18446744073709551615 64) ?x44606)))\n (let (($x153000 (= unconstrained_ret_mbrtowc_3032_64 ?x92891)))\n (or $x153000 $x31752))))))))))))))))))))))))))))))\n(assert\n (let ((?x44606 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_3171_64)))\n (let ((?x97474 (bvadd (_ bv18446744073709551613 64) ?x44606)))\n (let (($x24395 (= unconstrained_ret_mbrtowc_3032_64 ?x97474)))\n (let ((?x27323 (ite $x24395 (_ bv35 8) (_ bv190 8))))\n (let ((?x35 ((_ extract 7 0) sym_argv_0_80)))\n (let ((?x75879 (bvadd (_ bv6 64) ?x44606)))\n (let (($x25345 (= unconstrained_ret_mbrtowc_3032_64 ?x75879)))\n (let ((?x55536 (ite $x25345 ?x35 ?x27323)))\n (let ((?x153949 (bvadd (_ bv18446744073709551614 64) ?x44606)))\n (let (($x78895 (= unconstrained_ret_mbrtowc_3032_64 ?x153949)))\n (let ((?x83987 (ite $x78895 (_ bv39 8) ?x55536)))\n (let ((?x19 ((_ extract 15 8) sym_argv_0_80)))\n (let ((?x123949 (bvadd (_ bv5 64) ?x44606)))\n (let (($x88712 (= unconstrained_ret_mbrtowc_3032_64 ?x123949)))\n (let ((?x126208 (ite $x88712 ?x19 ?x83987)))\n (let ((?x92891 (bvadd (_ bv18446744073709551615 64) ?x44606)))\n (let (($x153000 (= unconstrained_ret_mbrtowc_3032_64 ?x92891)))\n (let ((?x62207 (ite $x153000 (_ bv92 8) ?x126208)))\n (let ((?x21 ((_ extract 23 16) sym_argv_0_80)))\n (let ((?x93749 (bvadd (_ bv4 64) ?x44606)))\n (let (($x152075 (= unconstrained_ret_mbrtowc_3032_64 ?x93749)))\n (let ((?x130057 (ite $x152075 ?x21 ?x62207)))\n (let (($x73400 (= unconstrained_ret_mbrtowc_3032_64 ?x44606)))\n (let ((?x97973 (ite $x73400 (_ bv64 8) ?x130057)))\n (let ((?x23 ((_ extract 31 24) sym_argv_0_80)))\n (let ((?x26730 (bvadd (_ bv3 64) ?x44606)))\n (let (($x91480 (= unconstrained_ret_mbrtowc_3032_64 ?x26730)))\n (let ((?x11490 (ite $x91480 ?x23 ?x97973)))\n (let ((?x29 ((_ extract 47 40) sym_argv_0_80)))\n (let ((?x90512 (bvadd (_ bv1 64) ?x44606)))\n (let (($x90043 (= unconstrained_ret_mbrtowc_3032_64 ?x90512)))\n (let ((?x64893 (ite $x90043 ?x29 ?x11490)))\n (let ((?x27 ((_ extract 39 32) sym_argv_0_80)))\n (let ((?x98882 (bvadd (_ bv2 64) ?x44606)))\n (let (($x64735 (= unconstrained_ret_mbrtowc_3032_64 ?x98882)))\n (let ((?x17812 (ite $x64735 ?x27 ?x64893)))\n (let (($x52294 (= (_ bv0 8) ?x17812)))\n (not $x52294)))))))))))))))))))))))))))))))))))))))\n(assert\n (let ((?x96534 (bvadd (_ bv4 64) unconstrained_ret_mbrtowc_3032_64)))\n (let ((?x132825 (bvadd ?x96534 unconstrained_ret_mbrtowc_3171_64)))\n (let (($x80544 (bvule strlen_3000_64 ?x132825)))\n (not $x80544)))))\n(assert\n (let ((?x19755 (bvadd (_ bv576460752303357900 64) unconstrained_ret_mbrtowc_3032_64)))\n (let ((?x91014 (bvadd ?x19755 unconstrained_ret_mbrtowc_3171_64)))\n (bvule (_ bv576460752303357897 64) ?x91014))))\n(assert\n (let ((?x19755 (bvadd (_ bv576460752303357900 64) unconstrained_ret_mbrtowc_3032_64)))\n (let ((?x91014 (bvadd ?x19755 unconstrained_ret_mbrtowc_3171_64)))\n (let ((?x80768 ((_ extract 63 59) ?x91014)))\n (= (_ bv0 5) ?x80768)))))\n(assert\n (let ((?x154287 ((_ extract 58 0) unconstrained_ret_mbrtowc_3171_64)))\n (let ((?x93261 ((_ extract 58 0) unconstrained_ret_mbrtowc_3032_64)))\n (let ((?x76868 (bvadd (_ bv576460752303357900 59) ?x93261)))\n (let ((?x78901 (bvadd ?x76868 ?x154287)))\n (bvule ?x78901 (_ bv576460752303357905 59)))))))\n(assert\n (let ((?x58950 (bvadd unconstrained_ret_mbrtowc_3032_64 unconstrained_ret_mbrtowc_3171_64)))\n (let ((?x95638 (bvadd ?x58950 (_ bv576460752303357900 64))))\n (let (($x97134 (and (distinct (_ bv576460752303357902 64) ?x95638) true)))\n (let (($x97942 (and (distinct (_ bv576460752303357901 64) ?x95638) true)))\n (let (($x137729 (and (distinct (_ bv576460752303357900 64) ?x95638) true)))\n (let (($x141140 (and (distinct (_ bv576460752303357905 64) ?x95638) true)))\n (let (($x53956 (and (distinct (_ bv576460752303357899 64) ?x95638) true)))\n (let (($x101429 (and (distinct (_ bv576460752303357904 64) ?x95638) true)))\n (let (($x97561 (and (distinct (_ bv576460752303357898 64) ?x95638) true)))\n (let (($x155113 (and (distinct (_ bv576460752303357897 64) ?x95638) true)))\n (let (($x27731 (and (distinct (_ bv576460752303357903 64) ?x95638) true)))\n (and $x27731 $x155113 $x97561 $x101429 $x53956 $x141140 $x137729 $x97942 $x97134)))))))))))))\n(check-sat)\n",
    "time": 2.442206621170044,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=3, tm_hour=3, tm_min=24, tm_sec=43, tm_wday=3, tm_yday=338, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            0.27287983894348145
        ]
    }
}