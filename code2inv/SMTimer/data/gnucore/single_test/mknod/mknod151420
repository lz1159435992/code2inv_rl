{
    "filename": "mknod",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun unconstrained_ret_mbrtowc_1989_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_2140_64 () (_ BitVec 64))\n(declare-fun sym_argv_0_80 () (_ BitVec 80))\n(declare-fun strlen_1959_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_2235_64 () (_ BitVec 64))\n(assert\n (let (($x45982 (= (_ bv0 64) unconstrained_ret_mbrtowc_1989_64)))\n (not $x45982)))\n(assert\n (let (($x47099 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1989_64)))\n (not $x47099)))\n(assert\n (let (($x32256 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1989_64)))\n (not $x32256)))\n(assert\n (let (($x120871 (= (_ bv0 64) unconstrained_ret_mbrtowc_2140_64)))\n (not $x120871)))\n(assert\n (let (($x28644 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_2140_64)))\n (not $x28644)))\n(assert\n (let (($x45428 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_2140_64)))\n (not $x45428)))\n(assert\n (let ((?x543 ((_ extract 31 31) sym_argv_0_80)))\n (= (_ bv0 1) ?x543)))\n(assert\n (let ((?x384 ((_ extract 23 23) sym_argv_0_80)))\n (= (_ bv0 1) ?x384)))\n(assert\n (let ((?x523 ((_ extract 15 15) sym_argv_0_80)))\n (= (_ bv0 1) ?x523)))\n(assert\n (let ((?x460 ((_ extract 7 7) sym_argv_0_80)))\n (= (_ bv0 1) ?x460)))\n(assert\n (let ((?x338 ((_ extract 30 24) sym_argv_0_80)))\n (bvule ?x338 (_ bv126 7))))\n(assert\n (let ((?x170 ((_ extract 22 16) sym_argv_0_80)))\n (bvule ?x170 (_ bv126 7))))\n(assert\n (let ((?x469 ((_ extract 14 8) sym_argv_0_80)))\n (bvule ?x469 (_ bv126 7))))\n(assert\n (let ((?x318 ((_ extract 6 0) sym_argv_0_80)))\n (bvule ?x318 (_ bv126 7))))\n(assert\n (let ((?x7584 ((_ extract 77 72) sym_argv_0_80)))\n (let (($x2681 (bvule ?x7584 (_ bv39 6))))\n (let ((?x10031 ((_ extract 79 78) sym_argv_0_80)))\n (let (($x17400 (= (_ bv0 2) ?x10031)))\n (let (($x15041 (and $x17400 $x2681)))\n (let ((?x17732 (ite $x15041 (_ bv2 8) (_ bv1 8))))\n (let (($x7713 (= (_ bv0 8) ?x17732)))\n (not $x7713)))))))))\n(assert\n (let ((?x16 ((_ extract 79 72) sym_argv_0_80)))\n (= (_ bv65 8) ?x16)))\n(assert\n (let ((?x24 ((_ extract 71 64) sym_argv_0_80)))\n (= (_ bv12 8) ?x24)))\n(assert\n (let ((?x18 ((_ extract 63 56) sym_argv_0_80)))\n (= (_ bv11 8) ?x18)))\n(assert\n (let ((?x31 ((_ extract 55 48) sym_argv_0_80)))\n (= (_ bv12 8) ?x31)))\n(assert\n (let ((?x29 ((_ extract 47 40) sym_argv_0_80)))\n (= (_ bv39 8) ?x29)))\n(assert\n (let ((?x40426 ((_ extract 37 32) sym_argv_0_80)))\n (let (($x18216 (bvule ?x40426 (_ bv39 6))))\n (let ((?x19371 ((_ extract 39 38) sym_argv_0_80)))\n (let (($x33939 (= (_ bv0 2) ?x19371)))\n (let (($x43328 (and $x33939 $x18216)))\n (let ((?x37198 (ite $x43328 (_ bv2 8) (_ bv1 8))))\n (let (($x61504 (= (_ bv0 8) ?x37198)))\n (not $x61504)))))))))\n(assert\n (let ((?x27 ((_ extract 39 32) sym_argv_0_80)))\n (= (_ bv64 8) ?x27)))\n(assert\n (let ((?x30505 (bvadd (_ bv576460752303357896 64) strlen_1959_64)))\n (let ((?x35 ((_ extract 7 0) sym_argv_0_80)))\n (let (($x8853 (= (_ bv0 8) ?x35)))\n (let ((?x27304 (ite $x8853 (_ bv576460752303357905 64) (_ bv576460752303357906 64))))\n (let ((?x19 ((_ extract 15 8) sym_argv_0_80)))\n (let (($x19002 (= (_ bv0 8) ?x19)))\n (let ((?x16556 (ite $x19002 (_ bv576460752303357904 64) ?x27304)))\n (let ((?x21 ((_ extract 23 16) sym_argv_0_80)))\n (let (($x19422 (= (_ bv0 8) ?x21)))\n (let ((?x27906 (ite $x19422 (_ bv576460752303357903 64) ?x16556)))\n (let ((?x23 ((_ extract 31 24) sym_argv_0_80)))\n (let (($x22509 (= (_ bv0 8) ?x23)))\n (let ((?x17176 (ite $x22509 (_ bv576460752303357902 64) ?x27906)))\n (= ?x17176 ?x30505)))))))))))))))\n(assert\n (let (($x48851 (= (_ bv0 64) unconstrained_ret_mbrtowc_2235_64)))\n (not $x48851)))\n(assert\n (let (($x39228 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_2235_64)))\n (not $x39228)))\n(assert\n (let (($x12591 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_2235_64)))\n (not $x12591)))\n(assert\n (let ((?x27419 (bvadd (_ bv5 64) unconstrained_ret_mbrtowc_1989_64)))\n (let ((?x79043 (bvadd ?x27419 unconstrained_ret_mbrtowc_2140_64)))\n (let ((?x118602 (bvadd ?x79043 unconstrained_ret_mbrtowc_2235_64)))\n (let (($x154436 (bvule strlen_1959_64 ?x118602)))\n (not $x154436))))))\n(assert\n (let ((?x80496 (bvadd (_ bv576460752303357901 64) unconstrained_ret_mbrtowc_1989_64)))\n (let ((?x46074 (bvadd ?x80496 unconstrained_ret_mbrtowc_2140_64)))\n (let ((?x22362 (bvadd ?x46074 unconstrained_ret_mbrtowc_2235_64)))\n (bvule (_ bv576460752303357896 64) ?x22362)))))\n(assert\n (let ((?x80496 (bvadd (_ bv576460752303357901 64) unconstrained_ret_mbrtowc_1989_64)))\n (let ((?x46074 (bvadd ?x80496 unconstrained_ret_mbrtowc_2140_64)))\n (let ((?x22362 (bvadd ?x46074 unconstrained_ret_mbrtowc_2235_64)))\n (let ((?x56429 ((_ extract 63 59) ?x22362)))\n (= (_ bv0 5) ?x56429))))))\n(assert\n (let ((?x113461 ((_ extract 58 0) unconstrained_ret_mbrtowc_2235_64)))\n (let ((?x126451 ((_ extract 58 0) unconstrained_ret_mbrtowc_2140_64)))\n (let ((?x17848 ((_ extract 58 0) unconstrained_ret_mbrtowc_1989_64)))\n (let ((?x18702 (bvadd (_ bv576460752303357901 59) ?x17848)))\n (let ((?x70494 (bvadd ?x18702 ?x126451)))\n (let ((?x20420 (bvadd ?x70494 ?x113461)))\n (bvule ?x20420 (_ bv576460752303357905 59)))))))))\n(assert\n (let ((?x44761 (bvadd unconstrained_ret_mbrtowc_1989_64 unconstrained_ret_mbrtowc_2140_64)))\n (let ((?x79392 (bvadd ?x44761 unconstrained_ret_mbrtowc_2235_64)))\n (let ((?x28656 (bvadd ?x79392 (_ bv576460752303357901 64))))\n (let (($x94568 (and (distinct (_ bv576460752303357900 64) ?x28656) true)))\n (let (($x73161 (and (distinct (_ bv576460752303357905 64) ?x28656) true)))\n (let (($x44345 (and (distinct (_ bv576460752303357896 64) ?x28656) true)))\n (let (($x87782 (and (distinct (_ bv576460752303357901 64) ?x28656) true)))\n (and $x87782 $x44345 $x73161 $x94568)))))))))\n(assert\n (let ((?x44761 (bvadd unconstrained_ret_mbrtowc_1989_64 unconstrained_ret_mbrtowc_2140_64)))\n (let ((?x79392 (bvadd ?x44761 unconstrained_ret_mbrtowc_2235_64)))\n (let ((?x28656 (bvadd ?x79392 (_ bv576460752303357901 64))))\n (and (distinct ?x28656 (_ bv576460752303357903 64)) true)))))\n(assert\n (let ((?x44761 (bvadd unconstrained_ret_mbrtowc_1989_64 unconstrained_ret_mbrtowc_2140_64)))\n (let ((?x79392 (bvadd ?x44761 unconstrained_ret_mbrtowc_2235_64)))\n (let ((?x28656 (bvadd ?x79392 (_ bv576460752303357901 64))))\n (and (distinct ?x28656 (_ bv576460752303357904 64)) true)))))\n(assert\n (let ((?x44761 (bvadd unconstrained_ret_mbrtowc_1989_64 unconstrained_ret_mbrtowc_2140_64)))\n (let ((?x79392 (bvadd ?x44761 unconstrained_ret_mbrtowc_2235_64)))\n (let ((?x28656 (bvadd ?x79392 (_ bv576460752303357901 64))))\n (and (distinct ?x28656 (_ bv576460752303357902 64)) true)))))\n(assert\n (let ((?x44761 (bvadd unconstrained_ret_mbrtowc_1989_64 unconstrained_ret_mbrtowc_2140_64)))\n (let ((?x79392 (bvadd ?x44761 unconstrained_ret_mbrtowc_2235_64)))\n (let ((?x28656 (bvadd ?x79392 (_ bv576460752303357901 64))))\n (and (distinct ?x28656 (_ bv576460752303357899 64)) true)))))\n(assert\n (let ((?x44761 (bvadd unconstrained_ret_mbrtowc_1989_64 unconstrained_ret_mbrtowc_2140_64)))\n (let ((?x79392 (bvadd ?x44761 unconstrained_ret_mbrtowc_2235_64)))\n (let ((?x28656 (bvadd ?x79392 (_ bv576460752303357901 64))))\n (and (distinct ?x28656 (_ bv576460752303357897 64)) true)))))\n(assert\n (let ((?x44761 (bvadd unconstrained_ret_mbrtowc_1989_64 unconstrained_ret_mbrtowc_2140_64)))\n (let ((?x79392 (bvadd ?x44761 unconstrained_ret_mbrtowc_2235_64)))\n (let ((?x28656 (bvadd ?x79392 (_ bv576460752303357901 64))))\n (and (distinct ?x28656 (_ bv576460752303357898 64)) true)))))\n(check-sat)\n",
    "time": 69.64185690879822,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=2, tm_hour=23, tm_min=10, tm_sec=7, tm_wday=2, tm_yday=337, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            24.447525024414062
        ]
    }
}