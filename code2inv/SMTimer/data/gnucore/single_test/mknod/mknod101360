{
    "filename": "mknod",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun unconstrained_ret_mbrtowc_1732_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_1436_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_1575_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_1294_64 () (_ BitVec 64))\n(assert\n (let (($x14512 (= (_ bv0 64) unconstrained_ret_mbrtowc_1732_64)))\n (not $x14512)))\n(assert\n (let (($x38254 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1732_64)))\n (not $x38254)))\n(assert\n (let (($x11788 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1732_64)))\n (not $x11788)))\n(assert\n (let (($x42731 (= (_ bv0 64) unconstrained_ret_mbrtowc_1436_64)))\n (not $x42731)))\n(assert\n (let (($x46245 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1436_64)))\n (not $x46245)))\n(assert\n (let (($x46497 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1436_64)))\n (not $x46497)))\n(assert\n (let (($x30360 (= (_ bv0 64) unconstrained_ret_mbrtowc_1575_64)))\n (not $x30360)))\n(assert\n (let (($x35144 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1575_64)))\n (not $x35144)))\n(assert\n (let (($x27636 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1575_64)))\n (not $x27636)))\n(assert\n (let (($x44980 (= (_ bv0 64) unconstrained_ret_mbrtowc_1294_64)))\n (not $x44980)))\n(assert\n (let (($x36970 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1294_64)))\n (not $x36970)))\n(assert\n (let (($x46632 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1294_64)))\n (not $x46632)))\n(assert\n (let ((?x35164 (bvadd (bvadd (_ bv1 64) unconstrained_ret_mbrtowc_1294_64) unconstrained_ret_mbrtowc_1436_64)))\n (let ((?x20847 (bvadd ?x35164 unconstrained_ret_mbrtowc_1575_64)))\n (let ((?x49384 (bvadd ?x20847 unconstrained_ret_mbrtowc_1732_64)))\n (let (($x17403 (bvule (_ bv2 64) ?x49384)))\n (not $x17403))))))\n(assert\n (let ((?x33481 (bvadd (bvadd (_ bv576460752303357911 64) unconstrained_ret_mbrtowc_1294_64) unconstrained_ret_mbrtowc_1436_64)))\n (let ((?x10672 (bvadd (bvadd ?x33481 unconstrained_ret_mbrtowc_1575_64) unconstrained_ret_mbrtowc_1732_64)))\n (bvule (_ bv576460752303357910 64) ?x10672))))\n(assert\n (let ((?x33481 (bvadd (bvadd (_ bv576460752303357911 64) unconstrained_ret_mbrtowc_1294_64) unconstrained_ret_mbrtowc_1436_64)))\n (let ((?x10672 (bvadd (bvadd ?x33481 unconstrained_ret_mbrtowc_1575_64) unconstrained_ret_mbrtowc_1732_64)))\n (let ((?x46443 ((_ extract 63 59) ?x10672)))\n (= (_ bv0 5) ?x46443)))))\n(assert\n (let ((?x52223 ((_ extract 58 0) unconstrained_ret_mbrtowc_1732_64)))\n (let ((?x31535 ((_ extract 58 0) unconstrained_ret_mbrtowc_1575_64)))\n (let ((?x46406 ((_ extract 58 0) unconstrained_ret_mbrtowc_1436_64)))\n (let ((?x12745 (bvadd (bvadd (_ bv576460752303357911 59) ((_ extract 58 0) unconstrained_ret_mbrtowc_1294_64)) ?x46406)))\n (let ((?x35438 (bvadd (bvadd ?x12745 ?x31535) ?x52223)))\n (bvule ?x35438 (_ bv576460752303357911 59))))))))\n(assert\n (let ((?x25779 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1732_64)))\n (let ((?x25884 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1575_64)))\n (let ((?x43205 (bvadd (bvadd (_ bv18446744073709551615 64) (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1436_64)) ?x25884)))\n (let ((?x15897 (bvadd ?x43205 ?x25779)))\n (let (($x33187 (= unconstrained_ret_mbrtowc_1294_64 ?x15897)))\n (let ((?x48253 (bvadd (bvadd (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1436_64) ?x25884) ?x25779)))\n (let (($x24370 (= unconstrained_ret_mbrtowc_1294_64 ?x48253)))\n (or $x24370 $x33187)))))))))\n(assert\n (let ((?x25779 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1732_64)))\n (let ((?x25884 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1575_64)))\n (let ((?x43205 (bvadd (bvadd (_ bv18446744073709551615 64) (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1436_64)) ?x25884)))\n (let ((?x15897 (bvadd ?x43205 ?x25779)))\n (let (($x33187 (= unconstrained_ret_mbrtowc_1294_64 ?x15897)))\n (let ((?x39353 (ite $x33187 (_ bv12 8) (_ bv190 8))))\n (let ((?x48253 (bvadd (bvadd (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1436_64) ?x25884) ?x25779)))\n (let (($x24370 (= unconstrained_ret_mbrtowc_1294_64 ?x48253)))\n (let ((?x37189 (ite $x24370 (_ bv64 8) ?x39353)))\n (let (($x987 (= (_ bv0 8) ?x37189)))\n (not $x987))))))))))))\n(assert\n (let ((?x19368 (bvadd (bvadd (_ bv2 64) unconstrained_ret_mbrtowc_1294_64) unconstrained_ret_mbrtowc_1436_64)))\n (let ((?x7998 (bvadd (bvadd ?x19368 unconstrained_ret_mbrtowc_1575_64) unconstrained_ret_mbrtowc_1732_64)))\n (let (($x52093 (bvule (_ bv2 64) ?x7998)))\n (not $x52093)))))\n(assert\n (let ((?x29861 (bvadd unconstrained_ret_mbrtowc_1294_64 unconstrained_ret_mbrtowc_1436_64)))\n (let ((?x41974 (bvadd ?x29861 unconstrained_ret_mbrtowc_1575_64)))\n (let ((?x21352 (bvadd ?x41974 unconstrained_ret_mbrtowc_1732_64)))\n (let ((?x32034 (bvadd ?x21352 (_ bv576460752303357912 64))))\n (and (distinct (_ bv576460752303357911 64) ?x32034) true))))))\n(check-sat)\n",
    "time": 1.4655547142028809,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=2, tm_hour=22, tm_min=19, tm_sec=26, tm_wday=2, tm_yday=337, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            0.3858013153076172
        ]
    }
}