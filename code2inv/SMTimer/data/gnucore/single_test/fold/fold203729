{
    "filename": "fold",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun unconstrained_ret_mbrtowc_5965_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_6482_64 () (_ BitVec 64))\n(declare-fun mem_6_1702_8 () (_ BitVec 8))\n(declare-fun strlen_3691_64 () (_ BitVec 64))\n(declare-fun mem_9_1705_8 () (_ BitVec 8))\n(declare-fun mem_8_1704_8 () (_ BitVec 8))\n(declare-fun unconstrained_ret_mbrtowc_6123_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_6285_64 () (_ BitVec 64))\n(assert\n (let (($x259319 (= (_ bv0 64) unconstrained_ret_mbrtowc_5965_64)))\n (not $x259319)))\n(assert\n (let (($x224770 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_5965_64)))\n (not $x224770)))\n(assert\n (let (($x255168 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_5965_64)))\n (not $x255168)))\n(assert\n (let (($x165656 (= (_ bv0 64) unconstrained_ret_mbrtowc_6482_64)))\n (not $x165656)))\n(assert\n (let (($x219857 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_6482_64)))\n (not $x219857)))\n(assert\n (let (($x198446 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_6482_64)))\n (not $x198446)))\n(assert\n (let ((?x15100 ((_ extract 5 0) mem_6_1702_8)))\n (let (($x126795 (bvule ?x15100 (_ bv39 6))))\n (let ((?x16127 ((_ extract 7 6) mem_6_1702_8)))\n (let (($x147953 (= (_ bv0 2) ?x16127)))\n (let (($x117065 (and $x147953 $x126795)))\n (let ((?x33763 (ite $x117065 (_ bv2 8) (_ bv1 8))))\n (let (($x89962 (bvule (_ bv39 8) mem_6_1702_8)))\n (let ((?x160075 (ite $x89962 ?x33763 (_ bv255 8))))\n (let (($x131084 (= (_ bv39 8) mem_6_1702_8)))\n (let ((?x57941 (ite $x131084 (_ bv0 8) ?x160075)))\n (let (($x107615 (= (_ bv0 8) ?x57941)))\n (let (($x195467 (not $x107615)))\n (let (($x186569 (or $x131084 $x89962)))\n (let ((?x42551 (ite $x186569 (_ bv0 8) (_ bv255 8))))\n (let (($x215307 (= (_ bv0 8) ?x42551)))\n (let (($x47470 (not $x215307)))\n (or $x47470 $x195467))))))))))))))))))\n(assert\n (let ((?x207070 ((_ extract 6 0) mem_6_1702_8)))\n (let (($x256328 (bvule ?x207070 (_ bv126 7))))\n (let (($x59646 (not $x256328)))\n (let ((?x157198 ((_ extract 7 7) mem_6_1702_8)))\n (let (($x133019 (= (_ bv0 1) ?x157198)))\n (let (($x45770 (not $x133019)))\n (or $x45770 $x59646))))))))\n(assert\n (let (($x42768 (= (_ bv0 8) mem_9_1705_8)))\n (let ((?x248513 (ite $x42768 (_ bv9 64) (_ bv12 64))))\n (let (($x151992 (= (_ bv0 8) mem_8_1704_8)))\n (let ((?x80078 (ite $x151992 (_ bv8 64) ?x248513)))\n (let (($x177658 (= (_ bv0 8) mem_6_1702_8)))\n (let ((?x69301 (ite $x177658 (_ bv6 64) ?x80078)))\n (= ?x69301 strlen_3691_64))))))))\n(assert\n (bvule (_ bv8 64) strlen_3691_64))\n(assert\n (let (($x148801 (= (_ bv10 64) strlen_3691_64)))\n (not $x148801)))\n(assert\n (let (($x147732 (= (_ bv11 64) strlen_3691_64)))\n (not $x147732)))\n(assert\n (let (($x164176 (= (_ bv12 64) strlen_3691_64)))\n (not $x164176)))\n(assert\n (let (($x261959 (= (_ bv13 64) strlen_3691_64)))\n (not $x261959)))\n(assert\n (let (($x159473 (= (_ bv14 64) strlen_3691_64)))\n (not $x159473)))\n(assert\n (let (($x33842 (= (_ bv15 64) strlen_3691_64)))\n (not $x33842)))\n(assert\n (let (($x181063 (= (_ bv16 64) strlen_3691_64)))\n (not $x181063)))\n(assert\n (let (($x95241 (bvule (_ bv17 64) strlen_3691_64)))\n (not $x95241)))\n(assert\n (let (($x136784 (= (_ bv0 64) unconstrained_ret_mbrtowc_6123_64)))\n (not $x136784)))\n(assert\n (let (($x263072 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_6123_64)))\n (not $x263072)))\n(assert\n (let (($x211728 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_6123_64)))\n (not $x211728)))\n(assert\n (let (($x55077 (= (_ bv0 64) unconstrained_ret_mbrtowc_6285_64)))\n (not $x55077)))\n(assert\n (let (($x246264 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_6285_64)))\n (not $x246264)))\n(assert\n (let (($x43021 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_6285_64)))\n (not $x43021)))\n(assert\n (let ((?x215682 (bvadd (bvadd (_ bv16 64) unconstrained_ret_mbrtowc_5965_64) unconstrained_ret_mbrtowc_6123_64)))\n (let ((?x245613 (bvadd ?x215682 unconstrained_ret_mbrtowc_6285_64)))\n (let ((?x195316 (bvadd ?x245613 unconstrained_ret_mbrtowc_6482_64)))\n (let (($x123863 (bvule strlen_3691_64 ?x195316)))\n (not $x123863))))))\n(assert\n (let ((?x137026 ((_ extract 3 0) unconstrained_ret_mbrtowc_6482_64)))\n (let ((?x65586 ((_ extract 3 0) unconstrained_ret_mbrtowc_6285_64)))\n (let ((?x127797 ((_ extract 3 0) unconstrained_ret_mbrtowc_6123_64)))\n (let ((?x224548 ((_ extract 3 0) unconstrained_ret_mbrtowc_5965_64)))\n (let ((?x79138 (bvadd ?x224548 ?x127797)))\n (let ((?x165284 (bvadd ?x79138 ?x65586)))\n (let ((?x260589 (bvadd ?x165284 ?x137026)))\n (bvule ?x260589 (_ bv8 4))))))))))\n(assert\n (let ((?x236151 (bvadd unconstrained_ret_mbrtowc_5965_64 unconstrained_ret_mbrtowc_6123_64)))\n (let ((?x180605 (bvadd ?x236151 unconstrained_ret_mbrtowc_6285_64)))\n (let ((?x244234 (bvadd ?x180605 unconstrained_ret_mbrtowc_6482_64)))\n (let ((?x112916 (bvadd ?x244234 (_ bv16 64))))\n (let (($x271013 (and (distinct (_ bv3 64) ?x112916) true)))\n (let (($x230786 (and (distinct (_ bv0 64) ?x112916) true)))\n (let (($x228301 (and (distinct (_ bv8 64) ?x112916) true)))\n (and $x228301 $x230786 $x271013)))))))))\n(assert\n (let ((?x236151 (bvadd unconstrained_ret_mbrtowc_5965_64 unconstrained_ret_mbrtowc_6123_64)))\n (let ((?x180605 (bvadd ?x236151 unconstrained_ret_mbrtowc_6285_64)))\n (let ((?x244234 (bvadd ?x180605 unconstrained_ret_mbrtowc_6482_64)))\n (let ((?x112916 (bvadd ?x244234 (_ bv16 64))))\n (and (distinct ?x112916 (_ bv7 64)) true))))))\n(assert\n (let ((?x236151 (bvadd unconstrained_ret_mbrtowc_5965_64 unconstrained_ret_mbrtowc_6123_64)))\n (let ((?x180605 (bvadd ?x236151 unconstrained_ret_mbrtowc_6285_64)))\n (let ((?x244234 (bvadd ?x180605 unconstrained_ret_mbrtowc_6482_64)))\n (let ((?x112916 (bvadd ?x244234 (_ bv16 64))))\n (and (distinct ?x112916 (_ bv2 64)) true))))))\n(assert\n (let ((?x236151 (bvadd unconstrained_ret_mbrtowc_5965_64 unconstrained_ret_mbrtowc_6123_64)))\n (let ((?x180605 (bvadd ?x236151 unconstrained_ret_mbrtowc_6285_64)))\n (let ((?x244234 (bvadd ?x180605 unconstrained_ret_mbrtowc_6482_64)))\n (let ((?x112916 (bvadd ?x244234 (_ bv16 64))))\n (and (distinct ?x112916 (_ bv4 64)) true))))))\n(assert\n (let ((?x236151 (bvadd unconstrained_ret_mbrtowc_5965_64 unconstrained_ret_mbrtowc_6123_64)))\n (let ((?x180605 (bvadd ?x236151 unconstrained_ret_mbrtowc_6285_64)))\n (let ((?x244234 (bvadd ?x180605 unconstrained_ret_mbrtowc_6482_64)))\n (let ((?x112916 (bvadd ?x244234 (_ bv16 64))))\n (and (distinct ?x112916 (_ bv1 64)) true))))))\n(assert\n (let ((?x236151 (bvadd unconstrained_ret_mbrtowc_5965_64 unconstrained_ret_mbrtowc_6123_64)))\n (let ((?x180605 (bvadd ?x236151 unconstrained_ret_mbrtowc_6285_64)))\n (let ((?x244234 (bvadd ?x180605 unconstrained_ret_mbrtowc_6482_64)))\n (let ((?x112916 (bvadd ?x244234 (_ bv16 64))))\n (and (distinct ?x112916 (_ bv5 64)) true))))))\n(assert\n (let ((?x236151 (bvadd unconstrained_ret_mbrtowc_5965_64 unconstrained_ret_mbrtowc_6123_64)))\n (let ((?x180605 (bvadd ?x236151 unconstrained_ret_mbrtowc_6285_64)))\n (let ((?x244234 (bvadd ?x180605 unconstrained_ret_mbrtowc_6482_64)))\n (let ((?x112916 (bvadd ?x244234 (_ bv16 64))))\n (and (distinct ?x112916 (_ bv6 64)) true))))))\n(check-sat)\n",
    "time": 100.00028800964355,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=4, tm_hour=14, tm_min=32, tm_sec=33, tm_wday=4, tm_yday=339, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            300.00763726234436
        ]
    }
}