{
    "filename": "fold",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun mem_6_1702_8 () (_ BitVec 8))\n(declare-fun strlen_3691_64 () (_ BitVec 64))\n(declare-fun mem_9_1705_8 () (_ BitVec 8))\n(declare-fun mem_8_1704_8 () (_ BitVec 8))\n(declare-fun unconstrained_ret_mbrtowc_6112_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_5955_64 () (_ BitVec 64))\n(assert\n (let ((?x15100 ((_ extract 5 0) mem_6_1702_8)))\n (let (($x126795 (bvule ?x15100 (_ bv39 6))))\n (let ((?x16127 ((_ extract 7 6) mem_6_1702_8)))\n (let (($x147953 (= (_ bv0 2) ?x16127)))\n (let (($x117065 (and $x147953 $x126795)))\n (let ((?x33763 (ite $x117065 (_ bv2 8) (_ bv1 8))))\n (let (($x89962 (bvule (_ bv39 8) mem_6_1702_8)))\n (let ((?x160075 (ite $x89962 ?x33763 (_ bv255 8))))\n (let (($x131084 (= (_ bv39 8) mem_6_1702_8)))\n (let ((?x57941 (ite $x131084 (_ bv0 8) ?x160075)))\n (let (($x107615 (= (_ bv0 8) ?x57941)))\n (let (($x195467 (not $x107615)))\n (let (($x186569 (or $x131084 $x89962)))\n (let ((?x42551 (ite $x186569 (_ bv0 8) (_ bv255 8))))\n (let (($x215307 (= (_ bv0 8) ?x42551)))\n (let (($x47470 (not $x215307)))\n (or $x47470 $x195467))))))))))))))))))\n(assert\n (let ((?x207070 ((_ extract 6 0) mem_6_1702_8)))\n (let (($x256328 (bvule ?x207070 (_ bv126 7))))\n (let (($x59646 (not $x256328)))\n (let ((?x157198 ((_ extract 7 7) mem_6_1702_8)))\n (let (($x133019 (= (_ bv0 1) ?x157198)))\n (let (($x45770 (not $x133019)))\n (or $x45770 $x59646))))))))\n(assert\n (let (($x42768 (= (_ bv0 8) mem_9_1705_8)))\n (let ((?x248513 (ite $x42768 (_ bv9 64) (_ bv12 64))))\n (let (($x151992 (= (_ bv0 8) mem_8_1704_8)))\n (let ((?x80078 (ite $x151992 (_ bv8 64) ?x248513)))\n (let (($x177658 (= (_ bv0 8) mem_6_1702_8)))\n (let ((?x69301 (ite $x177658 (_ bv6 64) ?x80078)))\n (= ?x69301 strlen_3691_64))))))))\n(assert\n (bvule (_ bv8 64) strlen_3691_64))\n(assert\n (let (($x148801 (= (_ bv10 64) strlen_3691_64)))\n (not $x148801)))\n(assert\n (let (($x147732 (= (_ bv11 64) strlen_3691_64)))\n (not $x147732)))\n(assert\n (let (($x164176 (= (_ bv12 64) strlen_3691_64)))\n (not $x164176)))\n(assert\n (let (($x261959 (= (_ bv13 64) strlen_3691_64)))\n (not $x261959)))\n(assert\n (let (($x159473 (= (_ bv14 64) strlen_3691_64)))\n (not $x159473)))\n(assert\n (let (($x33842 (= (_ bv15 64) strlen_3691_64)))\n (not $x33842)))\n(assert\n (let (($x181063 (= (_ bv16 64) strlen_3691_64)))\n (not $x181063)))\n(assert\n (let (($x95241 (bvule (_ bv17 64) strlen_3691_64)))\n (not $x95241)))\n(assert\n (let (($x179551 (= (_ bv0 64) unconstrained_ret_mbrtowc_6112_64)))\n (not $x179551)))\n(assert\n (let (($x169831 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_6112_64)))\n (not $x169831)))\n(assert\n (let (($x192330 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_6112_64)))\n (not $x192330)))\n(assert\n (let (($x4131 (= (_ bv0 64) unconstrained_ret_mbrtowc_5955_64)))\n (not $x4131)))\n(assert\n (let (($x242610 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_5955_64)))\n (not $x242610)))\n(assert\n (let (($x252945 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_5955_64)))\n (not $x252945)))\n(assert\n (let ((?x147126 (bvadd (_ bv16 64) unconstrained_ret_mbrtowc_5955_64)))\n (let ((?x267726 (bvadd ?x147126 unconstrained_ret_mbrtowc_6112_64)))\n (let (($x252773 (bvule strlen_3691_64 ?x267726)))\n (not $x252773)))))\n(assert\n (let ((?x175991 ((_ extract 3 0) unconstrained_ret_mbrtowc_6112_64)))\n (let ((?x93043 ((_ extract 3 0) unconstrained_ret_mbrtowc_5955_64)))\n (let ((?x188243 (bvadd ?x93043 ?x175991)))\n (bvule ?x188243 (_ bv8 4))))))\n(assert\n (let ((?x55339 (bvadd unconstrained_ret_mbrtowc_5955_64 unconstrained_ret_mbrtowc_6112_64)))\n (let ((?x5991 (bvadd ?x55339 (_ bv16 64))))\n (let (($x220395 (and (distinct (_ bv3 64) ?x5991) true)))\n (let (($x100758 (and (distinct (_ bv8 64) ?x5991) true)))\n (let (($x11824 (and (distinct (_ bv2 64) ?x5991) true)))\n (let (($x177859 (and (distinct (_ bv1 64) ?x5991) true)))\n (let (($x272586 (and (distinct (_ bv0 64) ?x5991) true)))\n (and $x272586 $x177859 $x11824 $x100758 $x220395)))))))))\n(assert\n (let ((?x55339 (bvadd unconstrained_ret_mbrtowc_5955_64 unconstrained_ret_mbrtowc_6112_64)))\n (let ((?x5991 (bvadd ?x55339 (_ bv16 64))))\n (and (distinct ?x5991 (_ bv7 64)) true))))\n(assert\n (let ((?x55339 (bvadd unconstrained_ret_mbrtowc_5955_64 unconstrained_ret_mbrtowc_6112_64)))\n (let ((?x5991 (bvadd ?x55339 (_ bv16 64))))\n (and (distinct ?x5991 (_ bv5 64)) true))))\n(assert\n (let ((?x55339 (bvadd unconstrained_ret_mbrtowc_5955_64 unconstrained_ret_mbrtowc_6112_64)))\n (let ((?x5991 (bvadd ?x55339 (_ bv16 64))))\n (and (distinct ?x5991 (_ bv4 64)) true))))\n(assert\n (let ((?x55339 (bvadd unconstrained_ret_mbrtowc_5955_64 unconstrained_ret_mbrtowc_6112_64)))\n (let ((?x5991 (bvadd ?x55339 (_ bv16 64))))\n (and (distinct ?x5991 (_ bv6 64)) true))))\n(check-sat)\n",
    "time": 1.2140073776245117,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=4, tm_hour=14, tm_min=5, tm_sec=10, tm_wday=4, tm_yday=339, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            0.9532253742218018
        ]
    }
}