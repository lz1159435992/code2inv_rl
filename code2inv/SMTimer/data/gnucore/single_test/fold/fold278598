{
    "filename": "fold",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun mem_6_1702_8 () (_ BitVec 8))\n(declare-fun strlen_3691_64 () (_ BitVec 64))\n(declare-fun mem_9_1705_8 () (_ BitVec 8))\n(declare-fun mem_8_1704_8 () (_ BitVec 8))\n(declare-fun unconstrained_ret_mbrtowc_8214_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_8529_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_8364_64 () (_ BitVec 64))\n(assert\n (let ((?x15100 ((_ extract 5 0) mem_6_1702_8)))\n (let (($x126795 (bvule ?x15100 (_ bv39 6))))\n (let ((?x16127 ((_ extract 7 6) mem_6_1702_8)))\n (let (($x147953 (= (_ bv0 2) ?x16127)))\n (let (($x117065 (and $x147953 $x126795)))\n (let ((?x33763 (ite $x117065 (_ bv2 8) (_ bv1 8))))\n (let (($x89962 (bvule (_ bv39 8) mem_6_1702_8)))\n (let ((?x160075 (ite $x89962 ?x33763 (_ bv255 8))))\n (let (($x131084 (= (_ bv39 8) mem_6_1702_8)))\n (let ((?x57941 (ite $x131084 (_ bv0 8) ?x160075)))\n (let (($x107615 (= (_ bv0 8) ?x57941)))\n (let (($x195467 (not $x107615)))\n (let (($x186569 (or $x131084 $x89962)))\n (let ((?x42551 (ite $x186569 (_ bv0 8) (_ bv255 8))))\n (let (($x215307 (= (_ bv0 8) ?x42551)))\n (let (($x47470 (not $x215307)))\n (or $x47470 $x195467))))))))))))))))))\n(assert\n (let ((?x207070 ((_ extract 6 0) mem_6_1702_8)))\n (let (($x256328 (bvule ?x207070 (_ bv126 7))))\n (let (($x59646 (not $x256328)))\n (let ((?x157198 ((_ extract 7 7) mem_6_1702_8)))\n (let (($x133019 (= (_ bv0 1) ?x157198)))\n (let (($x45770 (not $x133019)))\n (or $x45770 $x59646))))))))\n(assert\n (let (($x42768 (= (_ bv0 8) mem_9_1705_8)))\n (let ((?x248513 (ite $x42768 (_ bv9 64) (_ bv12 64))))\n (let (($x151992 (= (_ bv0 8) mem_8_1704_8)))\n (let ((?x80078 (ite $x151992 (_ bv8 64) ?x248513)))\n (let (($x177658 (= (_ bv0 8) mem_6_1702_8)))\n (let ((?x69301 (ite $x177658 (_ bv6 64) ?x80078)))\n (= ?x69301 strlen_3691_64))))))))\n(assert\n (bvule (_ bv8 64) strlen_3691_64))\n(assert\n (let (($x148801 (= (_ bv10 64) strlen_3691_64)))\n (not $x148801)))\n(assert\n (let (($x147732 (= (_ bv11 64) strlen_3691_64)))\n (not $x147732)))\n(assert\n (let (($x164176 (= (_ bv12 64) strlen_3691_64)))\n (not $x164176)))\n(assert\n (let (($x261959 (= (_ bv13 64) strlen_3691_64)))\n (not $x261959)))\n(assert\n (let (($x159473 (= (_ bv14 64) strlen_3691_64)))\n (not $x159473)))\n(assert\n (let (($x33842 (= (_ bv15 64) strlen_3691_64)))\n (not $x33842)))\n(assert\n (let (($x181063 (= (_ bv16 64) strlen_3691_64)))\n (not $x181063)))\n(assert\n (let (($x82044 (= (_ bv17 64) strlen_3691_64)))\n (not $x82044)))\n(assert\n (let (($x114680 (= (_ bv18 64) strlen_3691_64)))\n (not $x114680)))\n(assert\n (let (($x244177 (= (_ bv19 64) strlen_3691_64)))\n (not $x244177)))\n(assert\n (let (($x223108 (bvule (_ bv20 64) strlen_3691_64)))\n (not $x223108)))\n(assert\n (let (($x239906 (= (_ bv0 64) unconstrained_ret_mbrtowc_8214_64)))\n (not $x239906)))\n(assert\n (let (($x214126 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_8214_64)))\n (not $x214126)))\n(assert\n (let (($x29555 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_8214_64)))\n (not $x29555)))\n(assert\n (let (($x114467 (= (_ bv0 64) unconstrained_ret_mbrtowc_8529_64)))\n (not $x114467)))\n(assert\n (let (($x41869 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_8529_64)))\n (not $x41869)))\n(assert\n (let (($x227079 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_8529_64)))\n (not $x227079)))\n(assert\n (let (($x131885 (= (_ bv0 64) unconstrained_ret_mbrtowc_8364_64)))\n (not $x131885)))\n(assert\n (let (($x118595 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_8364_64)))\n (not $x118595)))\n(assert\n (let (($x103717 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_8364_64)))\n (not $x103717)))\n(assert\n (let ((?x183353 (bvadd (_ bv26 64) unconstrained_ret_mbrtowc_8214_64)))\n (let ((?x218662 (bvadd ?x183353 unconstrained_ret_mbrtowc_8364_64)))\n (let ((?x251875 (bvadd ?x218662 unconstrained_ret_mbrtowc_8529_64)))\n (let (($x134212 (bvule strlen_3691_64 ?x251875)))\n (not $x134212))))))\n(assert\n (let ((?x183353 (bvadd (_ bv26 64) unconstrained_ret_mbrtowc_8214_64)))\n (let ((?x218662 (bvadd ?x183353 unconstrained_ret_mbrtowc_8364_64)))\n (let ((?x251875 (bvadd ?x218662 unconstrained_ret_mbrtowc_8529_64)))\n (let ((?x90598 ((_ extract 63 4) ?x251875)))\n (= (_ bv0 60) ?x90598))))))\n(assert\n (let ((?x247068 ((_ extract 3 0) unconstrained_ret_mbrtowc_8529_64)))\n (let ((?x162548 ((_ extract 3 0) unconstrained_ret_mbrtowc_8364_64)))\n (let ((?x255779 (bvadd (bvadd (bvadd (_ bv10 4) ((_ extract 3 0) unconstrained_ret_mbrtowc_8214_64)) ?x162548) ?x247068)))\n (bvule ?x255779 (_ bv8 4))))))\n(assert\n (let ((?x145885 (bvadd unconstrained_ret_mbrtowc_8214_64 unconstrained_ret_mbrtowc_8364_64)))\n (let ((?x158900 (bvadd ?x145885 unconstrained_ret_mbrtowc_8529_64)))\n (let ((?x96376 (bvadd ?x158900 (_ bv26 64))))\n (let (($x123245 (and (distinct (_ bv0 64) ?x96376) true)))\n (let (($x273407 (and (distinct (_ bv8 64) ?x96376) true)))\n (let (($x230848 (and (distinct (_ bv7 64) ?x96376) true)))\n (and $x230848 $x273407 $x123245))))))))\n(assert\n (let ((?x145885 (bvadd unconstrained_ret_mbrtowc_8214_64 unconstrained_ret_mbrtowc_8364_64)))\n (let ((?x158900 (bvadd ?x145885 unconstrained_ret_mbrtowc_8529_64)))\n (let ((?x96376 (bvadd ?x158900 (_ bv26 64))))\n (and (distinct ?x96376 (_ bv3 64)) true)))))\n(assert\n (let ((?x145885 (bvadd unconstrained_ret_mbrtowc_8214_64 unconstrained_ret_mbrtowc_8364_64)))\n (let ((?x158900 (bvadd ?x145885 unconstrained_ret_mbrtowc_8529_64)))\n (let ((?x96376 (bvadd ?x158900 (_ bv26 64))))\n (and (distinct ?x96376 (_ bv4 64)) true)))))\n(assert\n (let ((?x145885 (bvadd unconstrained_ret_mbrtowc_8214_64 unconstrained_ret_mbrtowc_8364_64)))\n (let ((?x158900 (bvadd ?x145885 unconstrained_ret_mbrtowc_8529_64)))\n (let ((?x96376 (bvadd ?x158900 (_ bv26 64))))\n (and (distinct ?x96376 (_ bv6 64)) true)))))\n(assert\n (let ((?x145885 (bvadd unconstrained_ret_mbrtowc_8214_64 unconstrained_ret_mbrtowc_8364_64)))\n (let ((?x158900 (bvadd ?x145885 unconstrained_ret_mbrtowc_8529_64)))\n (let ((?x96376 (bvadd ?x158900 (_ bv26 64))))\n (and (distinct ?x96376 (_ bv2 64)) true)))))\n(assert\n (let ((?x145885 (bvadd unconstrained_ret_mbrtowc_8214_64 unconstrained_ret_mbrtowc_8364_64)))\n (let ((?x158900 (bvadd ?x145885 unconstrained_ret_mbrtowc_8529_64)))\n (let ((?x96376 (bvadd ?x158900 (_ bv26 64))))\n (and (distinct ?x96376 (_ bv1 64)) true)))))\n(assert\n (let ((?x145885 (bvadd unconstrained_ret_mbrtowc_8214_64 unconstrained_ret_mbrtowc_8364_64)))\n (let ((?x158900 (bvadd ?x145885 unconstrained_ret_mbrtowc_8529_64)))\n (let ((?x96376 (bvadd ?x158900 (_ bv26 64))))\n (and (distinct ?x96376 (_ bv5 64)) true)))))\n(check-sat)\n",
    "time": 83.6349036693573,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=4, tm_hour=15, tm_min=58, tm_sec=9, tm_wday=4, tm_yday=339, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            12.888157367706299
        ]
    }
}