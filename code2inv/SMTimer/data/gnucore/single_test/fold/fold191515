{
    "filename": "fold",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun unconstrained_ret_mbrtowc_5983_64 () (_ BitVec 64))\n(declare-fun mem_6_1702_8 () (_ BitVec 8))\n(declare-fun strlen_3691_64 () (_ BitVec 64))\n(declare-fun mem_c_1708_8 () (_ BitVec 8))\n(declare-fun mem_b_1707_8 () (_ BitVec 8))\n(declare-fun mem_a_1706_8 () (_ BitVec 8))\n(declare-fun mem_9_1705_8 () (_ BitVec 8))\n(declare-fun mem_8_1704_8 () (_ BitVec 8))\n(declare-fun unconstrained_ret_mbrtowc_6146_64 () (_ BitVec 64))\n(assert\n (let (($x108089 (= (_ bv0 64) unconstrained_ret_mbrtowc_5983_64)))\n (not $x108089)))\n(assert\n (let (($x11769 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_5983_64)))\n (not $x11769)))\n(assert\n (let (($x253775 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_5983_64)))\n (not $x253775)))\n(assert\n (let ((?x15100 ((_ extract 5 0) mem_6_1702_8)))\n (let (($x126795 (bvule ?x15100 (_ bv39 6))))\n (let ((?x16127 ((_ extract 7 6) mem_6_1702_8)))\n (let (($x147953 (= (_ bv0 2) ?x16127)))\n (let (($x117065 (and $x147953 $x126795)))\n (let ((?x33763 (ite $x117065 (_ bv2 8) (_ bv1 8))))\n (let (($x89962 (bvule (_ bv39 8) mem_6_1702_8)))\n (let ((?x160075 (ite $x89962 ?x33763 (_ bv255 8))))\n (let (($x131084 (= (_ bv39 8) mem_6_1702_8)))\n (let ((?x57941 (ite $x131084 (_ bv0 8) ?x160075)))\n (let (($x107615 (= (_ bv0 8) ?x57941)))\n (let (($x195467 (not $x107615)))\n (let (($x186569 (or $x131084 $x89962)))\n (let ((?x42551 (ite $x186569 (_ bv0 8) (_ bv255 8))))\n (let (($x215307 (= (_ bv0 8) ?x42551)))\n (let (($x47470 (not $x215307)))\n (or $x47470 $x195467))))))))))))))))))\n(assert\n (let ((?x207070 ((_ extract 6 0) mem_6_1702_8)))\n (let (($x256328 (bvule ?x207070 (_ bv126 7))))\n (let (($x59646 (not $x256328)))\n (let ((?x157198 ((_ extract 7 7) mem_6_1702_8)))\n (let (($x133019 (= (_ bv0 1) ?x157198)))\n (let (($x45770 (not $x133019)))\n (or $x45770 $x59646))))))))\n(assert\n (let (($x157334 (= (_ bv0 8) mem_c_1708_8)))\n (let ((?x201252 (ite $x157334 (_ bv12 64) (_ bv13 64))))\n (let (($x43898 (= (_ bv0 8) mem_b_1707_8)))\n (let ((?x150827 (ite $x43898 (_ bv11 64) ?x201252)))\n (let (($x155829 (= (_ bv0 8) mem_a_1706_8)))\n (let ((?x159361 (ite $x155829 (_ bv10 64) ?x150827)))\n (let (($x42768 (= (_ bv0 8) mem_9_1705_8)))\n (let ((?x251832 (ite $x42768 (_ bv9 64) ?x159361)))\n (let (($x151992 (= (_ bv0 8) mem_8_1704_8)))\n (let ((?x39382 (ite $x151992 (_ bv8 64) ?x251832)))\n (let (($x177658 (= (_ bv0 8) mem_6_1702_8)))\n (let ((?x150493 (ite $x177658 (_ bv6 64) ?x39382)))\n (= ?x150493 strlen_3691_64))))))))))))))\n(assert\n (bvule (_ bv8 64) strlen_3691_64))\n(assert\n (let (($x261959 (= (_ bv13 64) strlen_3691_64)))\n (not $x261959)))\n(assert\n (let (($x159473 (= (_ bv14 64) strlen_3691_64)))\n (not $x159473)))\n(assert\n (let (($x33842 (= (_ bv15 64) strlen_3691_64)))\n (not $x33842)))\n(assert\n (let (($x181063 (= (_ bv16 64) strlen_3691_64)))\n (not $x181063)))\n(assert\n (let (($x82044 (= (_ bv17 64) strlen_3691_64)))\n (not $x82044)))\n(assert\n (let (($x148941 (bvule (_ bv18 64) strlen_3691_64)))\n (not $x148941)))\n(assert\n (let (($x112958 (= (_ bv0 64) unconstrained_ret_mbrtowc_6146_64)))\n (not $x112958)))\n(assert\n (let (($x94534 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_6146_64)))\n (not $x94534)))\n(assert\n (let (($x15707 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_6146_64)))\n (not $x15707)))\n(assert\n (let ((?x218376 (bvadd (_ bv17 64) unconstrained_ret_mbrtowc_5983_64)))\n (let ((?x19813 (bvadd ?x218376 unconstrained_ret_mbrtowc_6146_64)))\n (let (($x185967 (bvule strlen_3691_64 ?x19813)))\n (not $x185967)))))\n(assert\n (let ((?x218378 ((_ extract 3 0) unconstrained_ret_mbrtowc_6146_64)))\n (let ((?x65087 ((_ extract 3 0) unconstrained_ret_mbrtowc_5983_64)))\n (let ((?x234063 (bvadd (_ bv1 4) ?x65087)))\n (let ((?x261487 (bvadd ?x234063 ?x218378)))\n (bvule ?x261487 (_ bv11 4)))))))\n(assert\n (let ((?x247543 (bvadd unconstrained_ret_mbrtowc_5983_64 unconstrained_ret_mbrtowc_6146_64)))\n (let ((?x228095 (bvadd ?x247543 (_ bv17 64))))\n (let (($x137796 (and (distinct (_ bv11 64) ?x228095) true)))\n (let (($x75446 (and (distinct (_ bv0 64) ?x228095) true)))\n (let (($x215982 (and (distinct (_ bv10 64) ?x228095) true)))\n (and $x215982 $x75446 $x137796)))))))\n(assert\n (let ((?x247543 (bvadd unconstrained_ret_mbrtowc_5983_64 unconstrained_ret_mbrtowc_6146_64)))\n (let ((?x228095 (bvadd ?x247543 (_ bv17 64))))\n (and (distinct ?x228095 (_ bv4 64)) true))))\n(assert\n (let ((?x247543 (bvadd unconstrained_ret_mbrtowc_5983_64 unconstrained_ret_mbrtowc_6146_64)))\n (let ((?x228095 (bvadd ?x247543 (_ bv17 64))))\n (and (distinct ?x228095 (_ bv8 64)) true))))\n(assert\n (let ((?x247543 (bvadd unconstrained_ret_mbrtowc_5983_64 unconstrained_ret_mbrtowc_6146_64)))\n (let ((?x228095 (bvadd ?x247543 (_ bv17 64))))\n (and (distinct ?x228095 (_ bv3 64)) true))))\n(assert\n (let ((?x247543 (bvadd unconstrained_ret_mbrtowc_5983_64 unconstrained_ret_mbrtowc_6146_64)))\n (let ((?x228095 (bvadd ?x247543 (_ bv17 64))))\n (and (distinct ?x228095 (_ bv5 64)) true))))\n(assert\n (let ((?x247543 (bvadd unconstrained_ret_mbrtowc_5983_64 unconstrained_ret_mbrtowc_6146_64)))\n (let ((?x228095 (bvadd ?x247543 (_ bv17 64))))\n (and (distinct ?x228095 (_ bv9 64)) true))))\n(assert\n (let ((?x247543 (bvadd unconstrained_ret_mbrtowc_5983_64 unconstrained_ret_mbrtowc_6146_64)))\n (let ((?x228095 (bvadd ?x247543 (_ bv17 64))))\n (and (distinct ?x228095 (_ bv6 64)) true))))\n(assert\n (let ((?x247543 (bvadd unconstrained_ret_mbrtowc_5983_64 unconstrained_ret_mbrtowc_6146_64)))\n (let ((?x228095 (bvadd ?x247543 (_ bv17 64))))\n (and (distinct ?x228095 (_ bv7 64)) true))))\n(assert\n (let ((?x247543 (bvadd unconstrained_ret_mbrtowc_5983_64 unconstrained_ret_mbrtowc_6146_64)))\n (let ((?x228095 (bvadd ?x247543 (_ bv17 64))))\n (and (distinct ?x228095 (_ bv1 64)) true))))\n(assert\n (let ((?x247543 (bvadd unconstrained_ret_mbrtowc_5983_64 unconstrained_ret_mbrtowc_6146_64)))\n (let ((?x228095 (bvadd ?x247543 (_ bv17 64))))\n (and (distinct ?x228095 (_ bv2 64)) true))))\n(check-sat)\n",
    "time": 1.6960763931274414,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=4, tm_hour=14, tm_min=6, tm_sec=37, tm_wday=4, tm_yday=339, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            1.8407979011535645
        ]
    }
}