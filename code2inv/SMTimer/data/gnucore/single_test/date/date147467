{
    "filename": "date",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun mem_0_1723_1024 () (_ BitVec 1024))\n(declare-fun strncmp_ret_1875_64 () (_ BitVec 64))\n(declare-fun strncmp_ret_2517_64 () (_ BitVec 64))\n(assert\n (let ((?x109942 ((_ extract 975 968) mem_0_1723_1024)))\n (let (($x11754 (= ?x109942 (_ bv0 8))))\n (not $x11754))))\n(assert\n (let (($x420156 (= strncmp_ret_1875_64 (_ bv0 64))))\n (let (($x1657456 (not $x420156)))\n (let ((?x152506 ((_ extract 967 960) mem_0_1723_1024)))\n (let (($x91066 (= ?x152506 (_ bv0 8))))\n (let (($x1277801 (not $x91066)))\n (let ((?x28654 ((_ extract 1007 1000) mem_0_1723_1024)))\n (let (($x1293494 (= ?x28654 (_ bv99 8))))\n (let (($x752931 (not $x1293494)))\n (let ((?x317643 ((_ extract 999 992) mem_0_1723_1024)))\n (let (($x146105 (= ?x317643 (_ bv111 8))))\n (let (($x278632 (not $x146105)))\n (let ((?x59952 ((_ extract 1015 1008) mem_0_1723_1024)))\n (let (($x1011610 (= ?x59952 (_ bv101 8))))\n (let (($x255903 (not $x1011610)))\n (let ((?x182113 ((_ extract 1023 1016) mem_0_1723_1024)))\n (let (($x272801 (= ?x182113 (_ bv115 8))))\n (let (($x73071 (not $x272801)))\n (let ((?x193723 ((_ extract 991 984) mem_0_1723_1024)))\n (let (($x154900 (= ?x193723 (_ bv110 8))))\n (let (($x71735 (not $x154900)))\n (let ((?x109942 ((_ extract 975 968) mem_0_1723_1024)))\n (let (($x127140 (= ?x109942 (_ bv115 8))))\n (let (($x53525 (not $x127140)))\n (let ((?x36717 ((_ extract 983 976) mem_0_1723_1024)))\n (let (($x301548 (= ?x36717 (_ bv100 8))))\n (let (($x42568 (not $x301548)))\n (let (($x74778 (or $x42568 $x53525 $x71735 $x73071 $x255903 $x278632 $x752931 $x1277801 $x1657456)))\n (let (($x1130268 (not $x74778)))\n (let (($x1871413 (or $x42568 $x53525 $x71735 $x73071 $x255903 $x278632 $x752931 $x1277801)))\n (let (($x730956 (not $x1871413)))\n (let (($x1359851 (= strncmp_ret_1875_64 (_ bv1 64))))\n (let (($x1912907 (not $x1359851)))\n (let (($x62665 (or $x1912907 $x730956)))\n (let (($x16549 (not $x62665)))\n (or $x16549 $x1130268))))))))))))))))))))))))))))))))))))\n(assert\n (let ((?x165092 ((_ extract 31 0) strncmp_ret_1875_64)))\n (= ?x165092 (_ bv0 32))))\n(assert\n (let ((?x152506 ((_ extract 967 960) mem_0_1723_1024)))\n (let (($x91066 (= ?x152506 (_ bv0 8))))\n (let (($x1277801 (not $x91066)))\n (let ((?x28654 ((_ extract 1007 1000) mem_0_1723_1024)))\n (let (($x1293494 (= ?x28654 (_ bv99 8))))\n (let (($x752931 (not $x1293494)))\n (let ((?x317643 ((_ extract 999 992) mem_0_1723_1024)))\n (let (($x146105 (= ?x317643 (_ bv111 8))))\n (let (($x278632 (not $x146105)))\n (let ((?x59952 ((_ extract 1015 1008) mem_0_1723_1024)))\n (let (($x1011610 (= ?x59952 (_ bv101 8))))\n (let (($x255903 (not $x1011610)))\n (let ((?x182113 ((_ extract 1023 1016) mem_0_1723_1024)))\n (let (($x272801 (= ?x182113 (_ bv115 8))))\n (let (($x73071 (not $x272801)))\n (let ((?x193723 ((_ extract 991 984) mem_0_1723_1024)))\n (let (($x154900 (= ?x193723 (_ bv110 8))))\n (let (($x71735 (not $x154900)))\n (let ((?x109942 ((_ extract 975 968) mem_0_1723_1024)))\n (let (($x127140 (= ?x109942 (_ bv115 8))))\n (let (($x53525 (not $x127140)))\n (let ((?x36717 ((_ extract 983 976) mem_0_1723_1024)))\n (let (($x301548 (= ?x36717 (_ bv100 8))))\n (let (($x42568 (not $x301548)))\n (let (($x1871413 (or $x42568 $x53525 $x71735 $x73071 $x255903 $x278632 $x752931 $x1277801)))\n (let (($x730956 (not $x1871413)))\n (let (($x17909 (= strncmp_ret_2517_64 (_ bv1 64))))\n (let (($x796507 (not $x17909)))\n (let (($x1601040 (or $x796507 $x730956)))\n (let (($x1143675 (not $x1601040)))\n (let (($x1063335 (= strncmp_ret_2517_64 (_ bv0 64))))\n (let (($x1720289 (not $x1063335)))\n (let (($x1708338 (or $x42568 $x53525 $x71735 $x73071 $x255903 $x278632 $x752931 $x1277801 $x1720289)))\n (let (($x139618 (not $x1708338)))\n (or $x139618 $x1143675))))))))))))))))))))))))))))))))))))\n(assert\n (let ((?x1028105 ((_ extract 31 0) strncmp_ret_2517_64)))\n (= ?x1028105 (_ bv0 32))))\n(assert\n (let ((?x317643 ((_ extract 999 992) mem_0_1723_1024)))\n (let ((?x193723 ((_ extract 991 984) mem_0_1723_1024)))\n (let ((?x36717 ((_ extract 983 976) mem_0_1723_1024)))\n (let ((?x109942 ((_ extract 975 968) mem_0_1723_1024)))\n (let ((?x43921 (concat ?x109942 ?x36717 ?x193723 ?x317643)))\n (bvsle (_ bv13 32) ?x43921)))))))\n(assert\n (let ((?x228899 ((_ extract 903 896) mem_0_1723_1024)))\n (let ((?x52494 ((_ extract 895 888) mem_0_1723_1024)))\n (let ((?x8430 ((_ extract 887 880) mem_0_1723_1024)))\n (let ((?x176754 ((_ extract 879 872) mem_0_1723_1024)))\n (let ((?x1368231 ((_ extract 879 879) mem_0_1723_1024)))\n (let ((?x118636 (concat ?x1368231 ?x1368231 ?x1368231 ?x1368231 ?x1368231 ?x1368231 ?x1368231 ?x1368231 ?x1368231 ?x1368231 ?x1368231 ?x1368231 ?x1368231 ?x1368231 ?x1368231 ?x1368231 ?x1368231 ?x1368231 ?x1368231 ?x1368231 ?x1368231 ?x1368231 ?x1368231 ?x1368231 ?x1368231 ?x1368231 ?x1368231 ?x1368231 ?x1368231 ?x1368231 ?x1368231 ?x1368231 ?x176754 ?x8430 ?x52494 ?x228899)))\n (let ((?x283289 (bvmul (_ bv1374389535 64) ?x118636)))\n (let ((?x937751 ((_ extract 63 63) ?x283289)))\n (let ((?x248475 (concat (_ bv0 31) ?x937751)))\n (let ((?x1761706 (bvmul (_ bv100 32) ?x248475)))\n (let ((?x938817 (bvashr ?x283289 (_ bv37 64))))\n (let ((?x1218127 ((_ extract 31 0) ?x938817)))\n (let ((?x613313 (bvmul (_ bv100 32) ?x1218127)))\n (let ((?x1952925 (concat (_ bv0 32) (bvadd ?x613313 ?x1761706))))\n (let ((?x929775 (concat (_ bv0 32) ?x176754 ?x8430 ?x52494 ?x228899)))\n (let (($x1609079 (= ((_ extract 31 31) (bvadd ?x929775 (bvmul (_ bv18446744073709551615 64) ?x1952925))) (_ bv0 1))))\n (not $x1609079))))))))))))))))))\n(assert\n (let ((?x228899 ((_ extract 903 896) mem_0_1723_1024)))\n (let ((?x52494 ((_ extract 895 888) mem_0_1723_1024)))\n (let ((?x8430 ((_ extract 887 880) mem_0_1723_1024)))\n (let ((?x176754 ((_ extract 879 872) mem_0_1723_1024)))\n (let ((?x1594454 (concat ?x176754 ?x8430 ?x52494 ?x228899)))\n (bvsle (_ bv4294965396 32) ?x1594454)))))))\n(assert\n (let ((?x228899 ((_ extract 903 896) mem_0_1723_1024)))\n (let ((?x52494 ((_ extract 895 888) mem_0_1723_1024)))\n (let ((?x8430 ((_ extract 887 880) mem_0_1723_1024)))\n (let ((?x176754 ((_ extract 879 872) mem_0_1723_1024)))\n (let ((?x1368231 ((_ extract 879 879) mem_0_1723_1024)))\n (let ((?x118636 (concat ?x1368231 ?x1368231 ?x1368231 ?x1368231 ?x1368231 ?x1368231 ?x1368231 ?x1368231 ?x1368231 ?x1368231 ?x1368231 ?x1368231 ?x1368231 ?x1368231 ?x1368231 ?x1368231 ?x1368231 ?x1368231 ?x1368231 ?x1368231 ?x1368231 ?x1368231 ?x1368231 ?x1368231 ?x1368231 ?x1368231 ?x1368231 ?x1368231 ?x1368231 ?x1368231 ?x1368231 ?x1368231 ?x176754 ?x8430 ?x52494 ?x228899)))\n (let ((?x283289 (bvmul (_ bv1374389535 64) ?x118636)))\n (let ((?x937751 ((_ extract 63 63) ?x283289)))\n (let ((?x248475 (concat (_ bv0 31) ?x937751)))\n (let ((?x938817 (bvashr ?x283289 (_ bv37 64))))\n (let ((?x1218127 ((_ extract 31 0) ?x938817)))\n (let ((?x642608 (bvadd ?x1218127 ?x248475)))\n (let ((?x867661 (bvadd (_ bv19 32) (bvadd ?x642608 (ite (bvsle (bvadd (_ bv19 32) ?x642608) (_ bv0 32)) (_ bv0 32) (_ bv4294967295 32))))))\n (not (= ((_ extract 63 35) (bvmul (_ bv3435973837 64) (concat (_ bv0 32) ?x867661))) (_ bv0 29)))))))))))))))))\n(assert\n (let ((?x59952 ((_ extract 1015 1008) mem_0_1723_1024)))\n (let (($x13460 (= ?x59952 (_ bv0 8))))\n (not $x13460))))\n(assert\n (let ((?x36717 ((_ extract 983 976) mem_0_1723_1024)))\n (let (($x228155 (= ?x36717 (_ bv0 8))))\n (not $x228155))))\n(assert\n (let ((?x182113 ((_ extract 1023 1016) mem_0_1723_1024)))\n (let (($x234975 (= ?x182113 (_ bv0 8))))\n (not $x234975))))\n(assert\n (let ((?x317643 ((_ extract 999 992) mem_0_1723_1024)))\n (let (($x235318 (= ?x317643 (_ bv0 8))))\n (not $x235318))))\n(assert\n (let ((?x193723 ((_ extract 991 984) mem_0_1723_1024)))\n (let (($x236034 (= ?x193723 (_ bv0 8))))\n (not $x236034))))\n(assert\n (let ((?x28654 ((_ extract 1007 1000) mem_0_1723_1024)))\n (let (($x239696 (= ?x28654 (_ bv0 8))))\n (not $x239696))))\n(assert\n (let ((?x152506 ((_ extract 967 960) mem_0_1723_1024)))\n (= ?x152506 (_ bv0 8))))\n(check-sat)\n",
    "time": 9.053682804107666,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=1, tm_hour=4, tm_min=50, tm_sec=52, tm_wday=1, tm_yday=336, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            0.1833341121673584
        ]
    }
}