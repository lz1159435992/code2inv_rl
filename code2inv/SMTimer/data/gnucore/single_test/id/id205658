{
    "filename": "id",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun unconstrained_ret_mbrtowc_3570_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_3300_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_3433_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_3169_64 () (_ BitVec 64))\n(assert\n (let (($x13683 (= (_ bv0 64) unconstrained_ret_mbrtowc_3570_64)))\n (not $x13683)))\n(assert\n (let (($x71381 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_3570_64)))\n (not $x71381)))\n(assert\n (let (($x14128 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_3570_64)))\n (not $x14128)))\n(assert\n (let (($x74701 (= (_ bv0 64) unconstrained_ret_mbrtowc_3300_64)))\n (not $x74701)))\n(assert\n (let (($x64420 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_3300_64)))\n (not $x64420)))\n(assert\n (let (($x79805 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_3300_64)))\n (not $x79805)))\n(assert\n (let (($x18309 (= (_ bv0 64) unconstrained_ret_mbrtowc_3433_64)))\n (not $x18309)))\n(assert\n (let (($x50769 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_3433_64)))\n (not $x50769)))\n(assert\n (let (($x80361 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_3433_64)))\n (not $x80361)))\n(assert\n (let (($x48107 (= (_ bv0 64) unconstrained_ret_mbrtowc_3169_64)))\n (not $x48107)))\n(assert\n (let (($x11947 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_3169_64)))\n (not $x11947)))\n(assert\n (let (($x44420 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_3169_64)))\n (not $x44420)))\n(assert\n (let ((?x15851 (bvadd (_ bv1 64) unconstrained_ret_mbrtowc_3169_64)))\n (let ((?x21282 (bvadd ?x15851 unconstrained_ret_mbrtowc_3300_64)))\n (let ((?x77598 (bvadd ?x21282 unconstrained_ret_mbrtowc_3433_64)))\n (let ((?x20567 (bvadd ?x77598 unconstrained_ret_mbrtowc_3570_64)))\n (let (($x67681 (bvule (_ bv2 64) ?x20567)))\n (not $x67681)))))))\n(assert\n (let ((?x73905 (bvadd (_ bv576460752303357905 64) unconstrained_ret_mbrtowc_3169_64)))\n (let ((?x65775 (bvadd ?x73905 unconstrained_ret_mbrtowc_3300_64)))\n (let ((?x75603 (bvadd ?x65775 unconstrained_ret_mbrtowc_3433_64)))\n (let ((?x71652 (bvadd ?x75603 unconstrained_ret_mbrtowc_3570_64)))\n (bvule (_ bv576460752303357904 64) ?x71652))))))\n(assert\n (let ((?x73905 (bvadd (_ bv576460752303357905 64) unconstrained_ret_mbrtowc_3169_64)))\n (let ((?x65775 (bvadd ?x73905 unconstrained_ret_mbrtowc_3300_64)))\n (let ((?x75603 (bvadd ?x65775 unconstrained_ret_mbrtowc_3433_64)))\n (let ((?x71652 (bvadd ?x75603 unconstrained_ret_mbrtowc_3570_64)))\n (let ((?x52396 ((_ extract 63 59) ?x71652)))\n (= (_ bv0 5) ?x52396)))))))\n(assert\n (let ((?x2880 ((_ extract 58 0) unconstrained_ret_mbrtowc_3570_64)))\n (let ((?x65708 ((_ extract 58 0) unconstrained_ret_mbrtowc_3433_64)))\n (let ((?x30499 ((_ extract 58 0) unconstrained_ret_mbrtowc_3300_64)))\n (let ((?x80637 (bvadd (bvadd (_ bv576460752303357905 59) ((_ extract 58 0) unconstrained_ret_mbrtowc_3169_64)) ?x30499)))\n (let ((?x70885 (bvadd ?x80637 ?x65708)))\n (let ((?x88304 (bvadd ?x70885 ?x2880)))\n (bvule ?x88304 (_ bv576460752303357905 59)))))))))\n(assert\n (let ((?x43116 (bvadd unconstrained_ret_mbrtowc_3169_64 unconstrained_ret_mbrtowc_3300_64)))\n (let ((?x41866 (bvadd ?x43116 unconstrained_ret_mbrtowc_3433_64)))\n (let ((?x64784 (bvadd ?x41866 unconstrained_ret_mbrtowc_3570_64)))\n (let ((?x67603 (bvadd ?x64784 (_ bv576460752303357905 64))))\n (let (($x955 (and (distinct (_ bv576460752303357905 64) ?x67603) true)))\n (let (($x70627 (and (distinct (_ bv576460752303357904 64) ?x67603) true)))\n (and $x70627 $x955))))))))\n(check-sat)\n",
    "time": 100.00048828125,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=12, tm_hour=23, tm_min=19, tm_sec=56, tm_wday=5, tm_yday=347, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            13.650541067123413
        ]
    }
}