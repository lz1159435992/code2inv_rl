{
    "filename": "id",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun unconstrained_ret_mbrtowc_3214_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_3077_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_2941_64 () (_ BitVec 64))\n(declare-fun sym_argv2_1_16 () (_ BitVec 16))\n(declare-fun strlen_1095_64 () (_ BitVec 64))\n(assert\n (let (($x30030 (= (_ bv0 64) unconstrained_ret_mbrtowc_3214_64)))\n (not $x30030)))\n(assert\n (let (($x31745 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_3214_64)))\n (not $x31745)))\n(assert\n (let (($x77669 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_3214_64)))\n (not $x77669)))\n(assert\n (let (($x14705 (= (_ bv0 64) unconstrained_ret_mbrtowc_3077_64)))\n (not $x14705)))\n(assert\n (let (($x52519 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_3077_64)))\n (not $x52519)))\n(assert\n (let (($x65316 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_3077_64)))\n (not $x65316)))\n(assert\n (let (($x50283 (= (_ bv0 64) unconstrained_ret_mbrtowc_2941_64)))\n (not $x50283)))\n(assert\n (let (($x36313 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_2941_64)))\n (not $x36313)))\n(assert\n (let (($x62775 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_2941_64)))\n (not $x62775)))\n(assert\n (let ((?x12639 ((_ extract 13 8) sym_argv2_1_16)))\n (let (($x10819 (bvule ?x12639 (_ bv39 6))))\n (let ((?x12641 ((_ extract 15 14) sym_argv2_1_16)))\n (let (($x12318 (= (_ bv0 2) ?x12641)))\n (let (($x11477 (and $x12318 $x10819)))\n (let ((?x11268 (ite $x11477 (_ bv2 8) (_ bv1 8))))\n (let (($x17051 (= (_ bv0 8) ?x11268)))\n (not $x17051)))))))))\n(assert\n (let ((?x5462 ((_ extract 15 8) sym_argv2_1_16)))\n (= (_ bv92 8) ?x5462)))\n(assert\n (let ((?x16828 ((_ extract 7 0) sym_argv2_1_16)))\n (let (($x21405 (bvule (_ bv39 8) ?x16828)))\n (let (($x210 (= (_ bv39 8) ?x16828)))\n (let (($x20469 (or $x210 $x21405)))\n (let ((?x17061 (ite $x20469 (_ bv0 8) (_ bv255 8))))\n (let (($x19252 (= (_ bv0 8) ?x17061)))\n (let (($x16645 (not $x19252)))\n (let ((?x19896 ((_ extract 5 0) sym_argv2_1_16)))\n (let (($x21456 (bvule ?x19896 (_ bv39 6))))\n (let ((?x15364 ((_ extract 7 6) sym_argv2_1_16)))\n (let (($x17365 (= (_ bv0 2) ?x15364)))\n (let (($x17781 (and $x17365 $x21456)))\n (let ((?x17399 (ite $x17781 (_ bv2 8) (_ bv1 8))))\n (let ((?x17856 (ite $x21405 ?x17399 (_ bv255 8))))\n (let ((?x20786 (ite $x210 (_ bv0 8) ?x17856)))\n (let (($x14454 (= (_ bv0 8) ?x20786)))\n (let (($x20458 (not $x14454)))\n (or $x20458 $x16645)))))))))))))))))))\n(assert\n (let ((?x16760 ((_ extract 6 0) sym_argv2_1_16)))\n (let (($x23512 (bvule ?x16760 (_ bv126 7))))\n (let (($x4916 (not $x23512)))\n (let ((?x21437 ((_ extract 7 7) sym_argv2_1_16)))\n (let (($x16040 (= (_ bv0 1) ?x21437)))\n (let (($x2578 (not $x16040)))\n (or $x2578 $x4916))))))))\n(assert\n (let ((?x38173 (bvadd (_ bv576460752303357904 64) strlen_1095_64)))\n (let ((?x16828 ((_ extract 7 0) sym_argv2_1_16)))\n (let (($x16993 (= (_ bv0 8) ?x16828)))\n (let ((?x13786 (ite $x16993 (_ bv576460752303357905 64) (_ bv576460752303357906 64))))\n (= ?x13786 ?x38173))))))\n(assert\n (let (($x64358 (= (_ bv15 64) strlen_1095_64)))\n (not $x64358)))\n(assert\n (let (($x7590 (bvule (_ bv16 64) strlen_1095_64)))\n (not $x7590)))\n(assert\n (let ((?x53310 (bvadd (_ bv15 64) unconstrained_ret_mbrtowc_2941_64)))\n (let ((?x30979 (bvadd ?x53310 unconstrained_ret_mbrtowc_3077_64)))\n (let ((?x58872 (bvadd ?x30979 unconstrained_ret_mbrtowc_3214_64)))\n (let (($x71783 (bvule strlen_1095_64 ?x58872)))\n (not $x71783))))))\n(assert\n (let ((?x68180 (bvadd (_ bv576460752303357919 64) unconstrained_ret_mbrtowc_2941_64)))\n (let ((?x61976 (bvadd ?x68180 unconstrained_ret_mbrtowc_3077_64)))\n (let ((?x43752 (bvadd ?x61976 unconstrained_ret_mbrtowc_3214_64)))\n (bvule (_ bv576460752303357904 64) ?x43752)))))\n(assert\n (let ((?x68180 (bvadd (_ bv576460752303357919 64) unconstrained_ret_mbrtowc_2941_64)))\n (let ((?x61976 (bvadd ?x68180 unconstrained_ret_mbrtowc_3077_64)))\n (let ((?x43752 (bvadd ?x61976 unconstrained_ret_mbrtowc_3214_64)))\n (let ((?x63994 ((_ extract 63 59) ?x43752)))\n (= (_ bv0 5) ?x63994))))))\n(assert\n (let ((?x54024 ((_ extract 58 0) unconstrained_ret_mbrtowc_3214_64)))\n (let ((?x45555 ((_ extract 58 0) unconstrained_ret_mbrtowc_3077_64)))\n (let ((?x55525 ((_ extract 58 0) unconstrained_ret_mbrtowc_2941_64)))\n (let ((?x39566 (bvadd (_ bv576460752303357919 59) ?x55525)))\n (let ((?x52432 (bvadd ?x39566 ?x45555)))\n (let ((?x41117 (bvadd ?x52432 ?x54024)))\n (bvule ?x41117 (_ bv576460752303357905 59)))))))))\n(assert\n (let ((?x16663 (bvadd unconstrained_ret_mbrtowc_2941_64 unconstrained_ret_mbrtowc_3077_64)))\n (let ((?x16440 (bvadd ?x16663 unconstrained_ret_mbrtowc_3214_64)))\n (let ((?x51605 (bvadd ?x16440 (_ bv576460752303357919 64))))\n (let (($x60176 (and (distinct (_ bv576460752303357905 64) ?x51605) true)))\n (let (($x35420 (and (distinct (_ bv576460752303357904 64) ?x51605) true)))\n (and $x35420 $x60176)))))))\n(check-sat)\n",
    "time": 22.1348774433136,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=12, tm_hour=20, tm_min=51, tm_sec=24, tm_wday=5, tm_yday=347, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            2.03932523727417
        ]
    }
}