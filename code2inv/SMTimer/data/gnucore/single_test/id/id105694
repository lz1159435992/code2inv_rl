{
    "filename": "id",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun unconstrained_ret_mbrtowc_1284_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_1444_64 () (_ BitVec 64))\n(declare-fun sym_argv2_1_16 () (_ BitVec 16))\n(declare-fun strlen_1251_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_1601_64 () (_ BitVec 64))\n(assert\n (let (($x32701 (= (_ bv0 64) unconstrained_ret_mbrtowc_1284_64)))\n (not $x32701)))\n(assert\n (let (($x40540 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1284_64)))\n (not $x40540)))\n(assert\n (let (($x31797 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1284_64)))\n (not $x31797)))\n(assert\n (let (($x43910 (= (_ bv0 64) unconstrained_ret_mbrtowc_1444_64)))\n (not $x43910)))\n(assert\n (let (($x41791 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1444_64)))\n (not $x41791)))\n(assert\n (let (($x46586 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1444_64)))\n (not $x46586)))\n(assert\n (let ((?x12639 ((_ extract 13 8) sym_argv2_1_16)))\n (let (($x10819 (bvule ?x12639 (_ bv39 6))))\n (let ((?x12641 ((_ extract 15 14) sym_argv2_1_16)))\n (let (($x12318 (= (_ bv0 2) ?x12641)))\n (let (($x11477 (and $x12318 $x10819)))\n (let ((?x11268 (ite $x11477 (_ bv2 8) (_ bv1 8))))\n (let (($x17051 (= (_ bv0 8) ?x11268)))\n (not $x17051)))))))))\n(assert\n (let ((?x5462 ((_ extract 15 8) sym_argv2_1_16)))\n (= (_ bv64 8) ?x5462)))\n(assert\n (let ((?x17342 (bvadd (_ bv576460752303357904 64) strlen_1251_64)))\n (let ((?x16828 ((_ extract 7 0) sym_argv2_1_16)))\n (let (($x16993 (= (_ bv0 8) ?x16828)))\n (let ((?x13786 (ite $x16993 (_ bv576460752303357905 64) (_ bv576460752303357906 64))))\n (= ?x13786 ?x17342))))))\n(assert\n (let (($x29035 (= (_ bv0 64) unconstrained_ret_mbrtowc_1601_64)))\n (not $x29035)))\n(assert\n (let (($x46698 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1601_64)))\n (not $x46698)))\n(assert\n (let (($x51370 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1601_64)))\n (not $x51370)))\n(assert\n (let ((?x25605 (bvadd unconstrained_ret_mbrtowc_1284_64 unconstrained_ret_mbrtowc_1444_64)))\n (let ((?x5285 (bvadd ?x25605 unconstrained_ret_mbrtowc_1601_64)))\n (let (($x51666 (bvule strlen_1251_64 ?x5285)))\n (not $x51666)))))\n(assert\n (let ((?x33016 (bvadd (_ bv576460752303357904 64) unconstrained_ret_mbrtowc_1284_64)))\n (let ((?x30061 (bvadd ?x33016 unconstrained_ret_mbrtowc_1444_64)))\n (let ((?x43839 (bvadd ?x30061 unconstrained_ret_mbrtowc_1601_64)))\n (bvule (_ bv576460752303357904 64) ?x43839)))))\n(assert\n (let ((?x33016 (bvadd (_ bv576460752303357904 64) unconstrained_ret_mbrtowc_1284_64)))\n (let ((?x30061 (bvadd ?x33016 unconstrained_ret_mbrtowc_1444_64)))\n (let ((?x43839 (bvadd ?x30061 unconstrained_ret_mbrtowc_1601_64)))\n (let ((?x57128 ((_ extract 63 59) ?x43839)))\n (= (_ bv0 5) ?x57128))))))\n(assert\n (let ((?x53458 ((_ extract 58 0) unconstrained_ret_mbrtowc_1601_64)))\n (let ((?x40342 ((_ extract 58 0) unconstrained_ret_mbrtowc_1444_64)))\n (let ((?x9122 ((_ extract 58 0) unconstrained_ret_mbrtowc_1284_64)))\n (let ((?x10110 (bvadd (_ bv576460752303357904 59) ?x9122)))\n (let ((?x42741 (bvadd ?x10110 ?x40342)))\n (let ((?x47834 (bvadd ?x42741 ?x53458)))\n (bvule ?x47834 (_ bv576460752303357905 59)))))))))\n(assert\n (let ((?x33016 (bvadd (_ bv576460752303357904 64) unconstrained_ret_mbrtowc_1284_64)))\n (let ((?x30061 (bvadd ?x33016 unconstrained_ret_mbrtowc_1444_64)))\n (let ((?x43839 (bvadd ?x30061 unconstrained_ret_mbrtowc_1601_64)))\n (let (($x22252 (and (distinct (_ bv576460752303357905 64) ?x43839) true)))\n (let (($x57029 (and (distinct (_ bv576460752303357904 64) ?x43839) true)))\n (and $x57029 $x22252)))))))\n(check-sat)\n",
    "time": 2.4442896842956543,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=12, tm_hour=16, tm_min=35, tm_sec=25, tm_wday=5, tm_yday=347, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            0.5544352531433105
        ]
    }
}