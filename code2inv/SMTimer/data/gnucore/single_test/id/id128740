{
    "filename": "id",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun sym_argv2_1_16 () (_ BitVec 16))\n(declare-fun strlen_1651_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_1686_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_1840_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_2008_64 () (_ BitVec 64))\n(assert\n (let ((?x12639 ((_ extract 13 8) sym_argv2_1_16)))\n (let (($x10819 (bvule ?x12639 (_ bv39 6))))\n (let ((?x12641 ((_ extract 15 14) sym_argv2_1_16)))\n (let (($x12318 (= (_ bv0 2) ?x12641)))\n (let (($x11477 (and $x12318 $x10819)))\n (let ((?x11268 (ite $x11477 (_ bv2 8) (_ bv1 8))))\n (let (($x17051 (= (_ bv0 8) ?x11268)))\n (not $x17051)))))))))\n(assert\n (let ((?x5462 ((_ extract 15 8) sym_argv2_1_16)))\n (= (_ bv64 8) ?x5462)))\n(assert\n (let ((?x39382 (bvadd (_ bv576460752303357904 64) strlen_1651_64)))\n (let ((?x16828 ((_ extract 7 0) sym_argv2_1_16)))\n (let (($x16993 (= (_ bv0 8) ?x16828)))\n (let ((?x13786 (ite $x16993 (_ bv576460752303357905 64) (_ bv576460752303357906 64))))\n (= ?x13786 ?x39382))))))\n(assert\n (let (($x23207 (= (_ bv0 64) unconstrained_ret_mbrtowc_1686_64)))\n (not $x23207)))\n(assert\n (let (($x15013 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1686_64)))\n (not $x15013)))\n(assert\n (let (($x23393 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1686_64)))\n (not $x23393)))\n(assert\n (let (($x28049 (= (_ bv0 64) unconstrained_ret_mbrtowc_1840_64)))\n (not $x28049)))\n(assert\n (let (($x31277 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1840_64)))\n (not $x31277)))\n(assert\n (let (($x33250 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1840_64)))\n (not $x33250)))\n(assert\n (let (($x32133 (= (_ bv0 64) unconstrained_ret_mbrtowc_2008_64)))\n (not $x32133)))\n(assert\n (let (($x16431 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_2008_64)))\n (not $x16431)))\n(assert\n (let (($x30165 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_2008_64)))\n (not $x30165)))\n(assert\n (let ((?x6767 (bvadd unconstrained_ret_mbrtowc_1686_64 unconstrained_ret_mbrtowc_1840_64)))\n (let ((?x62027 (bvadd ?x6767 unconstrained_ret_mbrtowc_2008_64)))\n (let (($x44102 (bvule strlen_1651_64 ?x62027)))\n (not $x44102)))))\n(assert\n (let ((?x29892 (bvadd (_ bv576460752303357904 64) unconstrained_ret_mbrtowc_1686_64)))\n (let ((?x20091 (bvadd ?x29892 unconstrained_ret_mbrtowc_1840_64)))\n (let ((?x67385 (bvadd ?x20091 unconstrained_ret_mbrtowc_2008_64)))\n (bvule (_ bv576460752303357904 64) ?x67385)))))\n(assert\n (let ((?x29892 (bvadd (_ bv576460752303357904 64) unconstrained_ret_mbrtowc_1686_64)))\n (let ((?x20091 (bvadd ?x29892 unconstrained_ret_mbrtowc_1840_64)))\n (let ((?x67385 (bvadd ?x20091 unconstrained_ret_mbrtowc_2008_64)))\n (let ((?x58964 ((_ extract 63 59) ?x67385)))\n (= (_ bv0 5) ?x58964))))))\n(assert\n (let ((?x53076 ((_ extract 58 0) unconstrained_ret_mbrtowc_2008_64)))\n (let ((?x58521 ((_ extract 58 0) unconstrained_ret_mbrtowc_1840_64)))\n (let ((?x25657 ((_ extract 58 0) unconstrained_ret_mbrtowc_1686_64)))\n (let ((?x51270 (bvadd (_ bv576460752303357904 59) ?x25657)))\n (let ((?x53051 (bvadd ?x51270 ?x58521)))\n (let ((?x59230 (bvadd ?x53051 ?x53076)))\n (bvule ?x59230 (_ bv576460752303357905 59)))))))))\n(assert\n (let ((?x29892 (bvadd (_ bv576460752303357904 64) unconstrained_ret_mbrtowc_1686_64)))\n (let ((?x20091 (bvadd ?x29892 unconstrained_ret_mbrtowc_1840_64)))\n (let ((?x67385 (bvadd ?x20091 unconstrained_ret_mbrtowc_2008_64)))\n (let (($x39610 (and (distinct (_ bv576460752303357905 64) ?x67385) true)))\n (let (($x56853 (and (distinct (_ bv576460752303357904 64) ?x67385) true)))\n (and $x56853 $x39610)))))))\n(check-sat)\n",
    "time": 2.4473330974578857,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=12, tm_hour=18, tm_min=31, tm_sec=40, tm_wday=5, tm_yday=347, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            0.8021030426025391
        ]
    }
}