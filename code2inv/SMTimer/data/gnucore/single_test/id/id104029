{
    "filename": "id",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun unconstrained_ret_mbrtowc_1574_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_1256_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_1415_64 () (_ BitVec 64))\n(assert\n (let (($x17202 (= (_ bv0 64) unconstrained_ret_mbrtowc_1574_64)))\n (not $x17202)))\n(assert\n (let (($x38382 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1574_64)))\n (not $x38382)))\n(assert\n (let (($x10445 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1574_64)))\n (not $x10445)))\n(assert\n (let (($x27560 (= (_ bv0 64) unconstrained_ret_mbrtowc_1256_64)))\n (not $x27560)))\n(assert\n (let (($x44513 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1256_64)))\n (not $x44513)))\n(assert\n (let (($x4338 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1256_64)))\n (not $x4338)))\n(assert\n (let (($x26029 (= (_ bv0 64) unconstrained_ret_mbrtowc_1415_64)))\n (not $x26029)))\n(assert\n (let (($x45476 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1415_64)))\n (not $x45476)))\n(assert\n (let (($x2810 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1415_64)))\n (not $x2810)))\n(assert\n (let ((?x27325 (bvadd (_ bv1 64) unconstrained_ret_mbrtowc_1256_64)))\n (let ((?x3827 (bvadd ?x27325 unconstrained_ret_mbrtowc_1415_64)))\n (let ((?x47726 (bvadd ?x3827 unconstrained_ret_mbrtowc_1574_64)))\n (let (($x57297 (bvule (_ bv2 64) ?x47726)))\n (not $x57297))))))\n(assert\n (let ((?x238 (bvadd (_ bv576460752303357905 64) unconstrained_ret_mbrtowc_1256_64)))\n (let ((?x48772 (bvadd ?x238 unconstrained_ret_mbrtowc_1415_64)))\n (let ((?x52810 (bvadd ?x48772 unconstrained_ret_mbrtowc_1574_64)))\n (bvule (_ bv576460752303357904 64) ?x52810)))))\n(assert\n (let ((?x238 (bvadd (_ bv576460752303357905 64) unconstrained_ret_mbrtowc_1256_64)))\n (let ((?x48772 (bvadd ?x238 unconstrained_ret_mbrtowc_1415_64)))\n (let ((?x52810 (bvadd ?x48772 unconstrained_ret_mbrtowc_1574_64)))\n (let ((?x39195 ((_ extract 63 59) ?x52810)))\n (= (_ bv0 5) ?x39195))))))\n(assert\n (let ((?x30603 ((_ extract 58 0) unconstrained_ret_mbrtowc_1574_64)))\n (let ((?x27001 ((_ extract 58 0) unconstrained_ret_mbrtowc_1415_64)))\n (let ((?x36251 (bvadd (bvadd (_ bv576460752303357905 59) ((_ extract 58 0) unconstrained_ret_mbrtowc_1256_64)) ?x27001)))\n (let ((?x10140 (bvadd ?x36251 ?x30603)))\n (bvule ?x10140 (_ bv576460752303357905 59)))))))\n(assert\n (let ((?x46794 (bvadd unconstrained_ret_mbrtowc_1256_64 unconstrained_ret_mbrtowc_1415_64)))\n (let ((?x47735 (bvadd ?x46794 unconstrained_ret_mbrtowc_1574_64)))\n (let ((?x56429 (bvadd ?x47735 (_ bv576460752303357905 64))))\n (let (($x36909 (and (distinct (_ bv576460752303357905 64) ?x56429) true)))\n (let (($x7269 (and (distinct (_ bv576460752303357904 64) ?x56429) true)))\n (and $x7269 $x36909)))))))\n(check-sat)\n",
    "time": 3.76838755607605,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=12, tm_hour=16, tm_min=34, tm_sec=41, tm_wday=5, tm_yday=347, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            0.5922811031341553
        ]
    }
}