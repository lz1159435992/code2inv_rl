{
    "filename": "id",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun unconstrained_ret_mbrtowc_3088_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_2947_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_2813_64 () (_ BitVec 64))\n(assert\n (let (($x75316 (= (_ bv0 64) unconstrained_ret_mbrtowc_3088_64)))\n (not $x75316)))\n(assert\n (let (($x13664 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_3088_64)))\n (not $x13664)))\n(assert\n (let (($x25040 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_3088_64)))\n (not $x25040)))\n(assert\n (let (($x39168 (= (_ bv0 64) unconstrained_ret_mbrtowc_2947_64)))\n (not $x39168)))\n(assert\n (let (($x38848 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_2947_64)))\n (not $x38848)))\n(assert\n (let (($x48519 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_2947_64)))\n (not $x48519)))\n(assert\n (let (($x25323 (= (_ bv0 64) unconstrained_ret_mbrtowc_2813_64)))\n (not $x25323)))\n(assert\n (let (($x31014 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_2813_64)))\n (not $x31014)))\n(assert\n (let (($x27409 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_2813_64)))\n (not $x27409)))\n(assert\n (let ((?x57687 (bvadd (_ bv1 64) unconstrained_ret_mbrtowc_2813_64)))\n (let ((?x52570 (bvadd ?x57687 unconstrained_ret_mbrtowc_2947_64)))\n (let ((?x2427 (bvadd ?x52570 unconstrained_ret_mbrtowc_3088_64)))\n (let (($x24668 (bvule (_ bv2 64) ?x2427)))\n (not $x24668))))))\n(assert\n (let ((?x45800 (bvadd (_ bv576460752303357905 64) unconstrained_ret_mbrtowc_2813_64)))\n (let ((?x25093 (bvadd ?x45800 unconstrained_ret_mbrtowc_2947_64)))\n (let ((?x50958 (bvadd ?x25093 unconstrained_ret_mbrtowc_3088_64)))\n (bvule (_ bv576460752303357904 64) ?x50958)))))\n(assert\n (let ((?x45800 (bvadd (_ bv576460752303357905 64) unconstrained_ret_mbrtowc_2813_64)))\n (let ((?x25093 (bvadd ?x45800 unconstrained_ret_mbrtowc_2947_64)))\n (let ((?x50958 (bvadd ?x25093 unconstrained_ret_mbrtowc_3088_64)))\n (let ((?x62252 ((_ extract 63 59) ?x50958)))\n (= (_ bv0 5) ?x62252))))))\n(assert\n (let ((?x56966 ((_ extract 58 0) unconstrained_ret_mbrtowc_3088_64)))\n (let ((?x49908 ((_ extract 58 0) unconstrained_ret_mbrtowc_2947_64)))\n (let ((?x77461 (bvadd (bvadd (_ bv576460752303357905 59) ((_ extract 58 0) unconstrained_ret_mbrtowc_2813_64)) ?x49908)))\n (let ((?x58179 (bvadd ?x77461 ?x56966)))\n (bvule ?x58179 (_ bv576460752303357905 59)))))))\n(assert\n (let ((?x52400 (bvadd unconstrained_ret_mbrtowc_2813_64 unconstrained_ret_mbrtowc_2947_64)))\n (let ((?x11426 (bvadd ?x52400 unconstrained_ret_mbrtowc_3088_64)))\n (let ((?x61600 (bvadd ?x11426 (_ bv576460752303357905 64))))\n (let (($x65234 (and (distinct (_ bv576460752303357905 64) ?x61600) true)))\n (let (($x60882 (and (distinct (_ bv576460752303357904 64) ?x61600) true)))\n (and $x60882 $x65234)))))))\n(check-sat)\n",
    "time": 7.403963327407837,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=12, tm_hour=20, tm_min=47, tm_sec=59, tm_wday=5, tm_yday=347, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            0.5105075836181641
        ]
    }
}