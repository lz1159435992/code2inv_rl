{
    "filename": "readlink",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun unconstrained_ret_mbrtowc_1539_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_1760_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_1969_64 () (_ BitVec 64))\n(declare-fun sym_argv2_1_16 () (_ BitVec 16))\n(declare-fun strlen_1506_64 () (_ BitVec 64))\n(assert\n (let (($x3892 (= (_ bv0 64) unconstrained_ret_mbrtowc_1539_64)))\n (not $x3892)))\n(assert\n (let (($x39725 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1539_64)))\n (not $x39725)))\n(assert\n (let (($x33460 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1539_64)))\n (not $x33460)))\n(assert\n (let (($x5843 (= (_ bv0 64) unconstrained_ret_mbrtowc_1760_64)))\n (not $x5843)))\n(assert\n (let (($x26794 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1760_64)))\n (not $x26794)))\n(assert\n (let (($x4111 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1760_64)))\n (not $x4111)))\n(assert\n (let (($x42232 (= (_ bv0 64) unconstrained_ret_mbrtowc_1969_64)))\n (not $x42232)))\n(assert\n (let (($x13113 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1969_64)))\n (not $x13113)))\n(assert\n (let (($x28148 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1969_64)))\n (not $x28148)))\n(assert\n (let ((?x8131 ((_ extract 15 8) sym_argv2_1_16)))\n (= (_ bv12 8) ?x8131)))\n(assert\n (let ((?x14780 ((_ extract 7 0) sym_argv2_1_16)))\n (let (($x20709 (bvule (_ bv39 8) ?x14780)))\n (let (($x22926 (= (_ bv39 8) ?x14780)))\n (let (($x23663 (or $x22926 $x20709)))\n (let ((?x3444 (ite $x23663 (_ bv0 8) (_ bv255 8))))\n (let (($x4101 (= (_ bv0 8) ?x3444)))\n (let (($x24051 (not $x4101)))\n (let ((?x16090 ((_ extract 5 0) sym_argv2_1_16)))\n (let (($x16743 (bvule ?x16090 (_ bv39 6))))\n (let ((?x1167 ((_ extract 7 6) sym_argv2_1_16)))\n (let (($x20975 (= (_ bv0 2) ?x1167)))\n (let (($x1886 (and $x20975 $x16743)))\n (let ((?x23737 (ite $x1886 (_ bv2 8) (_ bv1 8))))\n (let ((?x3457 (ite $x20709 ?x23737 (_ bv255 8))))\n (let ((?x23770 (ite $x22926 (_ bv0 8) ?x3457)))\n (let (($x3752 (= (_ bv0 8) ?x23770)))\n (let (($x24055 (not $x3752)))\n (or $x24055 $x24051)))))))))))))))))))\n(assert\n (let ((?x2865 ((_ extract 6 0) sym_argv2_1_16)))\n (let (($x595 (bvule ?x2865 (_ bv126 7))))\n (let (($x7247 (not $x595)))\n (let ((?x225 ((_ extract 7 7) sym_argv2_1_16)))\n (let (($x24188 (= (_ bv0 1) ?x225)))\n (let (($x7979 (not $x24188)))\n (or $x7979 $x7247))))))))\n(assert\n (let ((?x10281 (bvadd (_ bv576460752303357910 64) strlen_1506_64)))\n (let ((?x14780 ((_ extract 7 0) sym_argv2_1_16)))\n (let (($x15139 (= (_ bv0 8) ?x14780)))\n (let ((?x4430 (ite $x15139 (_ bv576460752303357911 64) (_ bv576460752303357912 64))))\n (= ?x4430 ?x10281))))))\n(assert\n (let ((?x29624 (bvadd (bvadd (_ bv1 64) unconstrained_ret_mbrtowc_1539_64) unconstrained_ret_mbrtowc_1760_64)))\n (let ((?x32422 (bvadd ?x29624 unconstrained_ret_mbrtowc_1969_64)))\n (let (($x5278 (bvule strlen_1506_64 ?x32422)))\n (not $x5278)))))\n(assert\n (let ((?x4698 (bvadd (bvadd (_ bv576460752303357911 64) unconstrained_ret_mbrtowc_1539_64) unconstrained_ret_mbrtowc_1760_64)))\n (let ((?x35942 (bvadd ?x4698 unconstrained_ret_mbrtowc_1969_64)))\n (bvule (_ bv576460752303357910 64) ?x35942))))\n(assert\n (let ((?x4698 (bvadd (bvadd (_ bv576460752303357911 64) unconstrained_ret_mbrtowc_1539_64) unconstrained_ret_mbrtowc_1760_64)))\n (let ((?x35942 (bvadd ?x4698 unconstrained_ret_mbrtowc_1969_64)))\n (let ((?x33991 ((_ extract 63 59) ?x35942)))\n (= (_ bv0 5) ?x33991)))))\n(assert\n (let ((?x45422 ((_ extract 58 0) unconstrained_ret_mbrtowc_1969_64)))\n (let ((?x27117 ((_ extract 58 0) unconstrained_ret_mbrtowc_1760_64)))\n (let ((?x38581 (bvadd (bvadd (_ bv576460752303357911 59) ((_ extract 58 0) unconstrained_ret_mbrtowc_1539_64)) ?x27117)))\n (let ((?x42659 (bvadd ?x38581 ?x45422)))\n (bvule ?x42659 (_ bv576460752303357911 59)))))))\n(assert\n (let ((?x5285 (bvadd unconstrained_ret_mbrtowc_1539_64 unconstrained_ret_mbrtowc_1760_64)))\n (let ((?x34913 (bvadd ?x5285 unconstrained_ret_mbrtowc_1969_64)))\n (let ((?x17416 (bvadd ?x34913 (_ bv576460752303357911 64))))\n (let (($x40324 (and (distinct (_ bv576460752303357910 64) ?x17416) true)))\n (let (($x33731 (and (distinct (_ bv576460752303357911 64) ?x17416) true)))\n (and $x33731 $x40324)))))))\n(check-sat)\n",
    "time": 4.777186155319214,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=1, tm_hour=9, tm_min=34, tm_sec=55, tm_wday=1, tm_yday=336, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            0.6598877906799316
        ]
    }
}