{
    "filename": "readlink",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun sym_argv2_1_16 () (_ BitVec 16))\n(declare-fun strlen_3451_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_5578_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_5387_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_5482_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_5671_64 () (_ BitVec 64))\n(assert\n (let ((?x8131 ((_ extract 15 8) sym_argv2_1_16)))\n (= (_ bv35 8) ?x8131)))\n(assert\n (let ((?x14780 ((_ extract 7 0) sym_argv2_1_16)))\n (let (($x20709 (bvule (_ bv39 8) ?x14780)))\n (let (($x22926 (= (_ bv39 8) ?x14780)))\n (let (($x23663 (or $x22926 $x20709)))\n (let ((?x3444 (ite $x23663 (_ bv0 8) (_ bv255 8))))\n (let (($x4101 (= (_ bv0 8) ?x3444)))\n (let (($x24051 (not $x4101)))\n (let ((?x16090 ((_ extract 5 0) sym_argv2_1_16)))\n (let (($x16743 (bvule ?x16090 (_ bv39 6))))\n (let ((?x1167 ((_ extract 7 6) sym_argv2_1_16)))\n (let (($x20975 (= (_ bv0 2) ?x1167)))\n (let (($x1886 (and $x20975 $x16743)))\n (let ((?x23737 (ite $x1886 (_ bv2 8) (_ bv1 8))))\n (let ((?x3457 (ite $x20709 ?x23737 (_ bv255 8))))\n (let ((?x23770 (ite $x22926 (_ bv0 8) ?x3457)))\n (let (($x3752 (= (_ bv0 8) ?x23770)))\n (let (($x24055 (not $x3752)))\n (or $x24055 $x24051)))))))))))))))))))\n(assert\n (let ((?x2865 ((_ extract 6 0) sym_argv2_1_16)))\n (let (($x595 (bvule ?x2865 (_ bv126 7))))\n (let (($x7247 (not $x595)))\n (let ((?x225 ((_ extract 7 7) sym_argv2_1_16)))\n (let (($x24188 (= (_ bv0 1) ?x225)))\n (let (($x7979 (not $x24188)))\n (or $x7979 $x7247))))))))\n(assert\n (let ((?x15029 (bvadd (_ bv576460752303357910 64) strlen_3451_64)))\n (let ((?x14780 ((_ extract 7 0) sym_argv2_1_16)))\n (let (($x15139 (= (_ bv0 8) ?x14780)))\n (let ((?x4430 (ite $x15139 (_ bv576460752303357911 64) (_ bv576460752303357912 64))))\n (= ?x4430 ?x15029))))))\n(assert\n (let (($x17806 (= (_ bv3 64) strlen_3451_64)))\n (not $x17806)))\n(assert\n (let (($x64898 (= (_ bv4 64) strlen_3451_64)))\n (not $x64898)))\n(assert\n (let (($x68019 (bvule (_ bv5 64) strlen_3451_64)))\n (not $x68019)))\n(assert\n (let (($x69103 (= (_ bv0 64) unconstrained_ret_mbrtowc_5578_64)))\n (not $x69103)))\n(assert\n (let (($x19047 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_5578_64)))\n (not $x19047)))\n(assert\n (let (($x81677 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_5578_64)))\n (not $x81677)))\n(assert\n (let (($x90745 (= (_ bv0 64) unconstrained_ret_mbrtowc_5387_64)))\n (not $x90745)))\n(assert\n (let (($x58784 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_5387_64)))\n (not $x58784)))\n(assert\n (let (($x67838 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_5387_64)))\n (not $x67838)))\n(assert\n (let (($x88652 (= (_ bv0 64) unconstrained_ret_mbrtowc_5482_64)))\n (not $x88652)))\n(assert\n (let (($x90448 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_5482_64)))\n (not $x90448)))\n(assert\n (let (($x19153 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_5482_64)))\n (not $x19153)))\n(assert\n (let (($x35581 (= (_ bv0 64) unconstrained_ret_mbrtowc_5671_64)))\n (not $x35581)))\n(assert\n (let (($x90677 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_5671_64)))\n (not $x90677)))\n(assert\n (let (($x81669 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_5671_64)))\n (not $x81669)))\n(assert\n (let ((?x49584 (bvadd (_ bv10 64) unconstrained_ret_mbrtowc_5387_64)))\n (let ((?x13139 (bvadd ?x49584 unconstrained_ret_mbrtowc_5482_64)))\n (let ((?x41373 (bvadd ?x13139 unconstrained_ret_mbrtowc_5578_64)))\n (let ((?x27372 (bvadd ?x41373 unconstrained_ret_mbrtowc_5671_64)))\n (let (($x30166 (bvule strlen_3451_64 ?x27372)))\n (not $x30166)))))))\n(assert\n (let ((?x9045 (bvadd (_ bv576460752303357920 64) unconstrained_ret_mbrtowc_5387_64)))\n (let ((?x77966 (bvadd ?x9045 unconstrained_ret_mbrtowc_5482_64)))\n (let ((?x46206 (bvadd (bvadd ?x77966 unconstrained_ret_mbrtowc_5578_64) unconstrained_ret_mbrtowc_5671_64)))\n (bvule (_ bv576460752303357910 64) ?x46206)))))\n(assert\n (let ((?x9045 (bvadd (_ bv576460752303357920 64) unconstrained_ret_mbrtowc_5387_64)))\n (let ((?x77966 (bvadd ?x9045 unconstrained_ret_mbrtowc_5482_64)))\n (let ((?x46206 (bvadd (bvadd ?x77966 unconstrained_ret_mbrtowc_5578_64) unconstrained_ret_mbrtowc_5671_64)))\n (let ((?x97742 ((_ extract 63 59) ?x46206)))\n (= (_ bv0 5) ?x97742))))))\n(assert\n (let ((?x95477 ((_ extract 58 0) unconstrained_ret_mbrtowc_5671_64)))\n (let ((?x87602 ((_ extract 58 0) unconstrained_ret_mbrtowc_5578_64)))\n (let ((?x87468 ((_ extract 58 0) unconstrained_ret_mbrtowc_5482_64)))\n (let ((?x64082 ((_ extract 58 0) unconstrained_ret_mbrtowc_5387_64)))\n (let ((?x9727 (bvadd (_ bv576460752303357920 59) ?x64082)))\n (let ((?x56379 (bvadd ?x9727 ?x87468)))\n (let ((?x78338 (bvadd (bvadd ?x56379 ?x87602) ?x95477)))\n (bvule ?x78338 (_ bv576460752303357911 59))))))))))\n(assert\n (let ((?x86668 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_5671_64)))\n (let ((?x52512 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_5578_64)))\n (let ((?x76941 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_5482_64)))\n (let ((?x32317 (bvadd (_ bv18446744073709551607 64) ?x76941)))\n (let ((?x67472 (bvadd (bvadd ?x32317 ?x52512) ?x86668)))\n (let (($x64655 (= unconstrained_ret_mbrtowc_5387_64 ?x67472)))\n (let ((?x60233 (bvadd (bvadd (bvadd (_ bv18446744073709551606 64) ?x76941) ?x52512) ?x86668)))\n (let (($x32182 (= unconstrained_ret_mbrtowc_5387_64 ?x60233)))\n (or $x32182 $x64655))))))))))\n(assert\n (let ((?x86668 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_5671_64)))\n (let ((?x52512 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_5578_64)))\n (let ((?x76941 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_5482_64)))\n (let ((?x89671 (bvadd (_ bv18446744073709551606 64) ?x76941)))\n (let ((?x60233 (bvadd (bvadd ?x89671 ?x52512) ?x86668)))\n (let (($x32182 (= unconstrained_ret_mbrtowc_5387_64 ?x60233)))\n (let ((?x6541 (ite $x32182 (_ bv35 8) (_ bv190 8))))\n (let ((?x14780 ((_ extract 7 0) sym_argv2_1_16)))\n (let ((?x67472 (bvadd (bvadd (bvadd (_ bv18446744073709551607 64) ?x76941) ?x52512) ?x86668)))\n (let (($x64655 (= unconstrained_ret_mbrtowc_5387_64 ?x67472)))\n (let ((?x65595 (ite $x64655 ?x14780 ?x6541)))\n (let (($x77220 (= (_ bv0 8) ?x65595)))\n (not $x77220))))))))))))))\n(assert\n (let ((?x79371 (bvadd (_ bv11 64) unconstrained_ret_mbrtowc_5387_64)))\n (let ((?x44720 (bvadd (bvadd ?x79371 unconstrained_ret_mbrtowc_5482_64) unconstrained_ret_mbrtowc_5578_64)))\n (let ((?x67419 (bvadd ?x44720 unconstrained_ret_mbrtowc_5671_64)))\n (let (($x49468 (bvule strlen_3451_64 ?x67419)))\n (not $x49468))))))\n(assert\n (let ((?x74896 (bvadd unconstrained_ret_mbrtowc_5387_64 unconstrained_ret_mbrtowc_5482_64)))\n (let ((?x76884 (bvadd ?x74896 unconstrained_ret_mbrtowc_5578_64)))\n (let ((?x74656 (bvadd ?x76884 unconstrained_ret_mbrtowc_5671_64)))\n (let ((?x85375 (bvadd ?x74656 (_ bv576460752303357921 64))))\n (and (distinct (_ bv576460752303357911 64) ?x85375) true))))))\n(check-sat)\n",
    "time": 1.9467134475708008,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=1, tm_hour=20, tm_min=37, tm_sec=48, tm_wday=1, tm_yday=336, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            0.24554157257080078
        ]
    }
}