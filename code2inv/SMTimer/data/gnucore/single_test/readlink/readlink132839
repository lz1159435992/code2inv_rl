{
    "filename": "readlink",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun sym_argv2_1_16 () (_ BitVec 16))\n(declare-fun strlen_3236_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_4644_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_4549_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_4452_64 () (_ BitVec 64))\n(assert\n (let ((?x10746 ((_ extract 13 8) sym_argv2_1_16)))\n (let (($x9973 (bvule ?x10746 (_ bv39 6))))\n (let ((?x10464 ((_ extract 15 14) sym_argv2_1_16)))\n (let (($x6830 (= (_ bv0 2) ?x10464)))\n (let (($x11731 (and $x6830 $x9973)))\n (let ((?x11725 (ite $x11731 (_ bv2 8) (_ bv1 8))))\n (let (($x16860 (= (_ bv0 8) ?x11725)))\n (not $x16860)))))))))\n(assert\n (let ((?x8131 ((_ extract 15 8) sym_argv2_1_16)))\n (= (_ bv92 8) ?x8131)))\n(assert\n (let ((?x14780 ((_ extract 7 0) sym_argv2_1_16)))\n (let (($x20709 (bvule (_ bv39 8) ?x14780)))\n (let (($x22926 (= (_ bv39 8) ?x14780)))\n (let (($x23663 (or $x22926 $x20709)))\n (let ((?x3444 (ite $x23663 (_ bv0 8) (_ bv255 8))))\n (let (($x4101 (= (_ bv0 8) ?x3444)))\n (let (($x24051 (not $x4101)))\n (let ((?x16090 ((_ extract 5 0) sym_argv2_1_16)))\n (let (($x16743 (bvule ?x16090 (_ bv39 6))))\n (let ((?x1167 ((_ extract 7 6) sym_argv2_1_16)))\n (let (($x20975 (= (_ bv0 2) ?x1167)))\n (let (($x1886 (and $x20975 $x16743)))\n (let ((?x23737 (ite $x1886 (_ bv2 8) (_ bv1 8))))\n (let ((?x3457 (ite $x20709 ?x23737 (_ bv255 8))))\n (let ((?x23770 (ite $x22926 (_ bv0 8) ?x3457)))\n (let (($x3752 (= (_ bv0 8) ?x23770)))\n (let (($x24055 (not $x3752)))\n (or $x24055 $x24051)))))))))))))))))))\n(assert\n (let ((?x2865 ((_ extract 6 0) sym_argv2_1_16)))\n (let (($x595 (bvule ?x2865 (_ bv126 7))))\n (let (($x7247 (not $x595)))\n (let ((?x225 ((_ extract 7 7) sym_argv2_1_16)))\n (let (($x24188 (= (_ bv0 1) ?x225)))\n (let (($x7979 (not $x24188)))\n (or $x7979 $x7247))))))))\n(assert\n (let ((?x50438 (bvadd (_ bv576460752303357910 64) strlen_3236_64)))\n (let ((?x14780 ((_ extract 7 0) sym_argv2_1_16)))\n (let (($x15139 (= (_ bv0 8) ?x14780)))\n (let ((?x4430 (ite $x15139 (_ bv576460752303357911 64) (_ bv576460752303357912 64))))\n (= ?x4430 ?x50438))))))\n(assert\n (let (($x34597 (= (_ bv4 64) strlen_3236_64)))\n (not $x34597)))\n(assert\n (let (($x41222 (bvule (_ bv5 64) strlen_3236_64)))\n (not $x41222)))\n(assert\n (let (($x48546 (= (_ bv0 64) unconstrained_ret_mbrtowc_4644_64)))\n (not $x48546)))\n(assert\n (let (($x27769 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_4644_64)))\n (not $x27769)))\n(assert\n (let (($x70433 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_4644_64)))\n (not $x70433)))\n(assert\n (let (($x45106 (= (_ bv0 64) unconstrained_ret_mbrtowc_4549_64)))\n (not $x45106)))\n(assert\n (let (($x65967 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_4549_64)))\n (not $x65967)))\n(assert\n (let (($x59850 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_4549_64)))\n (not $x59850)))\n(assert\n (let (($x65023 (= (_ bv0 64) unconstrained_ret_mbrtowc_4452_64)))\n (not $x65023)))\n(assert\n (let (($x75111 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_4452_64)))\n (not $x75111)))\n(assert\n (let (($x74236 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_4452_64)))\n (not $x74236)))\n(assert\n (let ((?x36531 (bvadd (_ bv10 64) unconstrained_ret_mbrtowc_4452_64)))\n (let ((?x69711 (bvadd ?x36531 unconstrained_ret_mbrtowc_4549_64)))\n (let ((?x56902 (bvadd ?x69711 unconstrained_ret_mbrtowc_4644_64)))\n (let (($x60757 (bvule strlen_3236_64 ?x56902)))\n (not $x60757))))))\n(assert\n (let ((?x43921 (bvadd (_ bv576460752303357920 64) unconstrained_ret_mbrtowc_4452_64)))\n (let ((?x47856 (bvadd ?x43921 unconstrained_ret_mbrtowc_4549_64)))\n (let ((?x19064 (bvadd ?x47856 unconstrained_ret_mbrtowc_4644_64)))\n (bvule (_ bv576460752303357910 64) ?x19064)))))\n(assert\n (let ((?x43921 (bvadd (_ bv576460752303357920 64) unconstrained_ret_mbrtowc_4452_64)))\n (let ((?x47856 (bvadd ?x43921 unconstrained_ret_mbrtowc_4549_64)))\n (let ((?x19064 (bvadd ?x47856 unconstrained_ret_mbrtowc_4644_64)))\n (let ((?x60139 ((_ extract 63 59) ?x19064)))\n (= (_ bv0 5) ?x60139))))))\n(assert\n (let ((?x64332 ((_ extract 58 0) unconstrained_ret_mbrtowc_4644_64)))\n (let ((?x47639 ((_ extract 58 0) unconstrained_ret_mbrtowc_4549_64)))\n (let ((?x56640 ((_ extract 58 0) unconstrained_ret_mbrtowc_4452_64)))\n (let ((?x44165 (bvadd (_ bv576460752303357920 59) ?x56640)))\n (let ((?x62525 (bvadd ?x44165 ?x47639)))\n (let ((?x2082 (bvadd ?x62525 ?x64332)))\n (bvule ?x2082 (_ bv576460752303357911 59)))))))))\n(assert\n (let ((?x16023 (bvadd unconstrained_ret_mbrtowc_4452_64 unconstrained_ret_mbrtowc_4549_64)))\n (let ((?x75582 (bvadd ?x16023 unconstrained_ret_mbrtowc_4644_64)))\n (let ((?x24883 (bvadd ?x75582 (_ bv576460752303357920 64))))\n (let (($x70206 (and (distinct (_ bv576460752303357910 64) ?x24883) true)))\n (let (($x73432 (and (distinct (_ bv576460752303357911 64) ?x24883) true)))\n (and $x73432 $x70206)))))))\n(check-sat)\n",
    "time": 14.841059923171997,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=1, tm_hour=17, tm_min=6, tm_sec=22, tm_wday=1, tm_yday=336, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            5.14136815071106
        ]
    }
}