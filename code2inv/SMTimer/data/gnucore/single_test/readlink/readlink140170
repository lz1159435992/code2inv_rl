{
    "filename": "readlink",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun sym_argv2_1_16 () (_ BitVec 16))\n(declare-fun strlen_3451_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_4913_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_5015_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_4807_64 () (_ BitVec 64))\n(assert\n (let ((?x8131 ((_ extract 15 8) sym_argv2_1_16)))\n (= (_ bv35 8) ?x8131)))\n(assert\n (let ((?x14780 ((_ extract 7 0) sym_argv2_1_16)))\n (let (($x20709 (bvule (_ bv39 8) ?x14780)))\n (let (($x22926 (= (_ bv39 8) ?x14780)))\n (let (($x23663 (or $x22926 $x20709)))\n (let ((?x3444 (ite $x23663 (_ bv0 8) (_ bv255 8))))\n (let (($x4101 (= (_ bv0 8) ?x3444)))\n (let (($x24051 (not $x4101)))\n (let ((?x16090 ((_ extract 5 0) sym_argv2_1_16)))\n (let (($x16743 (bvule ?x16090 (_ bv39 6))))\n (let ((?x1167 ((_ extract 7 6) sym_argv2_1_16)))\n (let (($x20975 (= (_ bv0 2) ?x1167)))\n (let (($x1886 (and $x20975 $x16743)))\n (let ((?x23737 (ite $x1886 (_ bv2 8) (_ bv1 8))))\n (let ((?x3457 (ite $x20709 ?x23737 (_ bv255 8))))\n (let ((?x23770 (ite $x22926 (_ bv0 8) ?x3457)))\n (let (($x3752 (= (_ bv0 8) ?x23770)))\n (let (($x24055 (not $x3752)))\n (or $x24055 $x24051)))))))))))))))))))\n(assert\n (let ((?x2865 ((_ extract 6 0) sym_argv2_1_16)))\n (let (($x595 (bvule ?x2865 (_ bv126 7))))\n (let (($x7247 (not $x595)))\n (let ((?x225 ((_ extract 7 7) sym_argv2_1_16)))\n (let (($x24188 (= (_ bv0 1) ?x225)))\n (let (($x7979 (not $x24188)))\n (or $x7979 $x7247))))))))\n(assert\n (let ((?x15029 (bvadd (_ bv576460752303357910 64) strlen_3451_64)))\n (let ((?x14780 ((_ extract 7 0) sym_argv2_1_16)))\n (let (($x15139 (= (_ bv0 8) ?x14780)))\n (let ((?x4430 (ite $x15139 (_ bv576460752303357911 64) (_ bv576460752303357912 64))))\n (= ?x4430 ?x15029))))))\n(assert\n (let (($x64898 (= (_ bv4 64) strlen_3451_64)))\n (not $x64898)))\n(assert\n (let (($x75152 (= (_ bv5 64) strlen_3451_64)))\n (not $x75152)))\n(assert\n (let (($x74458 (= (_ bv6 64) strlen_3451_64)))\n (not $x74458)))\n(assert\n (let (($x75685 (bvule (_ bv7 64) strlen_3451_64)))\n (not $x75685)))\n(assert\n (let (($x8229 (= (_ bv0 64) unconstrained_ret_mbrtowc_4913_64)))\n (not $x8229)))\n(assert\n (let (($x42022 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_4913_64)))\n (not $x42022)))\n(assert\n (let (($x8533 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_4913_64)))\n (not $x8533)))\n(assert\n (let (($x26760 (= (_ bv0 64) unconstrained_ret_mbrtowc_5015_64)))\n (not $x26760)))\n(assert\n (let (($x79890 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_5015_64)))\n (not $x79890)))\n(assert\n (let (($x58522 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_5015_64)))\n (not $x58522)))\n(assert\n (let (($x66112 (= (_ bv0 64) unconstrained_ret_mbrtowc_4807_64)))\n (not $x66112)))\n(assert\n (let (($x7434 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_4807_64)))\n (not $x7434)))\n(assert\n (let (($x56563 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_4807_64)))\n (not $x56563)))\n(assert\n (let ((?x75052 (bvadd (_ bv6 64) unconstrained_ret_mbrtowc_4807_64)))\n (let ((?x31349 (bvadd ?x75052 unconstrained_ret_mbrtowc_4913_64)))\n (let ((?x70319 (bvadd ?x31349 unconstrained_ret_mbrtowc_5015_64)))\n (let (($x56655 (bvule strlen_3451_64 ?x70319)))\n (not $x56655))))))\n(assert\n (let ((?x65751 (bvadd (_ bv576460752303357916 64) unconstrained_ret_mbrtowc_4807_64)))\n (let ((?x73206 (bvadd ?x65751 unconstrained_ret_mbrtowc_4913_64)))\n (let ((?x72804 (bvadd ?x73206 unconstrained_ret_mbrtowc_5015_64)))\n (bvule (_ bv576460752303357910 64) ?x72804)))))\n(assert\n (let ((?x65751 (bvadd (_ bv576460752303357916 64) unconstrained_ret_mbrtowc_4807_64)))\n (let ((?x73206 (bvadd ?x65751 unconstrained_ret_mbrtowc_4913_64)))\n (let ((?x72804 (bvadd ?x73206 unconstrained_ret_mbrtowc_5015_64)))\n (let ((?x18200 ((_ extract 63 59) ?x72804)))\n (= (_ bv0 5) ?x18200))))))\n(assert\n (let ((?x62269 ((_ extract 58 0) unconstrained_ret_mbrtowc_5015_64)))\n (let ((?x58190 ((_ extract 58 0) unconstrained_ret_mbrtowc_4913_64)))\n (let ((?x66425 ((_ extract 58 0) unconstrained_ret_mbrtowc_4807_64)))\n (let ((?x18330 (bvadd (_ bv576460752303357916 59) ?x66425)))\n (let ((?x71336 (bvadd ?x18330 ?x58190)))\n (let ((?x49294 (bvadd ?x71336 ?x62269)))\n (bvule ?x49294 (_ bv576460752303357911 59)))))))))\n(assert\n (let ((?x64479 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_5015_64)))\n (let ((?x57868 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_4913_64)))\n (let ((?x77603 (bvadd (_ bv18446744073709551611 64) ?x57868)))\n (let ((?x69302 (bvadd ?x77603 ?x64479)))\n (let (($x64321 (= unconstrained_ret_mbrtowc_4807_64 ?x69302)))\n (let ((?x64359 (bvadd (_ bv18446744073709551610 64) ?x57868)))\n (let ((?x68046 (bvadd ?x64359 ?x64479)))\n (let (($x57251 (= unconstrained_ret_mbrtowc_4807_64 ?x68046)))\n (or $x57251 $x64321))))))))))\n(assert\n (let ((?x64479 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_5015_64)))\n (let ((?x57868 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_4913_64)))\n (let ((?x64359 (bvadd (_ bv18446744073709551610 64) ?x57868)))\n (let ((?x68046 (bvadd ?x64359 ?x64479)))\n (let (($x57251 (= unconstrained_ret_mbrtowc_4807_64 ?x68046)))\n (let ((?x61979 (ite $x57251 (_ bv35 8) (_ bv190 8))))\n (let ((?x14780 ((_ extract 7 0) sym_argv2_1_16)))\n (let ((?x77603 (bvadd (_ bv18446744073709551611 64) ?x57868)))\n (let ((?x69302 (bvadd ?x77603 ?x64479)))\n (let (($x64321 (= unconstrained_ret_mbrtowc_4807_64 ?x69302)))\n (let ((?x79160 (ite $x64321 ?x14780 ?x61979)))\n (let (($x16315 (= (_ bv0 8) ?x79160)))\n (not $x16315))))))))))))))\n(assert\n (let ((?x64676 (bvadd (_ bv7 64) unconstrained_ret_mbrtowc_4807_64)))\n (let ((?x72341 (bvadd ?x64676 unconstrained_ret_mbrtowc_4913_64)))\n (let ((?x44091 (bvadd ?x72341 unconstrained_ret_mbrtowc_5015_64)))\n (let (($x58151 (bvule strlen_3451_64 ?x44091)))\n (not $x58151))))))\n(assert\n (let ((?x30107 (bvadd unconstrained_ret_mbrtowc_4807_64 unconstrained_ret_mbrtowc_4913_64)))\n (let ((?x9783 (bvadd ?x30107 unconstrained_ret_mbrtowc_5015_64)))\n (let ((?x75241 (bvadd ?x9783 (_ bv576460752303357917 64))))\n (and (distinct (_ bv576460752303357911 64) ?x75241) true)))))\n(check-sat)\n",
    "time": 8.628979444503784,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=1, tm_hour=17, tm_min=12, tm_sec=13, tm_wday=1, tm_yday=336, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            0.22951936721801758
        ]
    }
}