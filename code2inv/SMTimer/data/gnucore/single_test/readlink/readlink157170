{
    "filename": "readlink",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun sym_argv2_1_16 () (_ BitVec 16))\n(declare-fun strlen_3236_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_5441_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_5629_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_5535_64 () (_ BitVec 64))\n(assert\n (let ((?x10746 ((_ extract 13 8) sym_argv2_1_16)))\n (let (($x9973 (bvule ?x10746 (_ bv39 6))))\n (let ((?x10464 ((_ extract 15 14) sym_argv2_1_16)))\n (let (($x6830 (= (_ bv0 2) ?x10464)))\n (let (($x11731 (and $x6830 $x9973)))\n (let ((?x11725 (ite $x11731 (_ bv2 8) (_ bv1 8))))\n (let (($x16860 (= (_ bv0 8) ?x11725)))\n (not $x16860)))))))))\n(assert\n (let ((?x8131 ((_ extract 15 8) sym_argv2_1_16)))\n (= (_ bv92 8) ?x8131)))\n(assert\n (let ((?x14780 ((_ extract 7 0) sym_argv2_1_16)))\n (let (($x20709 (bvule (_ bv39 8) ?x14780)))\n (let (($x22926 (= (_ bv39 8) ?x14780)))\n (let (($x23663 (or $x22926 $x20709)))\n (let ((?x3444 (ite $x23663 (_ bv0 8) (_ bv255 8))))\n (let (($x4101 (= (_ bv0 8) ?x3444)))\n (let (($x24051 (not $x4101)))\n (let ((?x16090 ((_ extract 5 0) sym_argv2_1_16)))\n (let (($x16743 (bvule ?x16090 (_ bv39 6))))\n (let ((?x1167 ((_ extract 7 6) sym_argv2_1_16)))\n (let (($x20975 (= (_ bv0 2) ?x1167)))\n (let (($x1886 (and $x20975 $x16743)))\n (let ((?x23737 (ite $x1886 (_ bv2 8) (_ bv1 8))))\n (let ((?x3457 (ite $x20709 ?x23737 (_ bv255 8))))\n (let ((?x23770 (ite $x22926 (_ bv0 8) ?x3457)))\n (let (($x3752 (= (_ bv0 8) ?x23770)))\n (let (($x24055 (not $x3752)))\n (or $x24055 $x24051)))))))))))))))))))\n(assert\n (let ((?x2865 ((_ extract 6 0) sym_argv2_1_16)))\n (let (($x595 (bvule ?x2865 (_ bv126 7))))\n (let (($x7247 (not $x595)))\n (let ((?x225 ((_ extract 7 7) sym_argv2_1_16)))\n (let (($x24188 (= (_ bv0 1) ?x225)))\n (let (($x7979 (not $x24188)))\n (or $x7979 $x7247))))))))\n(assert\n (let ((?x50438 (bvadd (_ bv576460752303357910 64) strlen_3236_64)))\n (let ((?x14780 ((_ extract 7 0) sym_argv2_1_16)))\n (let (($x15139 (= (_ bv0 8) ?x14780)))\n (let ((?x4430 (ite $x15139 (_ bv576460752303357911 64) (_ bv576460752303357912 64))))\n (= ?x4430 ?x50438))))))\n(assert\n (let (($x64907 (= (_ bv14 64) strlen_3236_64)))\n (not $x64907)))\n(assert\n (let (($x47096 (bvule (_ bv15 64) strlen_3236_64)))\n (not $x47096)))\n(assert\n (let (($x50729 (= (_ bv0 64) unconstrained_ret_mbrtowc_5441_64)))\n (not $x50729)))\n(assert\n (let (($x40646 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_5441_64)))\n (not $x40646)))\n(assert\n (let (($x36719 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_5441_64)))\n (not $x36719)))\n(assert\n (let (($x96127 (= (_ bv0 64) unconstrained_ret_mbrtowc_5629_64)))\n (not $x96127)))\n(assert\n (let (($x89228 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_5629_64)))\n (not $x89228)))\n(assert\n (let (($x91410 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_5629_64)))\n (not $x91410)))\n(assert\n (let (($x52183 (= (_ bv0 64) unconstrained_ret_mbrtowc_5535_64)))\n (not $x52183)))\n(assert\n (let (($x8377 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_5535_64)))\n (not $x8377)))\n(assert\n (let (($x64272 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_5535_64)))\n (not $x64272)))\n(assert\n (let ((?x64369 (bvadd (_ bv19 64) unconstrained_ret_mbrtowc_5441_64)))\n (let ((?x53455 (bvadd ?x64369 unconstrained_ret_mbrtowc_5535_64)))\n (let ((?x79409 (bvadd ?x53455 unconstrained_ret_mbrtowc_5629_64)))\n (let (($x42719 (bvule strlen_3236_64 ?x79409)))\n (not $x42719))))))\n(assert\n (let ((?x64494 (bvadd (_ bv576460752303357929 64) unconstrained_ret_mbrtowc_5441_64)))\n (let ((?x83551 (bvadd ?x64494 unconstrained_ret_mbrtowc_5535_64)))\n (let ((?x85994 (bvadd ?x83551 unconstrained_ret_mbrtowc_5629_64)))\n (bvule (_ bv576460752303357910 64) ?x85994)))))\n(assert\n (let ((?x64494 (bvadd (_ bv576460752303357929 64) unconstrained_ret_mbrtowc_5441_64)))\n (let ((?x83551 (bvadd ?x64494 unconstrained_ret_mbrtowc_5535_64)))\n (let ((?x85994 (bvadd ?x83551 unconstrained_ret_mbrtowc_5629_64)))\n (let ((?x73732 ((_ extract 63 59) ?x85994)))\n (= (_ bv0 5) ?x73732))))))\n(assert\n (let ((?x85763 ((_ extract 58 0) unconstrained_ret_mbrtowc_5629_64)))\n (let ((?x27014 ((_ extract 58 0) unconstrained_ret_mbrtowc_5535_64)))\n (let ((?x84486 (bvadd (bvadd (_ bv576460752303357929 59) ((_ extract 58 0) unconstrained_ret_mbrtowc_5441_64)) ?x27014)))\n (let ((?x87641 (bvadd ?x84486 ?x85763)))\n (bvule ?x87641 (_ bv576460752303357911 59)))))))\n(assert\n (let ((?x71075 (bvadd unconstrained_ret_mbrtowc_5441_64 unconstrained_ret_mbrtowc_5535_64)))\n (let ((?x88214 (bvadd ?x71075 unconstrained_ret_mbrtowc_5629_64)))\n (let ((?x95337 (bvadd ?x88214 (_ bv576460752303357929 64))))\n (let (($x76160 (and (distinct (_ bv576460752303357910 64) ?x95337) true)))\n (let (($x66064 (and (distinct (_ bv576460752303357911 64) ?x95337) true)))\n (and $x66064 $x76160)))))))\n(check-sat)\n",
    "time": 11.136460304260254,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=1, tm_hour=20, tm_min=24, tm_sec=58, tm_wday=1, tm_yday=336, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            1.8789453506469727
        ]
    }
}