{
    "filename": "readlink",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun unconstrained_ret_mbrtowc_5317_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_5216_64 () (_ BitVec 64))\n(declare-fun sym_argv2_1_16 () (_ BitVec 16))\n(declare-fun strlen_3451_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_5412_64 () (_ BitVec 64))\n(assert\n (let (($x37414 (= (_ bv0 64) unconstrained_ret_mbrtowc_5317_64)))\n (not $x37414)))\n(assert\n (let (($x39676 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_5317_64)))\n (not $x39676)))\n(assert\n (let (($x76050 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_5317_64)))\n (not $x76050)))\n(assert\n (let (($x58270 (= (_ bv0 64) unconstrained_ret_mbrtowc_5216_64)))\n (not $x58270)))\n(assert\n (let (($x54528 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_5216_64)))\n (not $x54528)))\n(assert\n (let (($x61421 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_5216_64)))\n (not $x61421)))\n(assert\n (let ((?x8131 ((_ extract 15 8) sym_argv2_1_16)))\n (= (_ bv35 8) ?x8131)))\n(assert\n (let ((?x14780 ((_ extract 7 0) sym_argv2_1_16)))\n (let (($x20709 (bvule (_ bv39 8) ?x14780)))\n (let (($x22926 (= (_ bv39 8) ?x14780)))\n (let (($x23663 (or $x22926 $x20709)))\n (let ((?x3444 (ite $x23663 (_ bv0 8) (_ bv255 8))))\n (let (($x4101 (= (_ bv0 8) ?x3444)))\n (let (($x24051 (not $x4101)))\n (let ((?x16090 ((_ extract 5 0) sym_argv2_1_16)))\n (let (($x16743 (bvule ?x16090 (_ bv39 6))))\n (let ((?x1167 ((_ extract 7 6) sym_argv2_1_16)))\n (let (($x20975 (= (_ bv0 2) ?x1167)))\n (let (($x1886 (and $x20975 $x16743)))\n (let ((?x23737 (ite $x1886 (_ bv2 8) (_ bv1 8))))\n (let ((?x3457 (ite $x20709 ?x23737 (_ bv255 8))))\n (let ((?x23770 (ite $x22926 (_ bv0 8) ?x3457)))\n (let (($x3752 (= (_ bv0 8) ?x23770)))\n (let (($x24055 (not $x3752)))\n (or $x24055 $x24051)))))))))))))))))))\n(assert\n (let ((?x2865 ((_ extract 6 0) sym_argv2_1_16)))\n (let (($x595 (bvule ?x2865 (_ bv126 7))))\n (let (($x7247 (not $x595)))\n (let ((?x225 ((_ extract 7 7) sym_argv2_1_16)))\n (let (($x24188 (= (_ bv0 1) ?x225)))\n (let (($x7979 (not $x24188)))\n (or $x7979 $x7247))))))))\n(assert\n (let ((?x15029 (bvadd (_ bv576460752303357910 64) strlen_3451_64)))\n (let ((?x14780 ((_ extract 7 0) sym_argv2_1_16)))\n (let (($x15139 (= (_ bv0 8) ?x14780)))\n (let ((?x4430 (ite $x15139 (_ bv576460752303357911 64) (_ bv576460752303357912 64))))\n (= ?x4430 ?x15029))))))\n(assert\n (let (($x17806 (= (_ bv3 64) strlen_3451_64)))\n (not $x17806)))\n(assert\n (let (($x64898 (= (_ bv4 64) strlen_3451_64)))\n (not $x64898)))\n(assert\n (let (($x68019 (bvule (_ bv5 64) strlen_3451_64)))\n (not $x68019)))\n(assert\n (let (($x61462 (= (_ bv0 64) unconstrained_ret_mbrtowc_5412_64)))\n (not $x61462)))\n(assert\n (let (($x79755 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_5412_64)))\n (not $x79755)))\n(assert\n (let (($x80130 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_5412_64)))\n (not $x80130)))\n(assert\n (let ((?x5848 (bvadd (_ bv10 64) unconstrained_ret_mbrtowc_5216_64)))\n (let ((?x41892 (bvadd ?x5848 unconstrained_ret_mbrtowc_5317_64)))\n (let ((?x53925 (bvadd ?x41892 unconstrained_ret_mbrtowc_5412_64)))\n (let (($x81713 (bvule strlen_3451_64 ?x53925)))\n (not $x81713))))))\n(assert\n (let ((?x8736 (bvadd (_ bv576460752303357920 64) unconstrained_ret_mbrtowc_5216_64)))\n (let ((?x75648 (bvadd ?x8736 unconstrained_ret_mbrtowc_5317_64)))\n (let ((?x77109 (bvadd ?x75648 unconstrained_ret_mbrtowc_5412_64)))\n (bvule (_ bv576460752303357910 64) ?x77109)))))\n(assert\n (let ((?x8736 (bvadd (_ bv576460752303357920 64) unconstrained_ret_mbrtowc_5216_64)))\n (let ((?x75648 (bvadd ?x8736 unconstrained_ret_mbrtowc_5317_64)))\n (let ((?x77109 (bvadd ?x75648 unconstrained_ret_mbrtowc_5412_64)))\n (let ((?x44152 ((_ extract 63 59) ?x77109)))\n (= (_ bv0 5) ?x44152))))))\n(assert\n (let ((?x80124 ((_ extract 58 0) unconstrained_ret_mbrtowc_5412_64)))\n (let ((?x40610 ((_ extract 58 0) unconstrained_ret_mbrtowc_5317_64)))\n (let ((?x49214 ((_ extract 58 0) unconstrained_ret_mbrtowc_5216_64)))\n (let ((?x79111 (bvadd (_ bv576460752303357920 59) ?x49214)))\n (let ((?x36173 (bvadd ?x79111 ?x40610)))\n (let ((?x54999 (bvadd ?x36173 ?x80124)))\n (bvule ?x54999 (_ bv576460752303357911 59)))))))))\n(assert\n (let ((?x62971 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_5412_64)))\n (let ((?x33072 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_5317_64)))\n (let ((?x80006 (bvadd (_ bv18446744073709551607 64) ?x33072)))\n (let ((?x76966 (bvadd ?x80006 ?x62971)))\n (let (($x57942 (= unconstrained_ret_mbrtowc_5216_64 ?x76966)))\n (let ((?x28413 (bvadd (_ bv18446744073709551606 64) ?x33072)))\n (let ((?x1749 (bvadd ?x28413 ?x62971)))\n (let (($x75586 (= unconstrained_ret_mbrtowc_5216_64 ?x1749)))\n (or $x75586 $x57942))))))))))\n(assert\n (let ((?x62971 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_5412_64)))\n (let ((?x33072 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_5317_64)))\n (let ((?x28413 (bvadd (_ bv18446744073709551606 64) ?x33072)))\n (let ((?x1749 (bvadd ?x28413 ?x62971)))\n (let (($x75586 (= unconstrained_ret_mbrtowc_5216_64 ?x1749)))\n (let ((?x40217 (ite $x75586 (_ bv35 8) (_ bv190 8))))\n (let ((?x14780 ((_ extract 7 0) sym_argv2_1_16)))\n (let ((?x80006 (bvadd (_ bv18446744073709551607 64) ?x33072)))\n (let ((?x76966 (bvadd ?x80006 ?x62971)))\n (let (($x57942 (= unconstrained_ret_mbrtowc_5216_64 ?x76966)))\n (let ((?x74913 (ite $x57942 ?x14780 ?x40217)))\n (let (($x47640 (= (_ bv0 8) ?x74913)))\n (not $x47640))))))))))))))\n(assert\n (let ((?x26004 (bvadd (_ bv11 64) unconstrained_ret_mbrtowc_5216_64)))\n (let ((?x48610 (bvadd ?x26004 unconstrained_ret_mbrtowc_5317_64)))\n (let ((?x79176 (bvadd ?x48610 unconstrained_ret_mbrtowc_5412_64)))\n (let (($x11836 (bvule strlen_3451_64 ?x79176)))\n (not $x11836))))))\n(assert\n (let ((?x52768 (bvadd unconstrained_ret_mbrtowc_5216_64 unconstrained_ret_mbrtowc_5317_64)))\n (let ((?x73323 (bvadd ?x52768 unconstrained_ret_mbrtowc_5412_64)))\n (let ((?x8067 (bvadd ?x73323 (_ bv576460752303357921 64))))\n (and (distinct (_ bv576460752303357911 64) ?x8067) true)))))\n(check-sat)\n",
    "time": 5.934638023376465,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=1, tm_hour=17, tm_min=17, tm_sec=22, tm_wday=1, tm_yday=336, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            0.23449206352233887
        ]
    }
}