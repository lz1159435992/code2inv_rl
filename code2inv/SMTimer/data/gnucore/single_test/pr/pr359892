{
    "filename": "pr",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun mem_fffffffffffc4e14_14248_32 () (_ BitVec 32))\n(assert\n (let (($x356873 (bvsle (_ bv4294965396 32) mem_fffffffffffc4e14_14248_32)))\n (not $x356873)))\n(assert\n (let ((?x258011 (bvmul (_ bv4294967295 32) mem_fffffffffffc4e14_14248_32)))\n (let ((?x346871 (bvadd (_ bv4294965396 32) ?x258011)))\n (let ((?x341819 (concat (_ bv0 32) ?x346871)))\n (let ((?x279161 (bvmul (_ bv3435973837 64) ?x341819)))\n (let ((?x367365 ((_ extract 63 35) ?x279161)))\n (let (($x49565 (= ?x367365 (_ bv0 29))))\n (not $x49565))))))))\n(assert\n (let ((?x258011 (bvmul (_ bv4294967295 32) mem_fffffffffffc4e14_14248_32)))\n (let ((?x346871 (bvadd (_ bv4294965396 32) ?x258011)))\n (let ((?x341819 (concat (_ bv0 32) ?x346871)))\n (let ((?x279161 (bvmul (_ bv3435973837 64) ?x341819)))\n (let ((?x367365 ((_ extract 63 35) ?x279161)))\n (let ((?x30951 (concat (_ bv0 35) ?x367365)))\n (let ((?x180232 (bvmul (_ bv3435973837 64) ?x30951)))\n (let ((?x335797 ((_ extract 63 35) ?x180232)))\n (let (($x350424 (= ?x335797 (_ bv0 29))))\n (not $x350424)))))))))))\n(assert\n (let ((?x258011 (bvmul (_ bv4294967295 32) mem_fffffffffffc4e14_14248_32)))\n (let ((?x346871 (bvadd (_ bv4294965396 32) ?x258011)))\n (let ((?x341819 (concat (_ bv0 32) ?x346871)))\n (let ((?x279161 (bvmul (_ bv3435973837 64) ?x341819)))\n (let ((?x367365 ((_ extract 63 35) ?x279161)))\n (let ((?x30951 (concat (_ bv0 35) ?x367365)))\n (let ((?x180232 (bvmul (_ bv3435973837 64) ?x30951)))\n (let ((?x335797 ((_ extract 63 35) ?x180232)))\n (let ((?x89831 (concat (_ bv0 35) ?x335797)))\n (let ((?x357246 (bvmul (_ bv3435973837 64) ?x89831)))\n (let ((?x250625 ((_ extract 63 35) ?x357246)))\n (let (($x372029 (= ?x250625 (_ bv0 29))))\n (not $x372029))))))))))))))\n(assert\n (let ((?x258011 (bvmul (_ bv4294967295 32) mem_fffffffffffc4e14_14248_32)))\n (let ((?x346871 (bvadd (_ bv4294965396 32) ?x258011)))\n (let ((?x341819 (concat (_ bv0 32) ?x346871)))\n (let ((?x279161 (bvmul (_ bv3435973837 64) ?x341819)))\n (let ((?x367365 ((_ extract 63 35) ?x279161)))\n (let ((?x30951 (concat (_ bv0 35) ?x367365)))\n (let ((?x180232 (bvmul (_ bv3435973837 64) ?x30951)))\n (let ((?x335797 ((_ extract 63 35) ?x180232)))\n (let ((?x89831 (concat (_ bv0 35) ?x335797)))\n (let ((?x357246 (bvmul (_ bv3435973837 64) ?x89831)))\n (let ((?x250625 ((_ extract 63 35) ?x357246)))\n (let ((?x329223 (concat (_ bv0 35) ?x250625)))\n (let ((?x367323 (bvmul (_ bv3435973837 64) ?x329223)))\n (let ((?x196644 ((_ extract 63 35) ?x367323)))\n (let (($x351099 (= ?x196644 (_ bv0 29))))\n (not $x351099)))))))))))))))))\n(assert\n (let ((?x258011 (bvmul (_ bv4294967295 32) mem_fffffffffffc4e14_14248_32)))\n (let ((?x346871 (bvadd (_ bv4294965396 32) ?x258011)))\n (let ((?x341819 (concat (_ bv0 32) ?x346871)))\n (let ((?x279161 (bvmul (_ bv3435973837 64) ?x341819)))\n (let ((?x367365 ((_ extract 63 35) ?x279161)))\n (let ((?x30951 (concat (_ bv0 35) ?x367365)))\n (let ((?x180232 (bvmul (_ bv3435973837 64) ?x30951)))\n (let ((?x335797 ((_ extract 63 35) ?x180232)))\n (let ((?x89831 (concat (_ bv0 35) ?x335797)))\n (let ((?x357246 (bvmul (_ bv3435973837 64) ?x89831)))\n (let ((?x250625 ((_ extract 63 35) ?x357246)))\n (let ((?x329223 (concat (_ bv0 35) ?x250625)))\n (let ((?x367323 (bvmul (_ bv3435973837 64) ?x329223)))\n (let ((?x196644 ((_ extract 63 35) ?x367323)))\n (let ((?x226102 (concat (_ bv0 35) ?x196644)))\n (let ((?x17232 (bvmul (_ bv3435973837 64) ?x226102)))\n (let ((?x168473 ((_ extract 63 35) ?x17232)))\n (let (($x350357 (= ?x168473 (_ bv0 29))))\n (not $x350357))))))))))))))))))))\n(assert\n (let ((?x258011 (bvmul (_ bv4294967295 32) mem_fffffffffffc4e14_14248_32)))\n (let ((?x346871 (bvadd (_ bv4294965396 32) ?x258011)))\n (let ((?x341819 (concat (_ bv0 32) ?x346871)))\n (let ((?x279161 (bvmul (_ bv3435973837 64) ?x341819)))\n (let ((?x367365 ((_ extract 63 35) ?x279161)))\n (let ((?x30951 (concat (_ bv0 35) ?x367365)))\n (let ((?x180232 (bvmul (_ bv3435973837 64) ?x30951)))\n (let ((?x335797 ((_ extract 63 35) ?x180232)))\n (let ((?x89831 (concat (_ bv0 35) ?x335797)))\n (let ((?x357246 (bvmul (_ bv3435973837 64) ?x89831)))\n (let ((?x250625 ((_ extract 63 35) ?x357246)))\n (let ((?x329223 (concat (_ bv0 35) ?x250625)))\n (let ((?x367323 (bvmul (_ bv3435973837 64) ?x329223)))\n (let ((?x196644 ((_ extract 63 35) ?x367323)))\n (let ((?x226102 (concat (_ bv0 35) ?x196644)))\n (let ((?x17232 (bvmul (_ bv3435973837 64) ?x226102)))\n (let ((?x168473 ((_ extract 63 35) ?x17232)))\n (let ((?x159755 (concat (_ bv0 35) ?x168473)))\n (let ((?x115267 (bvmul (_ bv3435973837 64) ?x159755)))\n (let ((?x335362 ((_ extract 63 35) ?x115267)))\n (let (($x71411 (= ?x335362 (_ bv0 29))))\n (not $x71411)))))))))))))))))))))))\n(assert\n (let ((?x258011 (bvmul (_ bv4294967295 32) mem_fffffffffffc4e14_14248_32)))\n (let ((?x346871 (bvadd (_ bv4294965396 32) ?x258011)))\n (let ((?x341819 (concat (_ bv0 32) ?x346871)))\n (let ((?x279161 (bvmul (_ bv3435973837 64) ?x341819)))\n (let ((?x367365 ((_ extract 63 35) ?x279161)))\n (let ((?x30951 (concat (_ bv0 35) ?x367365)))\n (let ((?x180232 (bvmul (_ bv3435973837 64) ?x30951)))\n (let ((?x335797 ((_ extract 63 35) ?x180232)))\n (let ((?x89831 (concat (_ bv0 35) ?x335797)))\n (let ((?x357246 (bvmul (_ bv3435973837 64) ?x89831)))\n (let ((?x250625 ((_ extract 63 35) ?x357246)))\n (let ((?x329223 (concat (_ bv0 35) ?x250625)))\n (let ((?x367323 (bvmul (_ bv3435973837 64) ?x329223)))\n (let ((?x196644 ((_ extract 63 35) ?x367323)))\n (let ((?x226102 (concat (_ bv0 35) ?x196644)))\n (let ((?x17232 (bvmul (_ bv3435973837 64) ?x226102)))\n (let ((?x168473 ((_ extract 63 35) ?x17232)))\n (let ((?x159755 (concat (_ bv0 35) ?x168473)))\n (let ((?x115267 (bvmul (_ bv3435973837 64) ?x159755)))\n (let ((?x335362 ((_ extract 63 35) ?x115267)))\n (let ((?x266137 (concat (_ bv0 35) ?x335362)))\n (let ((?x366683 (bvmul (_ bv3435973837 64) ?x266137)))\n (let ((?x124046 ((_ extract 63 35) ?x366683)))\n (let (($x8213 (= ?x124046 (_ bv0 29))))\n (not $x8213))))))))))))))))))))))))))\n(assert\n (let ((?x258011 (bvmul (_ bv4294967295 32) mem_fffffffffffc4e14_14248_32)))\n (let ((?x346871 (bvadd (_ bv4294965396 32) ?x258011)))\n (let ((?x341819 (concat (_ bv0 32) ?x346871)))\n (let ((?x279161 (bvmul (_ bv3435973837 64) ?x341819)))\n (let ((?x367365 ((_ extract 63 35) ?x279161)))\n (let ((?x30951 (concat (_ bv0 35) ?x367365)))\n (let ((?x180232 (bvmul (_ bv3435973837 64) ?x30951)))\n (let ((?x335797 ((_ extract 63 35) ?x180232)))\n (let ((?x89831 (concat (_ bv0 35) ?x335797)))\n (let ((?x357246 (bvmul (_ bv3435973837 64) ?x89831)))\n (let ((?x250625 ((_ extract 63 35) ?x357246)))\n (let ((?x329223 (concat (_ bv0 35) ?x250625)))\n (let ((?x367323 (bvmul (_ bv3435973837 64) ?x329223)))\n (let ((?x196644 ((_ extract 63 35) ?x367323)))\n (let ((?x226102 (concat (_ bv0 35) ?x196644)))\n (let ((?x17232 (bvmul (_ bv3435973837 64) ?x226102)))\n (let ((?x168473 ((_ extract 63 35) ?x17232)))\n (let ((?x159755 (concat (_ bv0 35) ?x168473)))\n (let ((?x115267 (bvmul (_ bv3435973837 64) ?x159755)))\n (let ((?x335362 ((_ extract 63 35) ?x115267)))\n (let ((?x266137 (concat (_ bv0 35) ?x335362)))\n (let ((?x366683 (bvmul (_ bv3435973837 64) ?x266137)))\n (let ((?x124046 ((_ extract 63 35) ?x366683)))\n (let ((?x327867 (concat (_ bv0 35) ?x124046)))\n (let ((?x87069 (bvmul (_ bv3435973837 64) ?x327867)))\n (let ((?x85417 ((_ extract 63 35) ?x87069)))\n (let (($x375180 (= ?x85417 (_ bv0 29))))\n (not $x375180)))))))))))))))))))))))))))))\n(assert\n (let ((?x258011 (bvmul (_ bv4294967295 32) mem_fffffffffffc4e14_14248_32)))\n (let ((?x346871 (bvadd (_ bv4294965396 32) ?x258011)))\n (let ((?x341819 (concat (_ bv0 32) ?x346871)))\n (let ((?x279161 (bvmul (_ bv3435973837 64) ?x341819)))\n (let ((?x367365 ((_ extract 63 35) ?x279161)))\n (let ((?x30951 (concat (_ bv0 35) ?x367365)))\n (let ((?x180232 (bvmul (_ bv3435973837 64) ?x30951)))\n (let ((?x335797 ((_ extract 63 35) ?x180232)))\n (let ((?x89831 (concat (_ bv0 35) ?x335797)))\n (let ((?x357246 (bvmul (_ bv3435973837 64) ?x89831)))\n (let ((?x250625 ((_ extract 63 35) ?x357246)))\n (let ((?x329223 (concat (_ bv0 35) ?x250625)))\n (let ((?x367323 (bvmul (_ bv3435973837 64) ?x329223)))\n (let ((?x196644 ((_ extract 63 35) ?x367323)))\n (let ((?x226102 (concat (_ bv0 35) ?x196644)))\n (let ((?x17232 (bvmul (_ bv3435973837 64) ?x226102)))\n (let ((?x168473 ((_ extract 63 35) ?x17232)))\n (let ((?x159755 (concat (_ bv0 35) ?x168473)))\n (let ((?x115267 (bvmul (_ bv3435973837 64) ?x159755)))\n (let ((?x335362 ((_ extract 63 35) ?x115267)))\n (let ((?x266137 (concat (_ bv0 35) ?x335362)))\n (let ((?x366683 (bvmul (_ bv3435973837 64) ?x266137)))\n (let ((?x124046 ((_ extract 63 35) ?x366683)))\n (let ((?x327867 (concat (_ bv0 35) ?x124046)))\n (let ((?x87069 (bvmul (_ bv3435973837 64) ?x327867)))\n (let ((?x85417 ((_ extract 63 35) ?x87069)))\n (let ((?x290754 (concat (_ bv0 35) ?x85417)))\n (let ((?x20481 (bvmul (_ bv3435973837 64) ?x290754)))\n (let ((?x293103 ((_ extract 63 35) ?x20481)))\n (let (($x351666 (= ?x293103 (_ bv0 29))))\n (not $x351666))))))))))))))))))))))))))))))))\n(assert\n (let ((?x258011 (bvmul (_ bv4294967295 32) mem_fffffffffffc4e14_14248_32)))\n (let ((?x346871 (bvadd (_ bv4294965396 32) ?x258011)))\n (let ((?x341819 (concat (_ bv0 32) ?x346871)))\n (let ((?x279161 (bvmul (_ bv3435973837 64) ?x341819)))\n (let ((?x367365 ((_ extract 63 35) ?x279161)))\n (let ((?x30951 (concat (_ bv0 35) ?x367365)))\n (let ((?x180232 (bvmul (_ bv3435973837 64) ?x30951)))\n (let ((?x335797 ((_ extract 63 35) ?x180232)))\n (let ((?x89831 (concat (_ bv0 35) ?x335797)))\n (let ((?x357246 (bvmul (_ bv3435973837 64) ?x89831)))\n (let ((?x250625 ((_ extract 63 35) ?x357246)))\n (let ((?x329223 (concat (_ bv0 35) ?x250625)))\n (let ((?x367323 (bvmul (_ bv3435973837 64) ?x329223)))\n (let ((?x196644 ((_ extract 63 35) ?x367323)))\n (let ((?x226102 (concat (_ bv0 35) ?x196644)))\n (let ((?x17232 (bvmul (_ bv3435973837 64) ?x226102)))\n (let ((?x168473 ((_ extract 63 35) ?x17232)))\n (let ((?x159755 (concat (_ bv0 35) ?x168473)))\n (let ((?x115267 (bvmul (_ bv3435973837 64) ?x159755)))\n (let ((?x335362 ((_ extract 63 35) ?x115267)))\n (let ((?x266137 (concat (_ bv0 35) ?x335362)))\n (let ((?x366683 (bvmul (_ bv3435973837 64) ?x266137)))\n (let ((?x124046 ((_ extract 63 35) ?x366683)))\n (let ((?x327867 (concat (_ bv0 35) ?x124046)))\n (let ((?x87069 (bvmul (_ bv3435973837 64) ?x327867)))\n (let ((?x85417 ((_ extract 63 35) ?x87069)))\n (let ((?x290754 (concat (_ bv0 35) ?x85417)))\n (let ((?x20481 (bvmul (_ bv3435973837 64) ?x290754)))\n (let ((?x293103 ((_ extract 63 35) ?x20481)))\n (let ((?x40519 (concat (_ bv0 35) ?x293103)))\n (let ((?x154108 (bvmul (_ bv3435973837 64) ?x40519)))\n (let ((?x199646 ((_ extract 63 35) ?x154108)))\n (= ?x199646 (_ bv0 29)))))))))))))))))))))))))))))))))))\n(check-sat)\n",
    "time": 10.182025909423828,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=1, tm_hour=2, tm_min=8, tm_sec=43, tm_wday=1, tm_yday=336, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            6.576228380203247
        ]
    }
}