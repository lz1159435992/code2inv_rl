{
    "filename": "pr",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun mem_ffffffffffffffd4_18864_32 () (_ BitVec 32))\n(assert\n (let (($x232839 (bvsle (_ bv4294965396 32) mem_ffffffffffffffd4_18864_32)))\n (not $x232839)))\n(assert\n (let ((?x451738 (bvmul (_ bv4294967295 32) mem_ffffffffffffffd4_18864_32)))\n (let ((?x18386 (bvadd (_ bv4294965396 32) ?x451738)))\n (let ((?x129863 (concat (_ bv0 32) ?x18386)))\n (let ((?x94934 (bvmul (_ bv3435973837 64) ?x129863)))\n (let ((?x58421 ((_ extract 63 35) ?x94934)))\n (let (($x405592 (= ?x58421 (_ bv0 29))))\n (not $x405592))))))))\n(assert\n (let ((?x451738 (bvmul (_ bv4294967295 32) mem_ffffffffffffffd4_18864_32)))\n (let ((?x18386 (bvadd (_ bv4294965396 32) ?x451738)))\n (let ((?x129863 (concat (_ bv0 32) ?x18386)))\n (let ((?x94934 (bvmul (_ bv3435973837 64) ?x129863)))\n (let ((?x58421 ((_ extract 63 35) ?x94934)))\n (let ((?x234234 (concat (_ bv0 35) ?x58421)))\n (let ((?x459093 (bvmul (_ bv3435973837 64) ?x234234)))\n (let ((?x467388 ((_ extract 63 35) ?x459093)))\n (let (($x174541 (= ?x467388 (_ bv0 29))))\n (not $x174541)))))))))))\n(assert\n (let ((?x451738 (bvmul (_ bv4294967295 32) mem_ffffffffffffffd4_18864_32)))\n (let ((?x18386 (bvadd (_ bv4294965396 32) ?x451738)))\n (let ((?x129863 (concat (_ bv0 32) ?x18386)))\n (let ((?x94934 (bvmul (_ bv3435973837 64) ?x129863)))\n (let ((?x58421 ((_ extract 63 35) ?x94934)))\n (let ((?x234234 (concat (_ bv0 35) ?x58421)))\n (let ((?x459093 (bvmul (_ bv3435973837 64) ?x234234)))\n (let ((?x467388 ((_ extract 63 35) ?x459093)))\n (let ((?x440471 (concat (_ bv0 35) ?x467388)))\n (let ((?x462728 (bvmul (_ bv3435973837 64) ?x440471)))\n (let ((?x159836 ((_ extract 63 35) ?x462728)))\n (let (($x156153 (= ?x159836 (_ bv0 29))))\n (not $x156153))))))))))))))\n(assert\n (let ((?x451738 (bvmul (_ bv4294967295 32) mem_ffffffffffffffd4_18864_32)))\n (let ((?x18386 (bvadd (_ bv4294965396 32) ?x451738)))\n (let ((?x129863 (concat (_ bv0 32) ?x18386)))\n (let ((?x94934 (bvmul (_ bv3435973837 64) ?x129863)))\n (let ((?x58421 ((_ extract 63 35) ?x94934)))\n (let ((?x234234 (concat (_ bv0 35) ?x58421)))\n (let ((?x459093 (bvmul (_ bv3435973837 64) ?x234234)))\n (let ((?x467388 ((_ extract 63 35) ?x459093)))\n (let ((?x440471 (concat (_ bv0 35) ?x467388)))\n (let ((?x462728 (bvmul (_ bv3435973837 64) ?x440471)))\n (let ((?x159836 ((_ extract 63 35) ?x462728)))\n (let ((?x398928 (concat (_ bv0 35) ?x159836)))\n (let ((?x462281 (bvmul (_ bv3435973837 64) ?x398928)))\n (let ((?x328128 ((_ extract 63 35) ?x462281)))\n (let (($x397085 (= ?x328128 (_ bv0 29))))\n (not $x397085)))))))))))))))))\n(assert\n (let ((?x451738 (bvmul (_ bv4294967295 32) mem_ffffffffffffffd4_18864_32)))\n (let ((?x18386 (bvadd (_ bv4294965396 32) ?x451738)))\n (let ((?x129863 (concat (_ bv0 32) ?x18386)))\n (let ((?x94934 (bvmul (_ bv3435973837 64) ?x129863)))\n (let ((?x58421 ((_ extract 63 35) ?x94934)))\n (let ((?x234234 (concat (_ bv0 35) ?x58421)))\n (let ((?x459093 (bvmul (_ bv3435973837 64) ?x234234)))\n (let ((?x467388 ((_ extract 63 35) ?x459093)))\n (let ((?x440471 (concat (_ bv0 35) ?x467388)))\n (let ((?x462728 (bvmul (_ bv3435973837 64) ?x440471)))\n (let ((?x159836 ((_ extract 63 35) ?x462728)))\n (let ((?x398928 (concat (_ bv0 35) ?x159836)))\n (let ((?x462281 (bvmul (_ bv3435973837 64) ?x398928)))\n (let ((?x328128 ((_ extract 63 35) ?x462281)))\n (let ((?x399296 (concat (_ bv0 35) ?x328128)))\n (let ((?x377686 (bvmul (_ bv3435973837 64) ?x399296)))\n (let ((?x395076 ((_ extract 63 35) ?x377686)))\n (let (($x360209 (= ?x395076 (_ bv0 29))))\n (not $x360209))))))))))))))))))))\n(assert\n (let ((?x451738 (bvmul (_ bv4294967295 32) mem_ffffffffffffffd4_18864_32)))\n (let ((?x18386 (bvadd (_ bv4294965396 32) ?x451738)))\n (let ((?x129863 (concat (_ bv0 32) ?x18386)))\n (let ((?x94934 (bvmul (_ bv3435973837 64) ?x129863)))\n (let ((?x58421 ((_ extract 63 35) ?x94934)))\n (let ((?x234234 (concat (_ bv0 35) ?x58421)))\n (let ((?x459093 (bvmul (_ bv3435973837 64) ?x234234)))\n (let ((?x467388 ((_ extract 63 35) ?x459093)))\n (let ((?x440471 (concat (_ bv0 35) ?x467388)))\n (let ((?x462728 (bvmul (_ bv3435973837 64) ?x440471)))\n (let ((?x159836 ((_ extract 63 35) ?x462728)))\n (let ((?x398928 (concat (_ bv0 35) ?x159836)))\n (let ((?x462281 (bvmul (_ bv3435973837 64) ?x398928)))\n (let ((?x328128 ((_ extract 63 35) ?x462281)))\n (let ((?x399296 (concat (_ bv0 35) ?x328128)))\n (let ((?x377686 (bvmul (_ bv3435973837 64) ?x399296)))\n (let ((?x395076 ((_ extract 63 35) ?x377686)))\n (let ((?x407269 (concat (_ bv0 35) ?x395076)))\n (let ((?x470232 (bvmul (_ bv3435973837 64) ?x407269)))\n (let ((?x468455 ((_ extract 63 35) ?x470232)))\n (let (($x167815 (= ?x468455 (_ bv0 29))))\n (not $x167815)))))))))))))))))))))))\n(assert\n (let ((?x451738 (bvmul (_ bv4294967295 32) mem_ffffffffffffffd4_18864_32)))\n (let ((?x18386 (bvadd (_ bv4294965396 32) ?x451738)))\n (let ((?x129863 (concat (_ bv0 32) ?x18386)))\n (let ((?x94934 (bvmul (_ bv3435973837 64) ?x129863)))\n (let ((?x58421 ((_ extract 63 35) ?x94934)))\n (let ((?x234234 (concat (_ bv0 35) ?x58421)))\n (let ((?x459093 (bvmul (_ bv3435973837 64) ?x234234)))\n (let ((?x467388 ((_ extract 63 35) ?x459093)))\n (let ((?x440471 (concat (_ bv0 35) ?x467388)))\n (let ((?x462728 (bvmul (_ bv3435973837 64) ?x440471)))\n (let ((?x159836 ((_ extract 63 35) ?x462728)))\n (let ((?x398928 (concat (_ bv0 35) ?x159836)))\n (let ((?x462281 (bvmul (_ bv3435973837 64) ?x398928)))\n (let ((?x328128 ((_ extract 63 35) ?x462281)))\n (let ((?x399296 (concat (_ bv0 35) ?x328128)))\n (let ((?x377686 (bvmul (_ bv3435973837 64) ?x399296)))\n (let ((?x395076 ((_ extract 63 35) ?x377686)))\n (let ((?x407269 (concat (_ bv0 35) ?x395076)))\n (let ((?x470232 (bvmul (_ bv3435973837 64) ?x407269)))\n (let ((?x468455 ((_ extract 63 35) ?x470232)))\n (let ((?x40023 (concat (_ bv0 35) ?x468455)))\n (let ((?x160831 (bvmul (_ bv3435973837 64) ?x40023)))\n (let ((?x334196 ((_ extract 63 35) ?x160831)))\n (= ?x334196 (_ bv0 29))))))))))))))))))))))))))\n(check-sat)\n",
    "time": 3.593316078186035,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=1, tm_hour=4, tm_min=51, tm_sec=54, tm_wday=1, tm_yday=336, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            2.811185359954834
        ]
    }
}