{
    "filename": "pr",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun mem_ffc0000000000014_6083_32 () (_ BitVec 32))\n(assert\n (let (($x25124 (bvsle (_ bv4294965396 32) mem_ffc0000000000014_6083_32)))\n (not $x25124)))\n(assert\n (let ((?x77172 (bvmul (_ bv4294967295 32) mem_ffc0000000000014_6083_32)))\n (let ((?x278997 (bvadd (_ bv4294965396 32) ?x77172)))\n (let ((?x104129 (concat (_ bv0 32) ?x278997)))\n (let ((?x107951 (bvmul (_ bv3435973837 64) ?x104129)))\n (let ((?x47150 ((_ extract 63 35) ?x107951)))\n (let (($x101047 (= ?x47150 (_ bv0 29))))\n (not $x101047))))))))\n(assert\n (let ((?x77172 (bvmul (_ bv4294967295 32) mem_ffc0000000000014_6083_32)))\n (let ((?x278997 (bvadd (_ bv4294965396 32) ?x77172)))\n (let ((?x104129 (concat (_ bv0 32) ?x278997)))\n (let ((?x107951 (bvmul (_ bv3435973837 64) ?x104129)))\n (let ((?x47150 ((_ extract 63 35) ?x107951)))\n (let ((?x68561 (concat (_ bv0 35) ?x47150)))\n (let ((?x5714 (bvmul (_ bv3435973837 64) ?x68561)))\n (let ((?x152388 ((_ extract 63 35) ?x5714)))\n (let (($x81966 (= ?x152388 (_ bv0 29))))\n (not $x81966)))))))))))\n(assert\n (let ((?x77172 (bvmul (_ bv4294967295 32) mem_ffc0000000000014_6083_32)))\n (let ((?x278997 (bvadd (_ bv4294965396 32) ?x77172)))\n (let ((?x104129 (concat (_ bv0 32) ?x278997)))\n (let ((?x107951 (bvmul (_ bv3435973837 64) ?x104129)))\n (let ((?x47150 ((_ extract 63 35) ?x107951)))\n (let ((?x68561 (concat (_ bv0 35) ?x47150)))\n (let ((?x5714 (bvmul (_ bv3435973837 64) ?x68561)))\n (let ((?x152388 ((_ extract 63 35) ?x5714)))\n (let ((?x13276 (concat (_ bv0 35) ?x152388)))\n (let ((?x205718 (bvmul (_ bv3435973837 64) ?x13276)))\n (let ((?x126289 ((_ extract 63 35) ?x205718)))\n (let (($x148718 (= ?x126289 (_ bv0 29))))\n (not $x148718))))))))))))))\n(assert\n (let ((?x77172 (bvmul (_ bv4294967295 32) mem_ffc0000000000014_6083_32)))\n (let ((?x278997 (bvadd (_ bv4294965396 32) ?x77172)))\n (let ((?x104129 (concat (_ bv0 32) ?x278997)))\n (let ((?x107951 (bvmul (_ bv3435973837 64) ?x104129)))\n (let ((?x47150 ((_ extract 63 35) ?x107951)))\n (let ((?x68561 (concat (_ bv0 35) ?x47150)))\n (let ((?x5714 (bvmul (_ bv3435973837 64) ?x68561)))\n (let ((?x152388 ((_ extract 63 35) ?x5714)))\n (let ((?x13276 (concat (_ bv0 35) ?x152388)))\n (let ((?x205718 (bvmul (_ bv3435973837 64) ?x13276)))\n (let ((?x126289 ((_ extract 63 35) ?x205718)))\n (let ((?x258214 (concat (_ bv0 35) ?x126289)))\n (let ((?x132053 (bvmul (_ bv3435973837 64) ?x258214)))\n (let ((?x108889 ((_ extract 63 35) ?x132053)))\n (let (($x36720 (= ?x108889 (_ bv0 29))))\n (not $x36720)))))))))))))))))\n(assert\n (let ((?x77172 (bvmul (_ bv4294967295 32) mem_ffc0000000000014_6083_32)))\n (let ((?x278997 (bvadd (_ bv4294965396 32) ?x77172)))\n (let ((?x104129 (concat (_ bv0 32) ?x278997)))\n (let ((?x107951 (bvmul (_ bv3435973837 64) ?x104129)))\n (let ((?x47150 ((_ extract 63 35) ?x107951)))\n (let ((?x68561 (concat (_ bv0 35) ?x47150)))\n (let ((?x5714 (bvmul (_ bv3435973837 64) ?x68561)))\n (let ((?x152388 ((_ extract 63 35) ?x5714)))\n (let ((?x13276 (concat (_ bv0 35) ?x152388)))\n (let ((?x205718 (bvmul (_ bv3435973837 64) ?x13276)))\n (let ((?x126289 ((_ extract 63 35) ?x205718)))\n (let ((?x258214 (concat (_ bv0 35) ?x126289)))\n (let ((?x132053 (bvmul (_ bv3435973837 64) ?x258214)))\n (let ((?x108889 ((_ extract 63 35) ?x132053)))\n (let ((?x36464 (concat (_ bv0 35) ?x108889)))\n (let ((?x204809 (bvmul (_ bv3435973837 64) ?x36464)))\n (let ((?x186797 ((_ extract 63 35) ?x204809)))\n (let (($x271781 (= ?x186797 (_ bv0 29))))\n (not $x271781))))))))))))))))))))\n(assert\n (let ((?x77172 (bvmul (_ bv4294967295 32) mem_ffc0000000000014_6083_32)))\n (let ((?x278997 (bvadd (_ bv4294965396 32) ?x77172)))\n (let ((?x104129 (concat (_ bv0 32) ?x278997)))\n (let ((?x107951 (bvmul (_ bv3435973837 64) ?x104129)))\n (let ((?x47150 ((_ extract 63 35) ?x107951)))\n (let ((?x68561 (concat (_ bv0 35) ?x47150)))\n (let ((?x5714 (bvmul (_ bv3435973837 64) ?x68561)))\n (let ((?x152388 ((_ extract 63 35) ?x5714)))\n (let ((?x13276 (concat (_ bv0 35) ?x152388)))\n (let ((?x205718 (bvmul (_ bv3435973837 64) ?x13276)))\n (let ((?x126289 ((_ extract 63 35) ?x205718)))\n (let ((?x258214 (concat (_ bv0 35) ?x126289)))\n (let ((?x132053 (bvmul (_ bv3435973837 64) ?x258214)))\n (let ((?x108889 ((_ extract 63 35) ?x132053)))\n (let ((?x36464 (concat (_ bv0 35) ?x108889)))\n (let ((?x204809 (bvmul (_ bv3435973837 64) ?x36464)))\n (let ((?x186797 ((_ extract 63 35) ?x204809)))\n (let ((?x198239 (concat (_ bv0 35) ?x186797)))\n (let ((?x209734 (bvmul (_ bv3435973837 64) ?x198239)))\n (let ((?x40731 ((_ extract 63 35) ?x209734)))\n (= ?x40731 (_ bv0 29)))))))))))))))))))))))\n(check-sat)\n",
    "time": 3.7750911712646484,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=11, tm_mday=30, tm_hour=22, tm_min=54, tm_sec=9, tm_wday=0, tm_yday=335, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            2.8906784057617188
        ]
    }
}