{
    "filename": "pr",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun mem_ffff00000000000c_9292_32 () (_ BitVec 32))\n(assert\n (let (($x275503 (bvsle (_ bv4294965396 32) mem_ffff00000000000c_9292_32)))\n (not $x275503)))\n(assert\n (let ((?x33003 (bvmul (_ bv4294967295 32) mem_ffff00000000000c_9292_32)))\n (let ((?x104233 (bvadd (_ bv4294965396 32) ?x33003)))\n (let ((?x122668 (concat (_ bv0 32) ?x104233)))\n (let ((?x1528 (bvmul (_ bv3435973837 64) ?x122668)))\n (let ((?x143267 ((_ extract 63 35) ?x1528)))\n (let (($x233156 (= ?x143267 (_ bv0 29))))\n (not $x233156))))))))\n(assert\n (let ((?x33003 (bvmul (_ bv4294967295 32) mem_ffff00000000000c_9292_32)))\n (let ((?x104233 (bvadd (_ bv4294965396 32) ?x33003)))\n (let ((?x122668 (concat (_ bv0 32) ?x104233)))\n (let ((?x1528 (bvmul (_ bv3435973837 64) ?x122668)))\n (let ((?x143267 ((_ extract 63 35) ?x1528)))\n (let ((?x151713 (concat (_ bv0 35) ?x143267)))\n (let ((?x112094 (bvmul (_ bv3435973837 64) ?x151713)))\n (let ((?x206159 ((_ extract 63 35) ?x112094)))\n (let (($x232394 (= ?x206159 (_ bv0 29))))\n (not $x232394)))))))))))\n(assert\n (let ((?x33003 (bvmul (_ bv4294967295 32) mem_ffff00000000000c_9292_32)))\n (let ((?x104233 (bvadd (_ bv4294965396 32) ?x33003)))\n (let ((?x122668 (concat (_ bv0 32) ?x104233)))\n (let ((?x1528 (bvmul (_ bv3435973837 64) ?x122668)))\n (let ((?x143267 ((_ extract 63 35) ?x1528)))\n (let ((?x151713 (concat (_ bv0 35) ?x143267)))\n (let ((?x112094 (bvmul (_ bv3435973837 64) ?x151713)))\n (let ((?x206159 ((_ extract 63 35) ?x112094)))\n (let ((?x157063 (concat (_ bv0 35) ?x206159)))\n (let ((?x215554 (bvmul (_ bv3435973837 64) ?x157063)))\n (let ((?x258795 ((_ extract 63 35) ?x215554)))\n (let (($x159991 (= ?x258795 (_ bv0 29))))\n (not $x159991))))))))))))))\n(assert\n (let ((?x33003 (bvmul (_ bv4294967295 32) mem_ffff00000000000c_9292_32)))\n (let ((?x104233 (bvadd (_ bv4294965396 32) ?x33003)))\n (let ((?x122668 (concat (_ bv0 32) ?x104233)))\n (let ((?x1528 (bvmul (_ bv3435973837 64) ?x122668)))\n (let ((?x143267 ((_ extract 63 35) ?x1528)))\n (let ((?x151713 (concat (_ bv0 35) ?x143267)))\n (let ((?x112094 (bvmul (_ bv3435973837 64) ?x151713)))\n (let ((?x206159 ((_ extract 63 35) ?x112094)))\n (let ((?x157063 (concat (_ bv0 35) ?x206159)))\n (let ((?x215554 (bvmul (_ bv3435973837 64) ?x157063)))\n (let ((?x258795 ((_ extract 63 35) ?x215554)))\n (let ((?x176012 (concat (_ bv0 35) ?x258795)))\n (let ((?x216627 (bvmul (_ bv3435973837 64) ?x176012)))\n (let ((?x56340 ((_ extract 63 35) ?x216627)))\n (let (($x234575 (= ?x56340 (_ bv0 29))))\n (not $x234575)))))))))))))))))\n(assert\n (let ((?x33003 (bvmul (_ bv4294967295 32) mem_ffff00000000000c_9292_32)))\n (let ((?x104233 (bvadd (_ bv4294965396 32) ?x33003)))\n (let ((?x122668 (concat (_ bv0 32) ?x104233)))\n (let ((?x1528 (bvmul (_ bv3435973837 64) ?x122668)))\n (let ((?x143267 ((_ extract 63 35) ?x1528)))\n (let ((?x151713 (concat (_ bv0 35) ?x143267)))\n (let ((?x112094 (bvmul (_ bv3435973837 64) ?x151713)))\n (let ((?x206159 ((_ extract 63 35) ?x112094)))\n (let ((?x157063 (concat (_ bv0 35) ?x206159)))\n (let ((?x215554 (bvmul (_ bv3435973837 64) ?x157063)))\n (let ((?x258795 ((_ extract 63 35) ?x215554)))\n (let ((?x176012 (concat (_ bv0 35) ?x258795)))\n (let ((?x216627 (bvmul (_ bv3435973837 64) ?x176012)))\n (let ((?x56340 ((_ extract 63 35) ?x216627)))\n (let ((?x229820 (concat (_ bv0 35) ?x56340)))\n (let ((?x275986 (bvmul (_ bv3435973837 64) ?x229820)))\n (let ((?x126387 ((_ extract 63 35) ?x275986)))\n (let (($x117185 (= ?x126387 (_ bv0 29))))\n (not $x117185))))))))))))))))))))\n(assert\n (let ((?x33003 (bvmul (_ bv4294967295 32) mem_ffff00000000000c_9292_32)))\n (let ((?x104233 (bvadd (_ bv4294965396 32) ?x33003)))\n (let ((?x122668 (concat (_ bv0 32) ?x104233)))\n (let ((?x1528 (bvmul (_ bv3435973837 64) ?x122668)))\n (let ((?x143267 ((_ extract 63 35) ?x1528)))\n (let ((?x151713 (concat (_ bv0 35) ?x143267)))\n (let ((?x112094 (bvmul (_ bv3435973837 64) ?x151713)))\n (let ((?x206159 ((_ extract 63 35) ?x112094)))\n (let ((?x157063 (concat (_ bv0 35) ?x206159)))\n (let ((?x215554 (bvmul (_ bv3435973837 64) ?x157063)))\n (let ((?x258795 ((_ extract 63 35) ?x215554)))\n (let ((?x176012 (concat (_ bv0 35) ?x258795)))\n (let ((?x216627 (bvmul (_ bv3435973837 64) ?x176012)))\n (let ((?x56340 ((_ extract 63 35) ?x216627)))\n (let ((?x229820 (concat (_ bv0 35) ?x56340)))\n (let ((?x275986 (bvmul (_ bv3435973837 64) ?x229820)))\n (let ((?x126387 ((_ extract 63 35) ?x275986)))\n (let ((?x57475 (concat (_ bv0 35) ?x126387)))\n (let ((?x237655 (bvmul (_ bv3435973837 64) ?x57475)))\n (let ((?x209669 ((_ extract 63 35) ?x237655)))\n (= ?x209669 (_ bv0 29)))))))))))))))))))))))\n(check-sat)\n",
    "time": 3.966362476348877,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=1, tm_hour=0, tm_min=2, tm_sec=23, tm_wday=1, tm_yday=336, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            4.133605003356934
        ]
    }
}