{
    "filename": "pr",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun mem_ffffffffffff8014_4813_32 () (_ BitVec 32))\n(assert\n (let (($x122938 (bvsle (_ bv4294965396 32) mem_ffffffffffff8014_4813_32)))\n (not $x122938)))\n(assert\n (let ((?x50630 (bvmul (_ bv4294967295 32) mem_ffffffffffff8014_4813_32)))\n (let ((?x125497 (bvadd (_ bv4294965396 32) ?x50630)))\n (let ((?x100612 (concat (_ bv0 32) ?x125497)))\n (let ((?x222848 (bvmul (_ bv3435973837 64) ?x100612)))\n (let ((?x242725 ((_ extract 63 35) ?x222848)))\n (let (($x239044 (= ?x242725 (_ bv0 29))))\n (not $x239044))))))))\n(assert\n (let ((?x50630 (bvmul (_ bv4294967295 32) mem_ffffffffffff8014_4813_32)))\n (let ((?x125497 (bvadd (_ bv4294965396 32) ?x50630)))\n (let ((?x100612 (concat (_ bv0 32) ?x125497)))\n (let ((?x222848 (bvmul (_ bv3435973837 64) ?x100612)))\n (let ((?x242725 ((_ extract 63 35) ?x222848)))\n (let ((?x27378 (concat (_ bv0 35) ?x242725)))\n (let ((?x158715 (bvmul (_ bv3435973837 64) ?x27378)))\n (let ((?x210198 ((_ extract 63 35) ?x158715)))\n (let (($x217771 (= ?x210198 (_ bv0 29))))\n (not $x217771)))))))))))\n(assert\n (let ((?x50630 (bvmul (_ bv4294967295 32) mem_ffffffffffff8014_4813_32)))\n (let ((?x125497 (bvadd (_ bv4294965396 32) ?x50630)))\n (let ((?x100612 (concat (_ bv0 32) ?x125497)))\n (let ((?x222848 (bvmul (_ bv3435973837 64) ?x100612)))\n (let ((?x242725 ((_ extract 63 35) ?x222848)))\n (let ((?x27378 (concat (_ bv0 35) ?x242725)))\n (let ((?x158715 (bvmul (_ bv3435973837 64) ?x27378)))\n (let ((?x210198 ((_ extract 63 35) ?x158715)))\n (let ((?x47415 (concat (_ bv0 35) ?x210198)))\n (let ((?x87814 (bvmul (_ bv3435973837 64) ?x47415)))\n (let ((?x133759 ((_ extract 63 35) ?x87814)))\n (= ?x133759 (_ bv0 29))))))))))))))\n(check-sat)\n",
    "time": 1.0409972667694092,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=11, tm_mday=30, tm_hour=22, tm_min=30, tm_sec=43, tm_wday=0, tm_yday=335, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            0.6020441055297852
        ]
    }
}