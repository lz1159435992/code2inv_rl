{
    "filename": "pr",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun mem_ffffffffce90000c_25901_32 () (_ BitVec 32))\n(assert\n (let (($x685884 (bvsle (_ bv4294965396 32) mem_ffffffffce90000c_25901_32)))\n (not $x685884)))\n(assert\n (let ((?x429184 (bvmul (_ bv4294967295 32) mem_ffffffffce90000c_25901_32)))\n (let ((?x645324 (bvadd (_ bv4294965396 32) ?x429184)))\n (let ((?x674392 (concat (_ bv0 32) ?x645324)))\n (let ((?x413386 (bvmul (_ bv3435973837 64) ?x674392)))\n (let ((?x609822 ((_ extract 63 35) ?x413386)))\n (let (($x770105 (= ?x609822 (_ bv0 29))))\n (not $x770105))))))))\n(assert\n (let ((?x429184 (bvmul (_ bv4294967295 32) mem_ffffffffce90000c_25901_32)))\n (let ((?x645324 (bvadd (_ bv4294965396 32) ?x429184)))\n (let ((?x674392 (concat (_ bv0 32) ?x645324)))\n (let ((?x413386 (bvmul (_ bv3435973837 64) ?x674392)))\n (let ((?x609822 ((_ extract 63 35) ?x413386)))\n (let ((?x590278 (concat (_ bv0 35) ?x609822)))\n (let ((?x533778 (bvmul (_ bv3435973837 64) ?x590278)))\n (let ((?x644004 ((_ extract 63 35) ?x533778)))\n (let (($x731067 (= ?x644004 (_ bv0 29))))\n (not $x731067)))))))))))\n(assert\n (let ((?x429184 (bvmul (_ bv4294967295 32) mem_ffffffffce90000c_25901_32)))\n (let ((?x645324 (bvadd (_ bv4294965396 32) ?x429184)))\n (let ((?x674392 (concat (_ bv0 32) ?x645324)))\n (let ((?x413386 (bvmul (_ bv3435973837 64) ?x674392)))\n (let ((?x609822 ((_ extract 63 35) ?x413386)))\n (let ((?x590278 (concat (_ bv0 35) ?x609822)))\n (let ((?x533778 (bvmul (_ bv3435973837 64) ?x590278)))\n (let ((?x644004 ((_ extract 63 35) ?x533778)))\n (let ((?x705747 (concat (_ bv0 35) ?x644004)))\n (let ((?x640859 (bvmul (_ bv3435973837 64) ?x705747)))\n (let ((?x753340 ((_ extract 63 35) ?x640859)))\n (let (($x776967 (= ?x753340 (_ bv0 29))))\n (not $x776967))))))))))))))\n(assert\n (let ((?x429184 (bvmul (_ bv4294967295 32) mem_ffffffffce90000c_25901_32)))\n (let ((?x645324 (bvadd (_ bv4294965396 32) ?x429184)))\n (let ((?x674392 (concat (_ bv0 32) ?x645324)))\n (let ((?x413386 (bvmul (_ bv3435973837 64) ?x674392)))\n (let ((?x609822 ((_ extract 63 35) ?x413386)))\n (let ((?x590278 (concat (_ bv0 35) ?x609822)))\n (let ((?x533778 (bvmul (_ bv3435973837 64) ?x590278)))\n (let ((?x644004 ((_ extract 63 35) ?x533778)))\n (let ((?x705747 (concat (_ bv0 35) ?x644004)))\n (let ((?x640859 (bvmul (_ bv3435973837 64) ?x705747)))\n (let ((?x753340 ((_ extract 63 35) ?x640859)))\n (let ((?x570562 (concat (_ bv0 35) ?x753340)))\n (let ((?x690955 (bvmul (_ bv3435973837 64) ?x570562)))\n (let ((?x683094 ((_ extract 63 35) ?x690955)))\n (let (($x768501 (= ?x683094 (_ bv0 29))))\n (not $x768501)))))))))))))))))\n(assert\n (let ((?x429184 (bvmul (_ bv4294967295 32) mem_ffffffffce90000c_25901_32)))\n (let ((?x645324 (bvadd (_ bv4294965396 32) ?x429184)))\n (let ((?x674392 (concat (_ bv0 32) ?x645324)))\n (let ((?x413386 (bvmul (_ bv3435973837 64) ?x674392)))\n (let ((?x609822 ((_ extract 63 35) ?x413386)))\n (let ((?x590278 (concat (_ bv0 35) ?x609822)))\n (let ((?x533778 (bvmul (_ bv3435973837 64) ?x590278)))\n (let ((?x644004 ((_ extract 63 35) ?x533778)))\n (let ((?x705747 (concat (_ bv0 35) ?x644004)))\n (let ((?x640859 (bvmul (_ bv3435973837 64) ?x705747)))\n (let ((?x753340 ((_ extract 63 35) ?x640859)))\n (let ((?x570562 (concat (_ bv0 35) ?x753340)))\n (let ((?x690955 (bvmul (_ bv3435973837 64) ?x570562)))\n (let ((?x683094 ((_ extract 63 35) ?x690955)))\n (let ((?x753383 (concat (_ bv0 35) ?x683094)))\n (let ((?x621135 (bvmul (_ bv3435973837 64) ?x753383)))\n (let ((?x289807 ((_ extract 63 35) ?x621135)))\n (let (($x768012 (= ?x289807 (_ bv0 29))))\n (not $x768012))))))))))))))))))))\n(assert\n (let ((?x429184 (bvmul (_ bv4294967295 32) mem_ffffffffce90000c_25901_32)))\n (let ((?x645324 (bvadd (_ bv4294965396 32) ?x429184)))\n (let ((?x674392 (concat (_ bv0 32) ?x645324)))\n (let ((?x413386 (bvmul (_ bv3435973837 64) ?x674392)))\n (let ((?x609822 ((_ extract 63 35) ?x413386)))\n (let ((?x590278 (concat (_ bv0 35) ?x609822)))\n (let ((?x533778 (bvmul (_ bv3435973837 64) ?x590278)))\n (let ((?x644004 ((_ extract 63 35) ?x533778)))\n (let ((?x705747 (concat (_ bv0 35) ?x644004)))\n (let ((?x640859 (bvmul (_ bv3435973837 64) ?x705747)))\n (let ((?x753340 ((_ extract 63 35) ?x640859)))\n (let ((?x570562 (concat (_ bv0 35) ?x753340)))\n (let ((?x690955 (bvmul (_ bv3435973837 64) ?x570562)))\n (let ((?x683094 ((_ extract 63 35) ?x690955)))\n (let ((?x753383 (concat (_ bv0 35) ?x683094)))\n (let ((?x621135 (bvmul (_ bv3435973837 64) ?x753383)))\n (let ((?x289807 ((_ extract 63 35) ?x621135)))\n (let ((?x345691 (concat (_ bv0 35) ?x289807)))\n (let ((?x593192 (bvmul (_ bv3435973837 64) ?x345691)))\n (let ((?x597866 ((_ extract 63 35) ?x593192)))\n (let (($x774235 (= ?x597866 (_ bv0 29))))\n (not $x774235)))))))))))))))))))))))\n(assert\n (let ((?x429184 (bvmul (_ bv4294967295 32) mem_ffffffffce90000c_25901_32)))\n (let ((?x645324 (bvadd (_ bv4294965396 32) ?x429184)))\n (let ((?x674392 (concat (_ bv0 32) ?x645324)))\n (let ((?x413386 (bvmul (_ bv3435973837 64) ?x674392)))\n (let ((?x609822 ((_ extract 63 35) ?x413386)))\n (let ((?x590278 (concat (_ bv0 35) ?x609822)))\n (let ((?x533778 (bvmul (_ bv3435973837 64) ?x590278)))\n (let ((?x644004 ((_ extract 63 35) ?x533778)))\n (let ((?x705747 (concat (_ bv0 35) ?x644004)))\n (let ((?x640859 (bvmul (_ bv3435973837 64) ?x705747)))\n (let ((?x753340 ((_ extract 63 35) ?x640859)))\n (let ((?x570562 (concat (_ bv0 35) ?x753340)))\n (let ((?x690955 (bvmul (_ bv3435973837 64) ?x570562)))\n (let ((?x683094 ((_ extract 63 35) ?x690955)))\n (let ((?x753383 (concat (_ bv0 35) ?x683094)))\n (let ((?x621135 (bvmul (_ bv3435973837 64) ?x753383)))\n (let ((?x289807 ((_ extract 63 35) ?x621135)))\n (let ((?x345691 (concat (_ bv0 35) ?x289807)))\n (let ((?x593192 (bvmul (_ bv3435973837 64) ?x345691)))\n (let ((?x597866 ((_ extract 63 35) ?x593192)))\n (let ((?x391890 (concat (_ bv0 35) ?x597866)))\n (let ((?x116326 (bvmul (_ bv3435973837 64) ?x391890)))\n (let ((?x713351 ((_ extract 63 35) ?x116326)))\n (let (($x730210 (= ?x713351 (_ bv0 29))))\n (not $x730210))))))))))))))))))))))))))\n(assert\n (let ((?x429184 (bvmul (_ bv4294967295 32) mem_ffffffffce90000c_25901_32)))\n (let ((?x645324 (bvadd (_ bv4294965396 32) ?x429184)))\n (let ((?x674392 (concat (_ bv0 32) ?x645324)))\n (let ((?x413386 (bvmul (_ bv3435973837 64) ?x674392)))\n (let ((?x609822 ((_ extract 63 35) ?x413386)))\n (let ((?x590278 (concat (_ bv0 35) ?x609822)))\n (let ((?x533778 (bvmul (_ bv3435973837 64) ?x590278)))\n (let ((?x644004 ((_ extract 63 35) ?x533778)))\n (let ((?x705747 (concat (_ bv0 35) ?x644004)))\n (let ((?x640859 (bvmul (_ bv3435973837 64) ?x705747)))\n (let ((?x753340 ((_ extract 63 35) ?x640859)))\n (let ((?x570562 (concat (_ bv0 35) ?x753340)))\n (let ((?x690955 (bvmul (_ bv3435973837 64) ?x570562)))\n (let ((?x683094 ((_ extract 63 35) ?x690955)))\n (let ((?x753383 (concat (_ bv0 35) ?x683094)))\n (let ((?x621135 (bvmul (_ bv3435973837 64) ?x753383)))\n (let ((?x289807 ((_ extract 63 35) ?x621135)))\n (let ((?x345691 (concat (_ bv0 35) ?x289807)))\n (let ((?x593192 (bvmul (_ bv3435973837 64) ?x345691)))\n (let ((?x597866 ((_ extract 63 35) ?x593192)))\n (let ((?x391890 (concat (_ bv0 35) ?x597866)))\n (let ((?x116326 (bvmul (_ bv3435973837 64) ?x391890)))\n (let ((?x713351 ((_ extract 63 35) ?x116326)))\n (let ((?x591268 (concat (_ bv0 35) ?x713351)))\n (let ((?x632823 (bvmul (_ bv3435973837 64) ?x591268)))\n (let ((?x612475 ((_ extract 63 35) ?x632823)))\n (let (($x713213 (= ?x612475 (_ bv0 29))))\n (not $x713213)))))))))))))))))))))))))))))\n(assert\n (let ((?x429184 (bvmul (_ bv4294967295 32) mem_ffffffffce90000c_25901_32)))\n (let ((?x645324 (bvadd (_ bv4294965396 32) ?x429184)))\n (let ((?x674392 (concat (_ bv0 32) ?x645324)))\n (let ((?x413386 (bvmul (_ bv3435973837 64) ?x674392)))\n (let ((?x609822 ((_ extract 63 35) ?x413386)))\n (let ((?x590278 (concat (_ bv0 35) ?x609822)))\n (let ((?x533778 (bvmul (_ bv3435973837 64) ?x590278)))\n (let ((?x644004 ((_ extract 63 35) ?x533778)))\n (let ((?x705747 (concat (_ bv0 35) ?x644004)))\n (let ((?x640859 (bvmul (_ bv3435973837 64) ?x705747)))\n (let ((?x753340 ((_ extract 63 35) ?x640859)))\n (let ((?x570562 (concat (_ bv0 35) ?x753340)))\n (let ((?x690955 (bvmul (_ bv3435973837 64) ?x570562)))\n (let ((?x683094 ((_ extract 63 35) ?x690955)))\n (let ((?x753383 (concat (_ bv0 35) ?x683094)))\n (let ((?x621135 (bvmul (_ bv3435973837 64) ?x753383)))\n (let ((?x289807 ((_ extract 63 35) ?x621135)))\n (let ((?x345691 (concat (_ bv0 35) ?x289807)))\n (let ((?x593192 (bvmul (_ bv3435973837 64) ?x345691)))\n (let ((?x597866 ((_ extract 63 35) ?x593192)))\n (let ((?x391890 (concat (_ bv0 35) ?x597866)))\n (let ((?x116326 (bvmul (_ bv3435973837 64) ?x391890)))\n (let ((?x713351 ((_ extract 63 35) ?x116326)))\n (let ((?x591268 (concat (_ bv0 35) ?x713351)))\n (let ((?x632823 (bvmul (_ bv3435973837 64) ?x591268)))\n (let ((?x612475 ((_ extract 63 35) ?x632823)))\n (let ((?x407362 (concat (_ bv0 35) ?x612475)))\n (let ((?x749651 (bvmul (_ bv3435973837 64) ?x407362)))\n (let ((?x769046 ((_ extract 63 35) ?x749651)))\n (= ?x769046 (_ bv0 29))))))))))))))))))))))))))))))))\n(check-sat)\n",
    "time": 4.732762575149536,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=1, tm_hour=8, tm_min=34, tm_sec=48, tm_wday=1, tm_yday=336, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            5.831557989120483
        ]
    }
}