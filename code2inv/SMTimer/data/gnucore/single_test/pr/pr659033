{
    "filename": "pr",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun mem_ffffffffdc000014_23713_32 () (_ BitVec 32))\n(assert\n (let (($x486779 (bvsle (_ bv4294965396 32) mem_ffffffffdc000014_23713_32)))\n (not $x486779)))\n(assert\n (let ((?x311212 (bvmul (_ bv4294967295 32) mem_ffffffffdc000014_23713_32)))\n (let ((?x6667 (bvadd (_ bv4294965396 32) ?x311212)))\n (let ((?x56708 (concat (_ bv0 32) ?x6667)))\n (let ((?x325189 (bvmul (_ bv3435973837 64) ?x56708)))\n (let ((?x183747 ((_ extract 63 35) ?x325189)))\n (let (($x6184 (= ?x183747 (_ bv0 29))))\n (not $x6184))))))))\n(assert\n (let ((?x311212 (bvmul (_ bv4294967295 32) mem_ffffffffdc000014_23713_32)))\n (let ((?x6667 (bvadd (_ bv4294965396 32) ?x311212)))\n (let ((?x56708 (concat (_ bv0 32) ?x6667)))\n (let ((?x325189 (bvmul (_ bv3435973837 64) ?x56708)))\n (let ((?x183747 ((_ extract 63 35) ?x325189)))\n (let ((?x268170 (concat (_ bv0 35) ?x183747)))\n (let ((?x484568 (bvmul (_ bv3435973837 64) ?x268170)))\n (let ((?x84430 ((_ extract 63 35) ?x484568)))\n (let (($x472150 (= ?x84430 (_ bv0 29))))\n (not $x472150)))))))))))\n(assert\n (let ((?x311212 (bvmul (_ bv4294967295 32) mem_ffffffffdc000014_23713_32)))\n (let ((?x6667 (bvadd (_ bv4294965396 32) ?x311212)))\n (let ((?x56708 (concat (_ bv0 32) ?x6667)))\n (let ((?x325189 (bvmul (_ bv3435973837 64) ?x56708)))\n (let ((?x183747 ((_ extract 63 35) ?x325189)))\n (let ((?x268170 (concat (_ bv0 35) ?x183747)))\n (let ((?x484568 (bvmul (_ bv3435973837 64) ?x268170)))\n (let ((?x84430 ((_ extract 63 35) ?x484568)))\n (let ((?x301460 (concat (_ bv0 35) ?x84430)))\n (let ((?x100577 (bvmul (_ bv3435973837 64) ?x301460)))\n (let ((?x381272 ((_ extract 63 35) ?x100577)))\n (let (($x410397 (= ?x381272 (_ bv0 29))))\n (not $x410397))))))))))))))\n(assert\n (let ((?x311212 (bvmul (_ bv4294967295 32) mem_ffffffffdc000014_23713_32)))\n (let ((?x6667 (bvadd (_ bv4294965396 32) ?x311212)))\n (let ((?x56708 (concat (_ bv0 32) ?x6667)))\n (let ((?x325189 (bvmul (_ bv3435973837 64) ?x56708)))\n (let ((?x183747 ((_ extract 63 35) ?x325189)))\n (let ((?x268170 (concat (_ bv0 35) ?x183747)))\n (let ((?x484568 (bvmul (_ bv3435973837 64) ?x268170)))\n (let ((?x84430 ((_ extract 63 35) ?x484568)))\n (let ((?x301460 (concat (_ bv0 35) ?x84430)))\n (let ((?x100577 (bvmul (_ bv3435973837 64) ?x301460)))\n (let ((?x381272 ((_ extract 63 35) ?x100577)))\n (let ((?x372652 (concat (_ bv0 35) ?x381272)))\n (let ((?x317348 (bvmul (_ bv3435973837 64) ?x372652)))\n (let ((?x129759 ((_ extract 63 35) ?x317348)))\n (let (($x286400 (= ?x129759 (_ bv0 29))))\n (not $x286400)))))))))))))))))\n(assert\n (let ((?x311212 (bvmul (_ bv4294967295 32) mem_ffffffffdc000014_23713_32)))\n (let ((?x6667 (bvadd (_ bv4294965396 32) ?x311212)))\n (let ((?x56708 (concat (_ bv0 32) ?x6667)))\n (let ((?x325189 (bvmul (_ bv3435973837 64) ?x56708)))\n (let ((?x183747 ((_ extract 63 35) ?x325189)))\n (let ((?x268170 (concat (_ bv0 35) ?x183747)))\n (let ((?x484568 (bvmul (_ bv3435973837 64) ?x268170)))\n (let ((?x84430 ((_ extract 63 35) ?x484568)))\n (let ((?x301460 (concat (_ bv0 35) ?x84430)))\n (let ((?x100577 (bvmul (_ bv3435973837 64) ?x301460)))\n (let ((?x381272 ((_ extract 63 35) ?x100577)))\n (let ((?x372652 (concat (_ bv0 35) ?x381272)))\n (let ((?x317348 (bvmul (_ bv3435973837 64) ?x372652)))\n (let ((?x129759 ((_ extract 63 35) ?x317348)))\n (let ((?x354672 (concat (_ bv0 35) ?x129759)))\n (let ((?x183855 (bvmul (_ bv3435973837 64) ?x354672)))\n (let ((?x17213 ((_ extract 63 35) ?x183855)))\n (let (($x504719 (= ?x17213 (_ bv0 29))))\n (not $x504719))))))))))))))))))))\n(assert\n (let ((?x311212 (bvmul (_ bv4294967295 32) mem_ffffffffdc000014_23713_32)))\n (let ((?x6667 (bvadd (_ bv4294965396 32) ?x311212)))\n (let ((?x56708 (concat (_ bv0 32) ?x6667)))\n (let ((?x325189 (bvmul (_ bv3435973837 64) ?x56708)))\n (let ((?x183747 ((_ extract 63 35) ?x325189)))\n (let ((?x268170 (concat (_ bv0 35) ?x183747)))\n (let ((?x484568 (bvmul (_ bv3435973837 64) ?x268170)))\n (let ((?x84430 ((_ extract 63 35) ?x484568)))\n (let ((?x301460 (concat (_ bv0 35) ?x84430)))\n (let ((?x100577 (bvmul (_ bv3435973837 64) ?x301460)))\n (let ((?x381272 ((_ extract 63 35) ?x100577)))\n (let ((?x372652 (concat (_ bv0 35) ?x381272)))\n (let ((?x317348 (bvmul (_ bv3435973837 64) ?x372652)))\n (let ((?x129759 ((_ extract 63 35) ?x317348)))\n (let ((?x354672 (concat (_ bv0 35) ?x129759)))\n (let ((?x183855 (bvmul (_ bv3435973837 64) ?x354672)))\n (let ((?x17213 ((_ extract 63 35) ?x183855)))\n (let ((?x92595 (concat (_ bv0 35) ?x17213)))\n (let ((?x167141 (bvmul (_ bv3435973837 64) ?x92595)))\n (let ((?x133335 ((_ extract 63 35) ?x167141)))\n (let (($x194165 (= ?x133335 (_ bv0 29))))\n (not $x194165)))))))))))))))))))))))\n(assert\n (let ((?x311212 (bvmul (_ bv4294967295 32) mem_ffffffffdc000014_23713_32)))\n (let ((?x6667 (bvadd (_ bv4294965396 32) ?x311212)))\n (let ((?x56708 (concat (_ bv0 32) ?x6667)))\n (let ((?x325189 (bvmul (_ bv3435973837 64) ?x56708)))\n (let ((?x183747 ((_ extract 63 35) ?x325189)))\n (let ((?x268170 (concat (_ bv0 35) ?x183747)))\n (let ((?x484568 (bvmul (_ bv3435973837 64) ?x268170)))\n (let ((?x84430 ((_ extract 63 35) ?x484568)))\n (let ((?x301460 (concat (_ bv0 35) ?x84430)))\n (let ((?x100577 (bvmul (_ bv3435973837 64) ?x301460)))\n (let ((?x381272 ((_ extract 63 35) ?x100577)))\n (let ((?x372652 (concat (_ bv0 35) ?x381272)))\n (let ((?x317348 (bvmul (_ bv3435973837 64) ?x372652)))\n (let ((?x129759 ((_ extract 63 35) ?x317348)))\n (let ((?x354672 (concat (_ bv0 35) ?x129759)))\n (let ((?x183855 (bvmul (_ bv3435973837 64) ?x354672)))\n (let ((?x17213 ((_ extract 63 35) ?x183855)))\n (let ((?x92595 (concat (_ bv0 35) ?x17213)))\n (let ((?x167141 (bvmul (_ bv3435973837 64) ?x92595)))\n (let ((?x133335 ((_ extract 63 35) ?x167141)))\n (let ((?x409305 (concat (_ bv0 35) ?x133335)))\n (let ((?x526688 (bvmul (_ bv3435973837 64) ?x409305)))\n (let ((?x414460 ((_ extract 63 35) ?x526688)))\n (= ?x414460 (_ bv0 29))))))))))))))))))))))))))\n(check-sat)\n",
    "time": 3.2358851432800293,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=1, tm_hour=7, tm_min=9, tm_sec=59, tm_wday=1, tm_yday=336, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            7.02969765663147
        ]
    }
}