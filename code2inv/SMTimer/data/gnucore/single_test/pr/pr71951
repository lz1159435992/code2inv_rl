{
    "filename": "pr",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun mem_fffffff000000014_4117_32 () (_ BitVec 32))\n(assert\n (let (($x113561 (bvsle (_ bv4294965396 32) mem_fffffff000000014_4117_32)))\n (not $x113561)))\n(assert\n (let ((?x230027 (bvmul (_ bv4294967295 32) mem_fffffff000000014_4117_32)))\n (let ((?x252365 (bvadd (_ bv4294965396 32) ?x230027)))\n (let ((?x43889 (concat (_ bv0 32) ?x252365)))\n (let ((?x186713 (bvmul (_ bv3435973837 64) ?x43889)))\n (let ((?x25667 ((_ extract 63 35) ?x186713)))\n (let (($x197246 (= ?x25667 (_ bv0 29))))\n (not $x197246))))))))\n(assert\n (let ((?x230027 (bvmul (_ bv4294967295 32) mem_fffffff000000014_4117_32)))\n (let ((?x252365 (bvadd (_ bv4294965396 32) ?x230027)))\n (let ((?x43889 (concat (_ bv0 32) ?x252365)))\n (let ((?x186713 (bvmul (_ bv3435973837 64) ?x43889)))\n (let ((?x25667 ((_ extract 63 35) ?x186713)))\n (let ((?x61381 (concat (_ bv0 35) ?x25667)))\n (let ((?x158034 (bvmul (_ bv3435973837 64) ?x61381)))\n (let ((?x151976 ((_ extract 63 35) ?x158034)))\n (let (($x160844 (= ?x151976 (_ bv0 29))))\n (not $x160844)))))))))))\n(assert\n (let ((?x230027 (bvmul (_ bv4294967295 32) mem_fffffff000000014_4117_32)))\n (let ((?x252365 (bvadd (_ bv4294965396 32) ?x230027)))\n (let ((?x43889 (concat (_ bv0 32) ?x252365)))\n (let ((?x186713 (bvmul (_ bv3435973837 64) ?x43889)))\n (let ((?x25667 ((_ extract 63 35) ?x186713)))\n (let ((?x61381 (concat (_ bv0 35) ?x25667)))\n (let ((?x158034 (bvmul (_ bv3435973837 64) ?x61381)))\n (let ((?x151976 ((_ extract 63 35) ?x158034)))\n (let ((?x1470 (concat (_ bv0 35) ?x151976)))\n (let ((?x162966 (bvmul (_ bv3435973837 64) ?x1470)))\n (let ((?x118332 ((_ extract 63 35) ?x162966)))\n (= ?x118332 (_ bv0 29))))))))))))))\n(check-sat)\n",
    "time": 1.0586042404174805,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=11, tm_mday=30, tm_hour=22, tm_min=17, tm_sec=10, tm_wday=0, tm_yday=335, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            0.4728832244873047
        ]
    }
}