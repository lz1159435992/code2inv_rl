{
    "filename": "pr",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun mem_ffffffffe0000014_12355_32 () (_ BitVec 32))\n(assert\n (let (($x370596 (bvsle (_ bv4294965396 32) mem_ffffffffe0000014_12355_32)))\n (not $x370596)))\n(assert\n (let ((?x368400 (bvmul (_ bv4294967295 32) mem_ffffffffe0000014_12355_32)))\n (let ((?x366167 (bvadd (_ bv4294965396 32) ?x368400)))\n (let ((?x128940 (concat (_ bv0 32) ?x366167)))\n (let ((?x361033 (bvmul (_ bv3435973837 64) ?x128940)))\n (let ((?x261981 ((_ extract 63 35) ?x361033)))\n (let (($x13843 (= ?x261981 (_ bv0 29))))\n (not $x13843))))))))\n(assert\n (let ((?x368400 (bvmul (_ bv4294967295 32) mem_ffffffffe0000014_12355_32)))\n (let ((?x366167 (bvadd (_ bv4294965396 32) ?x368400)))\n (let ((?x128940 (concat (_ bv0 32) ?x366167)))\n (let ((?x361033 (bvmul (_ bv3435973837 64) ?x128940)))\n (let ((?x261981 ((_ extract 63 35) ?x361033)))\n (let ((?x357974 (concat (_ bv0 35) ?x261981)))\n (let ((?x193871 (bvmul (_ bv3435973837 64) ?x357974)))\n (let ((?x326818 ((_ extract 63 35) ?x193871)))\n (let (($x6200 (= ?x326818 (_ bv0 29))))\n (not $x6200)))))))))))\n(assert\n (let ((?x368400 (bvmul (_ bv4294967295 32) mem_ffffffffe0000014_12355_32)))\n (let ((?x366167 (bvadd (_ bv4294965396 32) ?x368400)))\n (let ((?x128940 (concat (_ bv0 32) ?x366167)))\n (let ((?x361033 (bvmul (_ bv3435973837 64) ?x128940)))\n (let ((?x261981 ((_ extract 63 35) ?x361033)))\n (let ((?x357974 (concat (_ bv0 35) ?x261981)))\n (let ((?x193871 (bvmul (_ bv3435973837 64) ?x357974)))\n (let ((?x326818 ((_ extract 63 35) ?x193871)))\n (let ((?x154996 (concat (_ bv0 35) ?x326818)))\n (let ((?x220622 (bvmul (_ bv3435973837 64) ?x154996)))\n (let ((?x353139 ((_ extract 63 35) ?x220622)))\n (let (($x353488 (= ?x353139 (_ bv0 29))))\n (not $x353488))))))))))))))\n(assert\n (let ((?x368400 (bvmul (_ bv4294967295 32) mem_ffffffffe0000014_12355_32)))\n (let ((?x366167 (bvadd (_ bv4294965396 32) ?x368400)))\n (let ((?x128940 (concat (_ bv0 32) ?x366167)))\n (let ((?x361033 (bvmul (_ bv3435973837 64) ?x128940)))\n (let ((?x261981 ((_ extract 63 35) ?x361033)))\n (let ((?x357974 (concat (_ bv0 35) ?x261981)))\n (let ((?x193871 (bvmul (_ bv3435973837 64) ?x357974)))\n (let ((?x326818 ((_ extract 63 35) ?x193871)))\n (let ((?x154996 (concat (_ bv0 35) ?x326818)))\n (let ((?x220622 (bvmul (_ bv3435973837 64) ?x154996)))\n (let ((?x353139 ((_ extract 63 35) ?x220622)))\n (let ((?x50887 (concat (_ bv0 35) ?x353139)))\n (let ((?x113293 (bvmul (_ bv3435973837 64) ?x50887)))\n (let ((?x354007 ((_ extract 63 35) ?x113293)))\n (let (($x27083 (= ?x354007 (_ bv0 29))))\n (not $x27083)))))))))))))))))\n(assert\n (let ((?x368400 (bvmul (_ bv4294967295 32) mem_ffffffffe0000014_12355_32)))\n (let ((?x366167 (bvadd (_ bv4294965396 32) ?x368400)))\n (let ((?x128940 (concat (_ bv0 32) ?x366167)))\n (let ((?x361033 (bvmul (_ bv3435973837 64) ?x128940)))\n (let ((?x261981 ((_ extract 63 35) ?x361033)))\n (let ((?x357974 (concat (_ bv0 35) ?x261981)))\n (let ((?x193871 (bvmul (_ bv3435973837 64) ?x357974)))\n (let ((?x326818 ((_ extract 63 35) ?x193871)))\n (let ((?x154996 (concat (_ bv0 35) ?x326818)))\n (let ((?x220622 (bvmul (_ bv3435973837 64) ?x154996)))\n (let ((?x353139 ((_ extract 63 35) ?x220622)))\n (let ((?x50887 (concat (_ bv0 35) ?x353139)))\n (let ((?x113293 (bvmul (_ bv3435973837 64) ?x50887)))\n (let ((?x354007 ((_ extract 63 35) ?x113293)))\n (let ((?x202466 (concat (_ bv0 35) ?x354007)))\n (let ((?x112686 (bvmul (_ bv3435973837 64) ?x202466)))\n (let ((?x314347 ((_ extract 63 35) ?x112686)))\n (let (($x306982 (= ?x314347 (_ bv0 29))))\n (not $x306982))))))))))))))))))))\n(assert\n (let ((?x368400 (bvmul (_ bv4294967295 32) mem_ffffffffe0000014_12355_32)))\n (let ((?x366167 (bvadd (_ bv4294965396 32) ?x368400)))\n (let ((?x128940 (concat (_ bv0 32) ?x366167)))\n (let ((?x361033 (bvmul (_ bv3435973837 64) ?x128940)))\n (let ((?x261981 ((_ extract 63 35) ?x361033)))\n (let ((?x357974 (concat (_ bv0 35) ?x261981)))\n (let ((?x193871 (bvmul (_ bv3435973837 64) ?x357974)))\n (let ((?x326818 ((_ extract 63 35) ?x193871)))\n (let ((?x154996 (concat (_ bv0 35) ?x326818)))\n (let ((?x220622 (bvmul (_ bv3435973837 64) ?x154996)))\n (let ((?x353139 ((_ extract 63 35) ?x220622)))\n (let ((?x50887 (concat (_ bv0 35) ?x353139)))\n (let ((?x113293 (bvmul (_ bv3435973837 64) ?x50887)))\n (let ((?x354007 ((_ extract 63 35) ?x113293)))\n (let ((?x202466 (concat (_ bv0 35) ?x354007)))\n (let ((?x112686 (bvmul (_ bv3435973837 64) ?x202466)))\n (let ((?x314347 ((_ extract 63 35) ?x112686)))\n (let ((?x30282 (concat (_ bv0 35) ?x314347)))\n (let ((?x128459 (bvmul (_ bv3435973837 64) ?x30282)))\n (let ((?x181637 ((_ extract 63 35) ?x128459)))\n (= ?x181637 (_ bv0 29)))))))))))))))))))))))\n(check-sat)\n",
    "time": 3.387856960296631,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=1, tm_hour=1, tm_min=12, tm_sec=38, tm_wday=1, tm_yday=336, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            3.842844247817993
        ]
    }
}