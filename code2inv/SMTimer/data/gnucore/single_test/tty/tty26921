{
    "filename": "tty",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun unconstrained_ret_mbrtowc_1254_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_1150_64 () (_ BitVec 64))\n(declare-fun sym_argv_0_80 () (_ BitVec 80))\n(declare-fun strlen_1020_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_1044_64 () (_ BitVec 64))\n(assert\n (let (($x44580 (= (_ bv0 64) unconstrained_ret_mbrtowc_1254_64)))\n (not $x44580)))\n(assert\n (let (($x26813 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1254_64)))\n (not $x26813)))\n(assert\n (let (($x28581 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1254_64)))\n (not $x28581)))\n(assert\n (let (($x19912 (= (_ bv0 64) unconstrained_ret_mbrtowc_1150_64)))\n (not $x19912)))\n(assert\n (let (($x17694 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1150_64)))\n (not $x17694)))\n(assert\n (let (($x32476 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1150_64)))\n (not $x32476)))\n(assert\n (let ((?x251 ((_ extract 47 47) sym_argv_0_80)))\n (= (_ bv0 1) ?x251)))\n(assert\n (let ((?x292 ((_ extract 39 39) sym_argv_0_80)))\n (= (_ bv0 1) ?x292)))\n(assert\n (let ((?x220 ((_ extract 31 31) sym_argv_0_80)))\n (= (_ bv0 1) ?x220)))\n(assert\n (let ((?x368 ((_ extract 23 23) sym_argv_0_80)))\n (= (_ bv0 1) ?x368)))\n(assert\n (let ((?x229 ((_ extract 15 15) sym_argv_0_80)))\n (= (_ bv0 1) ?x229)))\n(assert\n (let ((?x346 ((_ extract 7 7) sym_argv_0_80)))\n (= (_ bv0 1) ?x346)))\n(assert\n (let ((?x253 ((_ extract 46 40) sym_argv_0_80)))\n (bvule ?x253 (_ bv126 7))))\n(assert\n (let ((?x283 ((_ extract 38 32) sym_argv_0_80)))\n (bvule ?x283 (_ bv126 7))))\n(assert\n (let ((?x372 ((_ extract 30 24) sym_argv_0_80)))\n (bvule ?x372 (_ bv126 7))))\n(assert\n (let ((?x370 ((_ extract 22 16) sym_argv_0_80)))\n (bvule ?x370 (_ bv126 7))))\n(assert\n (let ((?x362 ((_ extract 14 8) sym_argv_0_80)))\n (bvule ?x362 (_ bv126 7))))\n(assert\n (let ((?x345 ((_ extract 6 0) sym_argv_0_80)))\n (bvule ?x345 (_ bv126 7))))\n(assert\n (let ((?x16 ((_ extract 79 72) sym_argv_0_80)))\n (= (_ bv12 8) ?x16)))\n(assert\n (let ((?x24 ((_ extract 71 64) sym_argv_0_80)))\n (= (_ bv63 8) ?x24)))\n(assert\n (let ((?x18 ((_ extract 63 56) sym_argv_0_80)))\n (= (_ bv12 8) ?x18)))\n(assert\n (let ((?x10754 ((_ extract 53 48) sym_argv_0_80)))\n (let (($x10724 (bvule ?x10754 (_ bv39 6))))\n (let ((?x10647 ((_ extract 55 54) sym_argv_0_80)))\n (let (($x12716 (= (_ bv0 2) ?x10647)))\n (let (($x15566 (and $x12716 $x10724)))\n (let ((?x13176 (ite $x15566 (_ bv2 8) (_ bv1 8))))\n (let (($x17634 (= (_ bv0 8) ?x13176)))\n (not $x17634)))))))))\n(assert\n (let ((?x31 ((_ extract 55 48) sym_argv_0_80)))\n (= (_ bv64 8) ?x31)))\n(assert\n (let ((?x36624 (bvadd (_ bv576460752303357894 64) strlen_1020_64)))\n (let ((?x35 ((_ extract 7 0) sym_argv_0_80)))\n (let (($x2645 (= (_ bv0 8) ?x35)))\n (let ((?x1986 (ite $x2645 (_ bv576460752303357903 64) (_ bv576460752303357904 64))))\n (let ((?x19 ((_ extract 15 8) sym_argv_0_80)))\n (let (($x2582 (= (_ bv0 8) ?x19)))\n (let ((?x2698 (ite $x2582 (_ bv576460752303357902 64) ?x1986)))\n (let ((?x21 ((_ extract 23 16) sym_argv_0_80)))\n (let (($x2716 (= (_ bv0 8) ?x21)))\n (let ((?x3108 (ite $x2716 (_ bv576460752303357901 64) ?x2698)))\n (let ((?x23 ((_ extract 31 24) sym_argv_0_80)))\n (let (($x3161 (= (_ bv0 8) ?x23)))\n (let ((?x3479 (ite $x3161 (_ bv576460752303357900 64) ?x3108)))\n (let ((?x27 ((_ extract 39 32) sym_argv_0_80)))\n (let (($x2922 (= (_ bv0 8) ?x27)))\n (let ((?x3076 (ite $x2922 (_ bv576460752303357899 64) ?x3479)))\n (let ((?x29 ((_ extract 47 40) sym_argv_0_80)))\n (let (($x2620 (= (_ bv0 8) ?x29)))\n (let ((?x3006 (ite $x2620 (_ bv576460752303357898 64) ?x3076)))\n (= ?x3006 ?x36624)))))))))))))))))))))\n(assert\n (let (($x36613 (= (_ bv0 64) unconstrained_ret_mbrtowc_1044_64)))\n (not $x36613)))\n(assert\n (let (($x16017 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1044_64)))\n (not $x16017)))\n(assert\n (let (($x13377 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1044_64)))\n (not $x13377)))\n(assert\n (let ((?x18022 (bvadd (_ bv3 64) unconstrained_ret_mbrtowc_1044_64)))\n (let ((?x31993 (bvadd ?x18022 unconstrained_ret_mbrtowc_1150_64)))\n (let ((?x8129 (bvadd ?x31993 unconstrained_ret_mbrtowc_1254_64)))\n (let (($x40354 (bvule strlen_1020_64 ?x8129)))\n (not $x40354))))))\n(assert\n (let ((?x25209 (bvadd (_ bv576460752303357897 64) unconstrained_ret_mbrtowc_1044_64)))\n (let ((?x18389 (bvadd ?x25209 unconstrained_ret_mbrtowc_1150_64)))\n (let ((?x8784 (bvadd ?x18389 unconstrained_ret_mbrtowc_1254_64)))\n (bvule (_ bv576460752303357894 64) ?x8784)))))\n(assert\n (let ((?x25209 (bvadd (_ bv576460752303357897 64) unconstrained_ret_mbrtowc_1044_64)))\n (let ((?x18389 (bvadd ?x25209 unconstrained_ret_mbrtowc_1150_64)))\n (let ((?x8784 (bvadd ?x18389 unconstrained_ret_mbrtowc_1254_64)))\n (let ((?x3605 ((_ extract 63 59) ?x8784)))\n (= (_ bv0 5) ?x3605))))))\n(assert\n (let ((?x7771 ((_ extract 58 0) unconstrained_ret_mbrtowc_1254_64)))\n (let ((?x15002 ((_ extract 58 0) unconstrained_ret_mbrtowc_1150_64)))\n (let ((?x18523 ((_ extract 58 0) unconstrained_ret_mbrtowc_1044_64)))\n (let ((?x35729 (bvadd (_ bv576460752303357897 59) ?x18523)))\n (let ((?x37559 (bvadd ?x35729 ?x15002)))\n (let ((?x38869 (bvadd ?x37559 ?x7771)))\n (bvule ?x38869 (_ bv576460752303357903 59)))))))))\n(assert\n (let ((?x302 (bvadd unconstrained_ret_mbrtowc_1044_64 unconstrained_ret_mbrtowc_1150_64)))\n (let ((?x40662 (bvadd ?x302 unconstrained_ret_mbrtowc_1254_64)))\n (let ((?x6253 (bvadd ?x40662 (_ bv576460752303357897 64))))\n (let (($x4826 (and (distinct (_ bv576460752303357902 64) ?x6253) true)))\n (let (($x6208 (and (distinct (_ bv576460752303357894 64) ?x6253) true)))\n (let (($x204 (and (distinct (_ bv576460752303357897 64) ?x6253) true)))\n (let (($x29375 (and (distinct (_ bv576460752303357896 64) ?x6253) true)))\n (let (($x11331 (and (distinct (_ bv576460752303357903 64) ?x6253) true)))\n (and $x11331 $x29375 $x204 $x6208 $x4826))))))))))\n(assert\n (let ((?x302 (bvadd unconstrained_ret_mbrtowc_1044_64 unconstrained_ret_mbrtowc_1150_64)))\n (let ((?x40662 (bvadd ?x302 unconstrained_ret_mbrtowc_1254_64)))\n (let ((?x6253 (bvadd ?x40662 (_ bv576460752303357897 64))))\n (and (distinct ?x6253 (_ bv576460752303357898 64)) true)))))\n(assert\n (let ((?x302 (bvadd unconstrained_ret_mbrtowc_1044_64 unconstrained_ret_mbrtowc_1150_64)))\n (let ((?x40662 (bvadd ?x302 unconstrained_ret_mbrtowc_1254_64)))\n (let ((?x6253 (bvadd ?x40662 (_ bv576460752303357897 64))))\n (and (distinct ?x6253 (_ bv576460752303357895 64)) true)))))\n(assert\n (let ((?x302 (bvadd unconstrained_ret_mbrtowc_1044_64 unconstrained_ret_mbrtowc_1150_64)))\n (let ((?x40662 (bvadd ?x302 unconstrained_ret_mbrtowc_1254_64)))\n (let ((?x6253 (bvadd ?x40662 (_ bv576460752303357897 64))))\n (and (distinct ?x6253 (_ bv576460752303357899 64)) true)))))\n(assert\n (let ((?x302 (bvadd unconstrained_ret_mbrtowc_1044_64 unconstrained_ret_mbrtowc_1150_64)))\n (let ((?x40662 (bvadd ?x302 unconstrained_ret_mbrtowc_1254_64)))\n (let ((?x6253 (bvadd ?x40662 (_ bv576460752303357897 64))))\n (and (distinct ?x6253 (_ bv576460752303357900 64)) true)))))\n(assert\n (let ((?x302 (bvadd unconstrained_ret_mbrtowc_1044_64 unconstrained_ret_mbrtowc_1150_64)))\n (let ((?x40662 (bvadd ?x302 unconstrained_ret_mbrtowc_1254_64)))\n (let ((?x6253 (bvadd ?x40662 (_ bv576460752303357897 64))))\n (and (distinct ?x6253 (_ bv576460752303357901 64)) true)))))\n(check-sat)\n",
    "time": 100.00047826766968,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=2, tm_hour=8, tm_min=39, tm_sec=6, tm_wday=2, tm_yday=337, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            17.784225940704346
        ]
    }
}