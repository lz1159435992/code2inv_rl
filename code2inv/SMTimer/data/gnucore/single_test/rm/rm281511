{
    "filename": "rm",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun unconstrained_ret_mbrtowc_9392_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_10202_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_9812_64 () (_ BitVec 64))\n(assert\n (let (($x96552 (= (_ bv0 64) unconstrained_ret_mbrtowc_9392_64)))\n (not $x96552)))\n(assert\n (let (($x56758 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_9392_64)))\n (not $x56758)))\n(assert\n (let (($x95459 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_9392_64)))\n (not $x95459)))\n(assert\n (let (($x84000 (= (_ bv0 64) unconstrained_ret_mbrtowc_10202_64)))\n (not $x84000)))\n(assert\n (let (($x63447 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_10202_64)))\n (not $x63447)))\n(assert\n (let (($x85457 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_10202_64)))\n (not $x85457)))\n(assert\n (let (($x85948 (= (_ bv0 64) unconstrained_ret_mbrtowc_9812_64)))\n (not $x85948)))\n(assert\n (let (($x62939 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_9812_64)))\n (not $x62939)))\n(assert\n (let (($x88381 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_9812_64)))\n (not $x88381)))\n(assert\n (let ((?x99993 (bvadd unconstrained_ret_mbrtowc_9392_64 unconstrained_ret_mbrtowc_9812_64)))\n (let ((?x60199 (bvadd ?x99993 unconstrained_ret_mbrtowc_10202_64)))\n (let (($x44185 (bvule (_ bv6 64) ?x60199)))\n (not $x44185)))))\n(assert\n (let ((?x79876 (bvadd (_ bv576460752303357893 64) unconstrained_ret_mbrtowc_9392_64)))\n (let ((?x67116 (bvadd ?x79876 unconstrained_ret_mbrtowc_9812_64)))\n (let ((?x98158 (bvadd ?x67116 unconstrained_ret_mbrtowc_10202_64)))\n (bvule (_ bv576460752303357893 64) ?x98158)))))\n(assert\n (let ((?x89439 ((_ extract 58 0) unconstrained_ret_mbrtowc_10202_64)))\n (let ((?x103173 ((_ extract 58 0) unconstrained_ret_mbrtowc_9812_64)))\n (let ((?x9276 ((_ extract 58 0) unconstrained_ret_mbrtowc_9392_64)))\n (let ((?x58378 (bvadd (_ bv576460752303357893 59) ?x9276)))\n (let ((?x102826 (bvadd ?x58378 ?x103173)))\n (let ((?x99262 (bvadd ?x102826 ?x89439)))\n (bvule ?x99262 (_ bv576460752303357898 59)))))))))\n(assert\n (let ((?x78021 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_10202_64)))\n (let ((?x100135 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_9812_64)))\n (let ((?x87896 (bvadd (_ bv2 64) ?x100135)))\n (let ((?x62793 (bvadd ?x87896 ?x78021)))\n (let (($x63266 (= unconstrained_ret_mbrtowc_9392_64 ?x62793)))\n (let ((?x100055 (bvadd (_ bv1 64) ?x100135)))\n (let ((?x84446 (bvadd ?x100055 ?x78021)))\n (let (($x98534 (= unconstrained_ret_mbrtowc_9392_64 ?x84446)))\n (let (($x9751 (or $x98534 $x63266)))\n (let ((?x81146 (bvadd ?x100135 ?x78021)))\n (let (($x94951 (= unconstrained_ret_mbrtowc_9392_64 ?x81146)))\n (let (($x94696 (or $x94951 $x9751)))\n (let ((?x105619 (bvadd (_ bv5 64) ?x100135)))\n (let ((?x75009 (bvadd ?x105619 ?x78021)))\n (let (($x46638 (= unconstrained_ret_mbrtowc_9392_64 ?x75009)))\n (let (($x37021 (or $x46638 $x94696)))\n (let ((?x106775 (bvadd (_ bv4 64) ?x100135)))\n (let ((?x6354 (bvadd ?x106775 ?x78021)))\n (let (($x90990 (= unconstrained_ret_mbrtowc_9392_64 ?x6354)))\n (let (($x71256 (or $x90990 $x37021)))\n (let ((?x104230 (bvadd (_ bv3 64) ?x100135)))\n (let ((?x94558 (bvadd ?x104230 ?x78021)))\n (let (($x56311 (= unconstrained_ret_mbrtowc_9392_64 ?x94558)))\n (or $x56311 $x71256)))))))))))))))))))))))))\n(assert\n (let ((?x78021 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_10202_64)))\n (let ((?x100135 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_9812_64)))\n (let ((?x81146 (bvadd ?x100135 ?x78021)))\n (let (($x94951 (= unconstrained_ret_mbrtowc_9392_64 ?x81146)))\n (let ((?x79756 (ite $x94951 (_ bv64 8) (_ bv190 8))))\n (let ((?x105619 (bvadd (_ bv5 64) ?x100135)))\n (let ((?x75009 (bvadd ?x105619 ?x78021)))\n (let (($x46638 (= unconstrained_ret_mbrtowc_9392_64 ?x75009)))\n (let ((?x100055 (bvadd (_ bv1 64) ?x100135)))\n (let ((?x84446 (bvadd ?x100055 ?x78021)))\n (let (($x98534 (= unconstrained_ret_mbrtowc_9392_64 ?x84446)))\n (let (($x73996 (or $x98534 $x46638)))\n (let ((?x83027 (ite $x73996 (_ bv47 8) ?x79756)))\n (let ((?x106775 (bvadd (_ bv4 64) ?x100135)))\n (let ((?x6354 (bvadd ?x106775 ?x78021)))\n (let (($x90990 (= unconstrained_ret_mbrtowc_9392_64 ?x6354)))\n (let ((?x103888 (ite $x90990 (_ bv46 8) ?x83027)))\n (let ((?x104230 (bvadd (_ bv3 64) ?x100135)))\n (let ((?x94558 (bvadd ?x104230 ?x78021)))\n (let (($x56311 (= unconstrained_ret_mbrtowc_9392_64 ?x94558)))\n (let ((?x87896 (bvadd (_ bv2 64) ?x100135)))\n (let ((?x62793 (bvadd ?x87896 ?x78021)))\n (let (($x63266 (= unconstrained_ret_mbrtowc_9392_64 ?x62793)))\n (let (($x34148 (or $x63266 $x56311)))\n (let ((?x88771 (ite $x34148 (_ bv47 8) ?x103888)))\n (let (($x104093 (= (_ bv0 8) ?x88771)))\n (not $x104093))))))))))))))))))))))))))))\n(assert\n (let ((?x67530 (bvadd (_ bv1 64) unconstrained_ret_mbrtowc_9392_64)))\n (let ((?x74519 (bvadd ?x67530 unconstrained_ret_mbrtowc_9812_64)))\n (let ((?x63541 (bvadd ?x74519 unconstrained_ret_mbrtowc_10202_64)))\n (let (($x96619 (bvule (_ bv6 64) ?x63541)))\n (not $x96619))))))\n(assert\n (let ((?x25224 (bvadd (_ bv576460752303357894 64) unconstrained_ret_mbrtowc_9392_64)))\n (let ((?x77486 (bvadd ?x25224 unconstrained_ret_mbrtowc_9812_64)))\n (let ((?x78887 (bvadd ?x77486 unconstrained_ret_mbrtowc_10202_64)))\n (bvule (_ bv576460752303357894 64) ?x78887)))))\n(assert\n (let ((?x25224 (bvadd (_ bv576460752303357894 64) unconstrained_ret_mbrtowc_9392_64)))\n (let ((?x77486 (bvadd ?x25224 unconstrained_ret_mbrtowc_9812_64)))\n (let ((?x78887 (bvadd ?x77486 unconstrained_ret_mbrtowc_10202_64)))\n (let ((?x70046 ((_ extract 63 59) ?x78887)))\n (= (_ bv0 5) ?x70046))))))\n(assert\n (let ((?x89439 ((_ extract 58 0) unconstrained_ret_mbrtowc_10202_64)))\n (let ((?x103173 ((_ extract 58 0) unconstrained_ret_mbrtowc_9812_64)))\n (let ((?x9276 ((_ extract 58 0) unconstrained_ret_mbrtowc_9392_64)))\n (let ((?x98854 (bvadd (_ bv576460752303357894 59) ?x9276)))\n (let ((?x103804 (bvadd ?x98854 ?x103173)))\n (let ((?x5744 (bvadd ?x103804 ?x89439)))\n (bvule ?x5744 (_ bv576460752303357898 59)))))))))\n(assert\n (let ((?x99993 (bvadd unconstrained_ret_mbrtowc_9392_64 unconstrained_ret_mbrtowc_9812_64)))\n (let ((?x60199 (bvadd ?x99993 unconstrained_ret_mbrtowc_10202_64)))\n (let ((?x87602 (bvadd ?x60199 (_ bv576460752303357894 64))))\n (let (($x40609 (and (distinct (_ bv576460752303357895 64) ?x87602) true)))\n (let (($x49417 (and (distinct (_ bv576460752303357894 64) ?x87602) true)))\n (let (($x2172 (and (distinct (_ bv576460752303357898 64) ?x87602) true)))\n (let (($x45981 (and (distinct (_ bv576460752303357897 64) ?x87602) true)))\n (let (($x70094 (and (distinct (_ bv576460752303357896 64) ?x87602) true)))\n (and $x70094 $x45981 $x2172 $x49417 $x40609))))))))))\n(check-sat)\n",
    "time": 17.63873791694641,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=3, tm_hour=22, tm_min=53, tm_sec=45, tm_wday=3, tm_yday=338, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            0.4093925952911377
        ]
    }
}