{
    "filename": "mktemp",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun sym_argv_0_80 () (_ BitVec 80))\n(declare-fun strlen_1371_64 () (_ BitVec 64))\n(declare-fun strlen_1761_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_2423_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_2526_64 () (_ BitVec 64))\n(assert\n (let ((?x200 ((_ extract 71 71) sym_argv_0_80)))\n (= (_ bv0 1) ?x200)))\n(assert\n (let ((?x399 ((_ extract 39 39) sym_argv_0_80)))\n (= (_ bv0 1) ?x399)))\n(assert\n (let ((?x453 ((_ extract 31 31) sym_argv_0_80)))\n (= (_ bv0 1) ?x453)))\n(assert\n (let ((?x247 ((_ extract 23 23) sym_argv_0_80)))\n (= (_ bv0 1) ?x247)))\n(assert\n (let ((?x304 ((_ extract 15 15) sym_argv_0_80)))\n (= (_ bv0 1) ?x304)))\n(assert\n (let ((?x329 ((_ extract 7 7) sym_argv_0_80)))\n (= (_ bv0 1) ?x329)))\n(assert\n (let ((?x202 ((_ extract 70 64) sym_argv_0_80)))\n (bvule ?x202 (_ bv126 7))))\n(assert\n (let ((?x257 ((_ extract 38 32) sym_argv_0_80)))\n (bvule ?x257 (_ bv126 7))))\n(assert\n (let ((?x450 ((_ extract 30 24) sym_argv_0_80)))\n (bvule ?x450 (_ bv126 7))))\n(assert\n (let ((?x285 ((_ extract 22 16) sym_argv_0_80)))\n (bvule ?x285 (_ bv126 7))))\n(assert\n (let ((?x213 ((_ extract 14 8) sym_argv_0_80)))\n (bvule ?x213 (_ bv126 7))))\n(assert\n (let ((?x368 ((_ extract 6 0) sym_argv_0_80)))\n (bvule ?x368 (_ bv126 7))))\n(assert\n (let ((?x3501 (bvadd (_ bv576460752303357897 64) strlen_1371_64)))\n (let ((?x35 ((_ extract 7 0) sym_argv_0_80)))\n (let (($x1005 (= (_ bv0 8) ?x35)))\n (let ((?x732 (ite $x1005 (_ bv576460752303357906 64) (_ bv576460752303357907 64))))\n (let ((?x19 ((_ extract 15 8) sym_argv_0_80)))\n (let (($x1059 (= (_ bv0 8) ?x19)))\n (let ((?x1009 (ite $x1059 (_ bv576460752303357905 64) ?x732)))\n (let ((?x21 ((_ extract 23 16) sym_argv_0_80)))\n (let (($x1048 (= (_ bv0 8) ?x21)))\n (let ((?x1010 (ite $x1048 (_ bv576460752303357904 64) ?x1009)))\n (let ((?x23 ((_ extract 31 24) sym_argv_0_80)))\n (let (($x1046 (= (_ bv0 8) ?x23)))\n (let ((?x1011 (ite $x1046 (_ bv576460752303357903 64) ?x1010)))\n (let ((?x27 ((_ extract 39 32) sym_argv_0_80)))\n (let (($x1044 (= (_ bv0 8) ?x27)))\n (let ((?x1012 (ite $x1044 (_ bv576460752303357902 64) ?x1011)))\n (let ((?x24 ((_ extract 71 64) sym_argv_0_80)))\n (let (($x529 (= (_ bv0 8) ?x24)))\n (let ((?x51888 (ite $x529 (_ bv576460752303357898 64) ?x1012)))\n (= ?x51888 ?x3501)))))))))))))))))))))\n(assert\n (bvule strlen_1371_64 (_ bv17870283321406193719 64)))\n(assert\n (let ((?x5231 (bvadd (_ bv576460752303357896 64) strlen_1371_64)))\n (let ((?x7101 ((_ extract 63 59) ?x5231)))\n (= (_ bv0 5) ?x7101))))\n(assert\n (let ((?x5110 ((_ extract 58 0) strlen_1371_64)))\n (let ((?x6020 (bvadd (_ bv576460752303357896 59) ?x5110)))\n (bvule ?x6020 (_ bv576460752303357906 59)))))\n(assert\n (let ((?x35 ((_ extract 7 0) sym_argv_0_80)))\n (let (($x1549 (= (_ bv10 64) strlen_1371_64)))\n (let ((?x2737 (ite $x1549 ?x35 (_ bv190 8))))\n (let ((?x24 ((_ extract 71 64) sym_argv_0_80)))\n (let (($x3157 (= (_ bv2 64) strlen_1371_64)))\n (let ((?x1784 (ite $x3157 ?x24 ?x2737)))\n (let ((?x19 ((_ extract 15 8) sym_argv_0_80)))\n (let (($x301 (= (_ bv9 64) strlen_1371_64)))\n (let ((?x5763 (ite $x301 ?x19 ?x1784)))\n (let (($x426 (= (_ bv3 64) strlen_1371_64)))\n (let ((?x30104 (ite $x426 (_ bv63 8) ?x5763)))\n (let ((?x21 ((_ extract 23 16) sym_argv_0_80)))\n (let (($x1468 (= (_ bv8 64) strlen_1371_64)))\n (let ((?x32362 (ite $x1468 ?x21 ?x30104)))\n (let (($x7060 (= (_ bv4 64) strlen_1371_64)))\n (let ((?x15604 (ite $x7060 (_ bv39 8) ?x32362)))\n (let ((?x23 ((_ extract 31 24) sym_argv_0_80)))\n (let (($x9719 (= (_ bv7 64) strlen_1371_64)))\n (let ((?x12321 (ite $x9719 ?x23 ?x15604)))\n (let (($x2305 (= (_ bv5 64) strlen_1371_64)))\n (let ((?x28864 (ite $x2305 (_ bv64 8) ?x12321)))\n (let ((?x27 ((_ extract 39 32) sym_argv_0_80)))\n (let (($x4717 (= (_ bv6 64) strlen_1371_64)))\n (let ((?x50775 (ite $x4717 ?x27 ?x28864)))\n (= (_ bv88 8) ?x50775))))))))))))))))))))))))))\n(assert\n (bvule (_ bv2 64) strlen_1371_64))\n(assert\n (let ((?x6389 (bvadd (_ bv576460752303357895 64) strlen_1371_64)))\n (let ((?x7620 ((_ extract 63 59) ?x6389)))\n (= (_ bv0 5) ?x7620))))\n(assert\n (let ((?x5110 ((_ extract 58 0) strlen_1371_64)))\n (let ((?x9852 (bvadd (_ bv576460752303357895 59) ?x5110)))\n (bvule ?x9852 (_ bv576460752303357905 59)))))\n(assert\n (let (($x3157 (= (_ bv2 64) strlen_1371_64)))\n (let ((?x2894 (ite $x3157 (_ bv64 8) (_ bv190 8))))\n (let ((?x19 ((_ extract 15 8) sym_argv_0_80)))\n (let (($x1549 (= (_ bv10 64) strlen_1371_64)))\n (let ((?x1229 (ite $x1549 ?x19 ?x2894)))\n (let ((?x24 ((_ extract 71 64) sym_argv_0_80)))\n (let (($x426 (= (_ bv3 64) strlen_1371_64)))\n (let ((?x1263 (ite $x426 ?x24 ?x1229)))\n (let ((?x21 ((_ extract 23 16) sym_argv_0_80)))\n (let (($x301 (= (_ bv9 64) strlen_1371_64)))\n (let ((?x950 (ite $x301 ?x21 ?x1263)))\n (let (($x7060 (= (_ bv4 64) strlen_1371_64)))\n (let ((?x2579 (ite $x7060 (_ bv63 8) ?x950)))\n (let ((?x23 ((_ extract 31 24) sym_argv_0_80)))\n (let (($x1468 (= (_ bv8 64) strlen_1371_64)))\n (let ((?x25208 (ite $x1468 ?x23 ?x2579)))\n (let (($x2305 (= (_ bv5 64) strlen_1371_64)))\n (let ((?x43497 (ite $x2305 (_ bv39 8) ?x25208)))\n (let ((?x27 ((_ extract 39 32) sym_argv_0_80)))\n (let (($x9719 (= (_ bv7 64) strlen_1371_64)))\n (let ((?x42811 (ite $x9719 ?x27 ?x43497)))\n (let (($x4717 (= (_ bv6 64) strlen_1371_64)))\n (let ((?x3625 (ite $x4717 (_ bv64 8) ?x42811)))\n (let (($x49316 (= (_ bv88 8) ?x3625)))\n (not $x49316))))))))))))))))))))))))))\n(assert\n (let ((?x16 ((_ extract 79 72) sym_argv_0_80)))\n (= (_ bv64 8) ?x16)))\n(assert\n (let ((?x30503 (bvadd (_ bv576460752303357897 64) strlen_1761_64)))\n (let ((?x35 ((_ extract 7 0) sym_argv_0_80)))\n (let (($x1005 (= (_ bv0 8) ?x35)))\n (let ((?x732 (ite $x1005 (_ bv576460752303357906 64) (_ bv576460752303357907 64))))\n (let ((?x19 ((_ extract 15 8) sym_argv_0_80)))\n (let (($x1059 (= (_ bv0 8) ?x19)))\n (let ((?x1009 (ite $x1059 (_ bv576460752303357905 64) ?x732)))\n (let ((?x21 ((_ extract 23 16) sym_argv_0_80)))\n (let (($x1048 (= (_ bv0 8) ?x21)))\n (let ((?x1010 (ite $x1048 (_ bv576460752303357904 64) ?x1009)))\n (let ((?x23 ((_ extract 31 24) sym_argv_0_80)))\n (let (($x1046 (= (_ bv0 8) ?x23)))\n (let ((?x1011 (ite $x1046 (_ bv576460752303357903 64) ?x1010)))\n (let ((?x27 ((_ extract 39 32) sym_argv_0_80)))\n (let (($x1044 (= (_ bv0 8) ?x27)))\n (let ((?x1012 (ite $x1044 (_ bv576460752303357902 64) ?x1011)))\n (let ((?x24 ((_ extract 71 64) sym_argv_0_80)))\n (let (($x529 (= (_ bv0 8) ?x24)))\n (let ((?x51888 (ite $x529 (_ bv576460752303357898 64) ?x1012)))\n (= ?x51888 ?x30503)))))))))))))))))))))\n(assert\n (let ((?x18 ((_ extract 63 56) sym_argv_0_80)))\n (= (_ bv63 8) ?x18)))\n(assert\n (let ((?x31 ((_ extract 55 48) sym_argv_0_80)))\n (= (_ bv39 8) ?x31)))\n(assert\n (bvule (_ bv5 64) strlen_1761_64))\n(assert\n (let ((?x5168 ((_ extract 45 40) sym_argv_0_80)))\n (let (($x1418 (bvule ?x5168 (_ bv39 6))))\n (let ((?x8558 ((_ extract 47 46) sym_argv_0_80)))\n (let (($x31778 (= (_ bv0 2) ?x8558)))\n (let (($x26084 (and $x31778 $x1418)))\n (let ((?x3958 (ite $x26084 (_ bv2 8) (_ bv1 8))))\n (let (($x41146 (= (_ bv0 8) ?x3958)))\n (not $x41146)))))))))\n(assert\n (let ((?x29 ((_ extract 47 40) sym_argv_0_80)))\n (= (_ bv64 8) ?x29)))\n(assert\n (let (($x50755 (= (_ bv0 64) unconstrained_ret_mbrtowc_2423_64)))\n (not $x50755)))\n(assert\n (let (($x62084 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_2423_64)))\n (not $x62084)))\n(assert\n (let (($x54510 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_2423_64)))\n (not $x54510)))\n(assert\n (let (($x13245 (= (_ bv0 64) unconstrained_ret_mbrtowc_2526_64)))\n (not $x13245)))\n(assert\n (let (($x44226 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_2526_64)))\n (not $x44226)))\n(assert\n (let (($x62922 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_2526_64)))\n (not $x62922)))\n(assert\n (let ((?x52210 (bvadd (_ bv4 64) unconstrained_ret_mbrtowc_2423_64)))\n (let ((?x10495 (bvadd ?x52210 unconstrained_ret_mbrtowc_2526_64)))\n (let (($x18534 (bvule strlen_1761_64 ?x10495)))\n (not $x18534)))))\n(assert\n (let ((?x55992 (bvadd (_ bv576460752303357901 64) unconstrained_ret_mbrtowc_2423_64)))\n (let ((?x14057 (bvadd ?x55992 unconstrained_ret_mbrtowc_2526_64)))\n (bvule (_ bv576460752303357897 64) ?x14057))))\n(assert\n (let ((?x55992 (bvadd (_ bv576460752303357901 64) unconstrained_ret_mbrtowc_2423_64)))\n (let ((?x14057 (bvadd ?x55992 unconstrained_ret_mbrtowc_2526_64)))\n (let ((?x38418 ((_ extract 63 59) ?x14057)))\n (= (_ bv0 5) ?x38418)))))\n(assert\n (let ((?x29060 ((_ extract 58 0) unconstrained_ret_mbrtowc_2526_64)))\n (let ((?x62487 ((_ extract 58 0) unconstrained_ret_mbrtowc_2423_64)))\n (let ((?x36546 (bvadd (_ bv576460752303357901 59) ?x62487)))\n (let ((?x55806 (bvadd ?x36546 ?x29060)))\n (bvule ?x55806 (_ bv576460752303357906 59)))))))\n(assert\n (let ((?x15282 (bvadd unconstrained_ret_mbrtowc_2423_64 unconstrained_ret_mbrtowc_2526_64)))\n (let ((?x4460 (bvadd ?x15282 (_ bv576460752303357901 64))))\n (let (($x58828 (and (distinct (_ bv576460752303357902 64) ?x4460) true)))\n (let (($x64149 (and (distinct (_ bv576460752303357901 64) ?x4460) true)))\n (let (($x12013 (and (distinct (_ bv576460752303357906 64) ?x4460) true)))\n (let (($x33848 (and (distinct (_ bv576460752303357899 64) ?x4460) true)))\n (let (($x46730 (and (distinct (_ bv576460752303357904 64) ?x4460) true)))\n (let (($x48771 (and (distinct (_ bv576460752303357897 64) ?x4460) true)))\n (and $x48771 $x46730 $x33848 $x12013 $x64149 $x58828))))))))))\n(assert\n (let ((?x15282 (bvadd unconstrained_ret_mbrtowc_2423_64 unconstrained_ret_mbrtowc_2526_64)))\n (let ((?x4460 (bvadd ?x15282 (_ bv576460752303357901 64))))\n (and (distinct ?x4460 (_ bv576460752303357898 64)) true))))\n(assert\n (let ((?x15282 (bvadd unconstrained_ret_mbrtowc_2423_64 unconstrained_ret_mbrtowc_2526_64)))\n (let ((?x4460 (bvadd ?x15282 (_ bv576460752303357901 64))))\n (and (distinct ?x4460 (_ bv576460752303357900 64)) true))))\n(assert\n (let ((?x15282 (bvadd unconstrained_ret_mbrtowc_2423_64 unconstrained_ret_mbrtowc_2526_64)))\n (let ((?x4460 (bvadd ?x15282 (_ bv576460752303357901 64))))\n (and (distinct ?x4460 (_ bv576460752303357903 64)) true))))\n(assert\n (let ((?x15282 (bvadd unconstrained_ret_mbrtowc_2423_64 unconstrained_ret_mbrtowc_2526_64)))\n (let ((?x4460 (bvadd ?x15282 (_ bv576460752303357901 64))))\n (and (distinct ?x4460 (_ bv576460752303357905 64)) true))))\n(check-sat)\n",
    "time": 1.0758912563323975,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=2, tm_hour=12, tm_min=42, tm_sec=36, tm_wday=2, tm_yday=337, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            0.9922187328338623
        ]
    }
}