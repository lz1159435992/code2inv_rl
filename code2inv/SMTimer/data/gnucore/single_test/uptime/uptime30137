{
    "filename": "uptime",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun unconstrained_ret_mbrtowc_1500_64 () (_ BitVec 64))\n(declare-fun sym_argv_0_80 () (_ BitVec 80))\n(declare-fun strlen_1066_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_1090_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_1261_64 () (_ BitVec 64))\n(assert\n (let (($x189616 (= (_ bv0 64) unconstrained_ret_mbrtowc_1500_64)))\n (not $x189616)))\n(assert\n (let (($x42341 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1500_64)))\n (not $x42341)))\n(assert\n (let (($x140842 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1500_64)))\n (not $x140842)))\n(assert\n (let ((?x326 ((_ extract 71 71) sym_argv_0_80)))\n (= (_ bv0 1) ?x326)))\n(assert\n (let ((?x379 ((_ extract 63 63) sym_argv_0_80)))\n (= (_ bv0 1) ?x379)))\n(assert\n (let ((?x364 ((_ extract 55 55) sym_argv_0_80)))\n (= (_ bv0 1) ?x364)))\n(assert\n (let ((?x212 ((_ extract 47 47) sym_argv_0_80)))\n (= (_ bv0 1) ?x212)))\n(assert\n (let ((?x219 ((_ extract 39 39) sym_argv_0_80)))\n (= (_ bv0 1) ?x219)))\n(assert\n (let ((?x291 ((_ extract 31 31) sym_argv_0_80)))\n (= (_ bv0 1) ?x291)))\n(assert\n (let ((?x302 ((_ extract 23 23) sym_argv_0_80)))\n (= (_ bv0 1) ?x302)))\n(assert\n (let ((?x311 ((_ extract 15 15) sym_argv_0_80)))\n (= (_ bv0 1) ?x311)))\n(assert\n (let ((?x340 ((_ extract 7 7) sym_argv_0_80)))\n (= (_ bv0 1) ?x340)))\n(assert\n (let ((?x320 ((_ extract 70 64) sym_argv_0_80)))\n (bvule ?x320 (_ bv126 7))))\n(assert\n (let ((?x231 ((_ extract 62 56) sym_argv_0_80)))\n (bvule ?x231 (_ bv126 7))))\n(assert\n (let ((?x199 ((_ extract 54 48) sym_argv_0_80)))\n (bvule ?x199 (_ bv126 7))))\n(assert\n (let ((?x213 ((_ extract 46 40) sym_argv_0_80)))\n (bvule ?x213 (_ bv126 7))))\n(assert\n (let ((?x220 ((_ extract 38 32) sym_argv_0_80)))\n (bvule ?x220 (_ bv126 7))))\n(assert\n (let ((?x292 ((_ extract 30 24) sym_argv_0_80)))\n (bvule ?x292 (_ bv126 7))))\n(assert\n (let ((?x303 ((_ extract 22 16) sym_argv_0_80)))\n (bvule ?x303 (_ bv126 7))))\n(assert\n (let ((?x313 ((_ extract 14 8) sym_argv_0_80)))\n (bvule ?x313 (_ bv126 7))))\n(assert\n (let ((?x321 ((_ extract 6 0) sym_argv_0_80)))\n (bvule ?x321 (_ bv126 7))))\n(assert\n (let ((?x1426 ((_ extract 77 72) sym_argv_0_80)))\n (let (($x1462 (bvule ?x1426 (_ bv39 6))))\n (let ((?x1383 ((_ extract 79 78) sym_argv_0_80)))\n (let (($x1268 (= (_ bv0 2) ?x1383)))\n (let (($x1578 (and $x1268 $x1462)))\n (let ((?x1700 (ite $x1578 (_ bv2 8) (_ bv1 8))))\n (let (($x5899 (= (_ bv0 8) ?x1700)))\n (not $x5899)))))))))\n(assert\n (let ((?x16 ((_ extract 79 72) sym_argv_0_80)))\n (= (_ bv64 8) ?x16)))\n(assert\n (let ((?x98904 (bvadd (_ bv576460752303357897 64) strlen_1066_64)))\n (let ((?x35 ((_ extract 7 0) sym_argv_0_80)))\n (let (($x64882 (= (_ bv0 8) ?x35)))\n (let ((?x66122 (ite $x64882 (_ bv576460752303357906 64) (_ bv576460752303357907 64))))\n (let ((?x19 ((_ extract 15 8) sym_argv_0_80)))\n (let (($x24253 (= (_ bv0 8) ?x19)))\n (let ((?x66128 (ite $x24253 (_ bv576460752303357905 64) ?x66122)))\n (let ((?x21 ((_ extract 23 16) sym_argv_0_80)))\n (let (($x63487 (= (_ bv0 8) ?x21)))\n (let ((?x51669 (ite $x63487 (_ bv576460752303357904 64) ?x66128)))\n (let ((?x23 ((_ extract 31 24) sym_argv_0_80)))\n (let (($x63402 (= (_ bv0 8) ?x23)))\n (let ((?x51545 (ite $x63402 (_ bv576460752303357903 64) ?x51669)))\n (let ((?x27 ((_ extract 39 32) sym_argv_0_80)))\n (let (($x19208 (= (_ bv0 8) ?x27)))\n (let ((?x66123 (ite $x19208 (_ bv576460752303357902 64) ?x51545)))\n (let ((?x29 ((_ extract 47 40) sym_argv_0_80)))\n (let (($x64721 (= (_ bv0 8) ?x29)))\n (let ((?x64881 (ite $x64721 (_ bv576460752303357901 64) ?x66123)))\n (let ((?x31 ((_ extract 55 48) sym_argv_0_80)))\n (let (($x63684 (= (_ bv0 8) ?x31)))\n (let ((?x64719 (ite $x63684 (_ bv576460752303357900 64) ?x64881)))\n (let ((?x18 ((_ extract 63 56) sym_argv_0_80)))\n (let (($x51780 (= (_ bv0 8) ?x18)))\n (let ((?x65915 (ite $x51780 (_ bv576460752303357899 64) ?x64719)))\n (let ((?x24 ((_ extract 71 64) sym_argv_0_80)))\n (let (($x5770 (= (_ bv0 8) ?x24)))\n (let ((?x66051 (ite $x5770 (_ bv576460752303357898 64) ?x65915)))\n (= ?x66051 ?x98904))))))))))))))))))))))))))))))\n(assert\n (let (($x124206 (= (_ bv0 64) unconstrained_ret_mbrtowc_1090_64)))\n (not $x124206)))\n(assert\n (let (($x86268 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1090_64)))\n (not $x86268)))\n(assert\n (let (($x34259 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1090_64)))\n (not $x34259)))\n(assert\n (let (($x61648 (= (_ bv0 64) unconstrained_ret_mbrtowc_1261_64)))\n (not $x61648)))\n(assert\n (let (($x102149 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1261_64)))\n (not $x102149)))\n(assert\n (let (($x107764 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1261_64)))\n (not $x107764)))\n(assert\n (let ((?x71662 (bvadd unconstrained_ret_mbrtowc_1090_64 unconstrained_ret_mbrtowc_1261_64)))\n (let ((?x157527 (bvadd ?x71662 unconstrained_ret_mbrtowc_1500_64)))\n (let (($x186655 (bvule strlen_1066_64 ?x157527)))\n (not $x186655)))))\n(assert\n (let ((?x97623 (bvadd (_ bv576460752303357897 64) unconstrained_ret_mbrtowc_1090_64)))\n (let ((?x152599 (bvadd ?x97623 unconstrained_ret_mbrtowc_1261_64)))\n (let ((?x165868 (bvadd ?x152599 unconstrained_ret_mbrtowc_1500_64)))\n (bvule ?x165868 (_ bv576460752303357903 64))))))\n(assert\n (let ((?x97623 (bvadd (_ bv576460752303357897 64) unconstrained_ret_mbrtowc_1090_64)))\n (let ((?x152599 (bvadd ?x97623 unconstrained_ret_mbrtowc_1261_64)))\n (let ((?x165868 (bvadd ?x152599 unconstrained_ret_mbrtowc_1500_64)))\n (bvule ?x165868 (_ bv576460752303357897 64))))))\n(assert\n (let ((?x97623 (bvadd (_ bv576460752303357897 64) unconstrained_ret_mbrtowc_1090_64)))\n (let ((?x152599 (bvadd ?x97623 unconstrained_ret_mbrtowc_1261_64)))\n (let ((?x165868 (bvadd ?x152599 unconstrained_ret_mbrtowc_1500_64)))\n (= ?x165868 (_ bv576460752303357896 64))))))\n(check-sat)\n",
    "time": 1.5028102397918701,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=1, tm_hour=9, tm_min=28, tm_sec=53, tm_wday=1, tm_yday=336, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            0.27940988540649414
        ]
    }
}