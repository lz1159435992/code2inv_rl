{
    "filename": "uptime",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun unconstrained_ret_mbrtowc_1365_64 () (_ BitVec 64))\n(declare-fun sym_argv_0_80 () (_ BitVec 80))\n(declare-fun strlen_1326_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_1609_64 () (_ BitVec 64))\n(assert\n (let (($x83714 (= (_ bv0 64) unconstrained_ret_mbrtowc_1365_64)))\n (not $x83714)))\n(assert\n (let (($x147732 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1365_64)))\n (not $x147732)))\n(assert\n (let (($x140160 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1365_64)))\n (not $x140160)))\n(assert\n (let ((?x379 ((_ extract 63 63) sym_argv_0_80)))\n (= (_ bv0 1) ?x379)))\n(assert\n (let ((?x364 ((_ extract 55 55) sym_argv_0_80)))\n (= (_ bv0 1) ?x364)))\n(assert\n (let ((?x212 ((_ extract 47 47) sym_argv_0_80)))\n (= (_ bv0 1) ?x212)))\n(assert\n (let ((?x219 ((_ extract 39 39) sym_argv_0_80)))\n (= (_ bv0 1) ?x219)))\n(assert\n (let ((?x291 ((_ extract 31 31) sym_argv_0_80)))\n (= (_ bv0 1) ?x291)))\n(assert\n (let ((?x302 ((_ extract 23 23) sym_argv_0_80)))\n (= (_ bv0 1) ?x302)))\n(assert\n (let ((?x311 ((_ extract 15 15) sym_argv_0_80)))\n (= (_ bv0 1) ?x311)))\n(assert\n (let ((?x340 ((_ extract 7 7) sym_argv_0_80)))\n (= (_ bv0 1) ?x340)))\n(assert\n (let ((?x231 ((_ extract 62 56) sym_argv_0_80)))\n (bvule ?x231 (_ bv126 7))))\n(assert\n (let ((?x199 ((_ extract 54 48) sym_argv_0_80)))\n (bvule ?x199 (_ bv126 7))))\n(assert\n (let ((?x213 ((_ extract 46 40) sym_argv_0_80)))\n (bvule ?x213 (_ bv126 7))))\n(assert\n (let ((?x220 ((_ extract 38 32) sym_argv_0_80)))\n (bvule ?x220 (_ bv126 7))))\n(assert\n (let ((?x292 ((_ extract 30 24) sym_argv_0_80)))\n (bvule ?x292 (_ bv126 7))))\n(assert\n (let ((?x303 ((_ extract 22 16) sym_argv_0_80)))\n (bvule ?x303 (_ bv126 7))))\n(assert\n (let ((?x313 ((_ extract 14 8) sym_argv_0_80)))\n (bvule ?x313 (_ bv126 7))))\n(assert\n (let ((?x321 ((_ extract 6 0) sym_argv_0_80)))\n (bvule ?x321 (_ bv126 7))))\n(assert\n (let ((?x1426 ((_ extract 77 72) sym_argv_0_80)))\n (let (($x1462 (bvule ?x1426 (_ bv39 6))))\n (let ((?x1383 ((_ extract 79 78) sym_argv_0_80)))\n (let (($x1268 (= (_ bv0 2) ?x1383)))\n (let (($x1578 (and $x1268 $x1462)))\n (let ((?x1700 (ite $x1578 (_ bv2 8) (_ bv1 8))))\n (let (($x5899 (= (_ bv0 8) ?x1700)))\n (not $x5899)))))))))\n(assert\n (let ((?x16 ((_ extract 79 72) sym_argv_0_80)))\n (= (_ bv92 8) ?x16)))\n(assert\n (let ((?x96096 ((_ extract 69 64) sym_argv_0_80)))\n (let (($x118563 (bvule ?x96096 (_ bv39 6))))\n (let ((?x94626 ((_ extract 71 70) sym_argv_0_80)))\n (let (($x79817 (= (_ bv0 2) ?x94626)))\n (let (($x88952 (and $x79817 $x118563)))\n (let ((?x117853 (ite $x88952 (_ bv2 8) (_ bv1 8))))\n (let (($x100933 (= (_ bv0 8) ?x117853)))\n (not $x100933)))))))))\n(assert\n (let ((?x24 ((_ extract 71 64) sym_argv_0_80)))\n (= (_ bv64 8) ?x24)))\n(assert\n (let ((?x17668 (bvadd (_ bv576460752303357897 64) strlen_1326_64)))\n (let ((?x35 ((_ extract 7 0) sym_argv_0_80)))\n (let (($x64882 (= (_ bv0 8) ?x35)))\n (let ((?x66122 (ite $x64882 (_ bv576460752303357906 64) (_ bv576460752303357907 64))))\n (let ((?x19 ((_ extract 15 8) sym_argv_0_80)))\n (let (($x24253 (= (_ bv0 8) ?x19)))\n (let ((?x66128 (ite $x24253 (_ bv576460752303357905 64) ?x66122)))\n (let ((?x21 ((_ extract 23 16) sym_argv_0_80)))\n (let (($x63487 (= (_ bv0 8) ?x21)))\n (let ((?x51669 (ite $x63487 (_ bv576460752303357904 64) ?x66128)))\n (let ((?x23 ((_ extract 31 24) sym_argv_0_80)))\n (let (($x63402 (= (_ bv0 8) ?x23)))\n (let ((?x51545 (ite $x63402 (_ bv576460752303357903 64) ?x51669)))\n (let ((?x27 ((_ extract 39 32) sym_argv_0_80)))\n (let (($x19208 (= (_ bv0 8) ?x27)))\n (let ((?x66123 (ite $x19208 (_ bv576460752303357902 64) ?x51545)))\n (let ((?x29 ((_ extract 47 40) sym_argv_0_80)))\n (let (($x64721 (= (_ bv0 8) ?x29)))\n (let ((?x64881 (ite $x64721 (_ bv576460752303357901 64) ?x66123)))\n (let ((?x31 ((_ extract 55 48) sym_argv_0_80)))\n (let (($x63684 (= (_ bv0 8) ?x31)))\n (let ((?x64719 (ite $x63684 (_ bv576460752303357900 64) ?x64881)))\n (let ((?x18 ((_ extract 63 56) sym_argv_0_80)))\n (let (($x51780 (= (_ bv0 8) ?x18)))\n (let ((?x65915 (ite $x51780 (_ bv576460752303357899 64) ?x64719)))\n (= ?x65915 ?x17668)))))))))))))))))))))))))))\n(assert\n (let (($x70718 (= (_ bv0 64) unconstrained_ret_mbrtowc_1609_64)))\n (not $x70718)))\n(assert\n (let (($x71291 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1609_64)))\n (not $x71291)))\n(assert\n (let (($x158242 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1609_64)))\n (not $x158242)))\n(assert\n (let ((?x51616 (bvadd (_ bv1 64) unconstrained_ret_mbrtowc_1365_64)))\n (let ((?x196114 (bvadd ?x51616 unconstrained_ret_mbrtowc_1609_64)))\n (let (($x97318 (bvule strlen_1326_64 ?x196114)))\n (not $x97318)))))\n(assert\n (let ((?x57675 (bvadd (_ bv576460752303357898 64) unconstrained_ret_mbrtowc_1365_64)))\n (let ((?x131838 (bvadd ?x57675 unconstrained_ret_mbrtowc_1609_64)))\n (bvule (_ bv576460752303357897 64) ?x131838))))\n(assert\n (let ((?x57675 (bvadd (_ bv576460752303357898 64) unconstrained_ret_mbrtowc_1365_64)))\n (let ((?x131838 (bvadd ?x57675 unconstrained_ret_mbrtowc_1609_64)))\n (let ((?x37149 ((_ extract 63 59) ?x131838)))\n (= (_ bv0 5) ?x37149)))))\n(assert\n (let ((?x11578 ((_ extract 58 0) unconstrained_ret_mbrtowc_1609_64)))\n (let ((?x158000 ((_ extract 58 0) unconstrained_ret_mbrtowc_1365_64)))\n (let ((?x171196 (bvadd (_ bv576460752303357898 59) ?x158000)))\n (let ((?x188243 (bvadd ?x171196 ?x11578)))\n (bvule ?x188243 (_ bv576460752303357906 59)))))))\n(assert\n (let ((?x191341 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1609_64)))\n (let ((?x64997 (bvadd (_ bv6 64) ?x191341)))\n (let (($x11200 (= unconstrained_ret_mbrtowc_1365_64 ?x64997)))\n (let ((?x134592 (bvadd (_ bv5 64) ?x191341)))\n (let (($x4957 (= unconstrained_ret_mbrtowc_1365_64 ?x134592)))\n (let (($x114136 (or $x4957 $x11200)))\n (let ((?x71247 (bvadd (_ bv3 64) ?x191341)))\n (let (($x57856 (= unconstrained_ret_mbrtowc_1365_64 ?x71247)))\n (let (($x125878 (or $x57856 $x114136)))\n (let ((?x133637 (bvadd (_ bv1 64) ?x191341)))\n (let (($x66823 (= unconstrained_ret_mbrtowc_1365_64 ?x133637)))\n (let (($x64066 (or $x66823 $x125878)))\n (let ((?x137069 (bvadd (_ bv2 64) ?x191341)))\n (let (($x68910 (= unconstrained_ret_mbrtowc_1365_64 ?x137069)))\n (let (($x152 (or $x68910 $x64066)))\n (let ((?x82401 (bvadd (_ bv7 64) ?x191341)))\n (let (($x87067 (= unconstrained_ret_mbrtowc_1365_64 ?x82401)))\n (let (($x197914 (or $x87067 $x152)))\n (let ((?x68584 (bvadd (_ bv4 64) ?x191341)))\n (let (($x92839 (= unconstrained_ret_mbrtowc_1365_64 ?x68584)))\n (let (($x170106 (or $x92839 $x197914)))\n (let (($x135664 (= unconstrained_ret_mbrtowc_1365_64 ?x191341)))\n (let (($x51013 (or $x135664 $x170106)))\n (let ((?x177555 (bvadd (_ bv8 64) ?x191341)))\n (let (($x142073 (= unconstrained_ret_mbrtowc_1365_64 ?x177555)))\n (let (($x105425 (or $x142073 $x51013)))\n (let ((?x139053 (bvadd (_ bv18446744073709551615 64) ?x191341)))\n (let (($x150672 (= unconstrained_ret_mbrtowc_1365_64 ?x139053)))\n (or $x150672 $x105425))))))))))))))))))))))))))))))\n(assert\n (let ((?x191341 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1609_64)))\n (let ((?x139053 (bvadd (_ bv18446744073709551615 64) ?x191341)))\n (let (($x150672 (= unconstrained_ret_mbrtowc_1365_64 ?x139053)))\n (let ((?x45174 (ite $x150672 (_ bv92 8) (_ bv190 8))))\n (let ((?x35 ((_ extract 7 0) sym_argv_0_80)))\n (let ((?x177555 (bvadd (_ bv8 64) ?x191341)))\n (let (($x142073 (= unconstrained_ret_mbrtowc_1365_64 ?x177555)))\n (let ((?x39919 (ite $x142073 ?x35 ?x45174)))\n (let (($x135664 (= unconstrained_ret_mbrtowc_1365_64 ?x191341)))\n (let ((?x129390 (ite $x135664 (_ bv64 8) ?x39919)))\n (let ((?x19 ((_ extract 15 8) sym_argv_0_80)))\n (let ((?x82401 (bvadd (_ bv7 64) ?x191341)))\n (let (($x87067 (= unconstrained_ret_mbrtowc_1365_64 ?x82401)))\n (let ((?x141204 (ite $x87067 ?x19 ?x129390)))\n (let ((?x18 ((_ extract 63 56) sym_argv_0_80)))\n (let ((?x133637 (bvadd (_ bv1 64) ?x191341)))\n (let (($x66823 (= unconstrained_ret_mbrtowc_1365_64 ?x133637)))\n (let ((?x198040 (ite $x66823 ?x18 ?x141204)))\n (let ((?x21 ((_ extract 23 16) sym_argv_0_80)))\n (let ((?x64997 (bvadd (_ bv6 64) ?x191341)))\n (let (($x11200 (= unconstrained_ret_mbrtowc_1365_64 ?x64997)))\n (let ((?x188137 (ite $x11200 ?x21 ?x198040)))\n (let ((?x31 ((_ extract 55 48) sym_argv_0_80)))\n (let ((?x137069 (bvadd (_ bv2 64) ?x191341)))\n (let (($x68910 (= unconstrained_ret_mbrtowc_1365_64 ?x137069)))\n (let ((?x142236 (ite $x68910 ?x31 ?x188137)))\n (let ((?x23 ((_ extract 31 24) sym_argv_0_80)))\n (let ((?x134592 (bvadd (_ bv5 64) ?x191341)))\n (let (($x4957 (= unconstrained_ret_mbrtowc_1365_64 ?x134592)))\n (let ((?x59769 (ite $x4957 ?x23 ?x142236)))\n (let ((?x29 ((_ extract 47 40) sym_argv_0_80)))\n (let ((?x71247 (bvadd (_ bv3 64) ?x191341)))\n (let (($x57856 (= unconstrained_ret_mbrtowc_1365_64 ?x71247)))\n (let ((?x54739 (ite $x57856 ?x29 ?x59769)))\n (let ((?x27 ((_ extract 39 32) sym_argv_0_80)))\n (let ((?x68584 (bvadd (_ bv4 64) ?x191341)))\n (let (($x92839 (= unconstrained_ret_mbrtowc_1365_64 ?x68584)))\n (let ((?x152887 (ite $x92839 ?x27 ?x54739)))\n (let (($x21017 (= (_ bv0 8) ?x152887)))\n (not $x21017)))))))))))))))))))))))))))))))))))))))))\n(assert\n (let ((?x128429 (bvadd (_ bv2 64) unconstrained_ret_mbrtowc_1365_64)))\n (let ((?x111762 (bvadd ?x128429 unconstrained_ret_mbrtowc_1609_64)))\n (let (($x112670 (bvule strlen_1326_64 ?x111762)))\n (not $x112670)))))\n(assert\n (let ((?x100927 (bvadd (_ bv576460752303357899 64) unconstrained_ret_mbrtowc_1365_64)))\n (let ((?x100008 (bvadd ?x100927 unconstrained_ret_mbrtowc_1609_64)))\n (bvule (_ bv576460752303357898 64) ?x100008))))\n(assert\n (let ((?x100927 (bvadd (_ bv576460752303357899 64) unconstrained_ret_mbrtowc_1365_64)))\n (let ((?x100008 (bvadd ?x100927 unconstrained_ret_mbrtowc_1609_64)))\n (let ((?x25265 ((_ extract 63 59) ?x100008)))\n (= (_ bv0 5) ?x25265)))))\n(assert\n (let ((?x11578 ((_ extract 58 0) unconstrained_ret_mbrtowc_1609_64)))\n (let ((?x158000 ((_ extract 58 0) unconstrained_ret_mbrtowc_1365_64)))\n (let ((?x162289 (bvadd (_ bv576460752303357899 59) ?x158000)))\n (let ((?x12632 (bvadd ?x162289 ?x11578)))\n (bvule ?x12632 (_ bv576460752303357906 59)))))))\n(assert\n (let ((?x167758 (bvadd unconstrained_ret_mbrtowc_1365_64 unconstrained_ret_mbrtowc_1609_64)))\n (let ((?x26096 (bvadd ?x167758 (_ bv576460752303357899 64))))\n (let (($x11673 (and (distinct (_ bv576460752303357902 64) ?x26096) true)))\n (let (($x192949 (and (distinct (_ bv576460752303357901 64) ?x26096) true)))\n (let (($x64469 (and (distinct (_ bv576460752303357906 64) ?x26096) true)))\n (let (($x27448 (and (distinct (_ bv576460752303357899 64) ?x26096) true)))\n (let (($x11070 (and (distinct (_ bv576460752303357904 64) ?x26096) true)))\n (let (($x195661 (and (distinct (_ bv576460752303357898 64) ?x26096) true)))\n (and $x195661 $x11070 $x27448 $x64469 $x192949 $x11673))))))))))\n(assert\n (let ((?x167758 (bvadd unconstrained_ret_mbrtowc_1365_64 unconstrained_ret_mbrtowc_1609_64)))\n (let ((?x26096 (bvadd ?x167758 (_ bv576460752303357899 64))))\n (and (distinct ?x26096 (_ bv576460752303357905 64)) true))))\n(assert\n (let ((?x167758 (bvadd unconstrained_ret_mbrtowc_1365_64 unconstrained_ret_mbrtowc_1609_64)))\n (let ((?x26096 (bvadd ?x167758 (_ bv576460752303357899 64))))\n (and (distinct ?x26096 (_ bv576460752303357900 64)) true))))\n(assert\n (let ((?x167758 (bvadd unconstrained_ret_mbrtowc_1365_64 unconstrained_ret_mbrtowc_1609_64)))\n (let ((?x26096 (bvadd ?x167758 (_ bv576460752303357899 64))))\n (and (distinct ?x26096 (_ bv576460752303357903 64)) true))))\n(check-sat)\n",
    "time": 1.040388584136963,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=1, tm_hour=9, tm_min=33, tm_sec=2, tm_wday=1, tm_yday=336, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            0.2656705379486084
        ]
    }
}