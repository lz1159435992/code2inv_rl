{
    "filename": "wc",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun k!25775550 () (_ BitVec 64))\n(assert\n (bvule (_ bv10 64) k!25775550))\n(assert\n (let ((?x549569 ((_ extract 127 67) (bvmul (_ bv14757395258967641293 128) (concat (_ bv0 64) k!25775550)))))\n (bvule (_ bv10 61) ?x549569)))\n(assert\n (let ((?x818505 (bvmul (_ bv14757395258967641293 128) (concat (_ bv0 67) ((_ extract 127 67) (bvmul (_ bv14757395258967641293 128) (concat (_ bv0 64) k!25775550)))))))\n (let ((?x914959 ((_ extract 127 67) ?x818505)))\n (bvule (_ bv10 61) ?x914959))))\n(assert\n (let ((?x818505 (bvmul (_ bv14757395258967641293 128) (concat (_ bv0 67) ((_ extract 127 67) (bvmul (_ bv14757395258967641293 128) (concat (_ bv0 64) k!25775550)))))))\n (let ((?x914959 ((_ extract 127 67) ?x818505)))\n (let ((?x390564 ((_ extract 127 67) (bvmul (_ bv14757395258967641293 128) (concat (_ bv0 67) ?x914959)))))\n (bvule (_ bv10 61) ?x390564)))))\n(assert\n (let ((?x818505 (bvmul (_ bv14757395258967641293 128) (concat (_ bv0 67) ((_ extract 127 67) (bvmul (_ bv14757395258967641293 128) (concat (_ bv0 64) k!25775550)))))))\n (let ((?x914959 ((_ extract 127 67) ?x818505)))\n (let ((?x390564 ((_ extract 127 67) (bvmul (_ bv14757395258967641293 128) (concat (_ bv0 67) ?x914959)))))\n (let ((?x363509 ((_ extract 127 67) (bvmul (_ bv14757395258967641293 128) (concat (_ bv0 67) ?x390564)))))\n (bvule (_ bv10 61) ?x363509))))))\n(assert\n (let ((?x818505 (bvmul (_ bv14757395258967641293 128) (concat (_ bv0 67) ((_ extract 127 67) (bvmul (_ bv14757395258967641293 128) (concat (_ bv0 64) k!25775550)))))))\n (let ((?x914959 ((_ extract 127 67) ?x818505)))\n (let ((?x390564 ((_ extract 127 67) (bvmul (_ bv14757395258967641293 128) (concat (_ bv0 67) ?x914959)))))\n (let ((?x363509 ((_ extract 127 67) (bvmul (_ bv14757395258967641293 128) (concat (_ bv0 67) ?x390564)))))\n (bvule (_ bv10 61) ((_ extract 127 67) (bvmul (_ bv14757395258967641293 128) (concat (_ bv0 67) ?x363509)))))))))\n(check-sat)\n",
    "time": 10.165205717086792,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=4, tm_hour=12, tm_min=32, tm_sec=13, tm_wday=4, tm_yday=339, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            12.131201028823853
        ]
    }
}