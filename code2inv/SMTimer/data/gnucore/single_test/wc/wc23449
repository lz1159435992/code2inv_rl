{
    "filename": "wc",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun mem_c0000ff0_2137_64 () (_ BitVec 64))\n(assert\n (bvule (_ bv10 64) mem_c0000ff0_2137_64))\n(assert\n (let ((?x1056750 (concat (_ bv0 64) mem_c0000ff0_2137_64)))\n (let ((?x601124 (bvmul (_ bv14757395258967641293 128) ?x1056750)))\n (let ((?x2624 ((_ extract 127 67) ?x601124)))\n (bvule (_ bv10 61) ?x2624)))))\n(assert\n (let ((?x1056750 (concat (_ bv0 64) mem_c0000ff0_2137_64)))\n (let ((?x601124 (bvmul (_ bv14757395258967641293 128) ?x1056750)))\n (let ((?x2624 ((_ extract 127 67) ?x601124)))\n (let ((?x328605 (concat (_ bv0 67) ?x2624)))\n (let ((?x5844 (bvmul (_ bv14757395258967641293 128) ?x328605)))\n (let ((?x710634 ((_ extract 127 67) ?x5844)))\n (bvule (_ bv10 61) ?x710634))))))))\n(assert\n (let ((?x1056750 (concat (_ bv0 64) mem_c0000ff0_2137_64)))\n (let ((?x601124 (bvmul (_ bv14757395258967641293 128) ?x1056750)))\n (let ((?x2624 ((_ extract 127 67) ?x601124)))\n (let ((?x328605 (concat (_ bv0 67) ?x2624)))\n (let ((?x5844 (bvmul (_ bv14757395258967641293 128) ?x328605)))\n (let ((?x710634 ((_ extract 127 67) ?x5844)))\n (let ((?x29536 (concat (_ bv0 67) ?x710634)))\n (let ((?x694514 (bvmul (_ bv14757395258967641293 128) ?x29536)))\n (let ((?x483437 ((_ extract 127 67) ?x694514)))\n (bvule (_ bv10 61) ?x483437)))))))))))\n(assert\n (let ((?x1056750 (concat (_ bv0 64) mem_c0000ff0_2137_64)))\n (let ((?x601124 (bvmul (_ bv14757395258967641293 128) ?x1056750)))\n (let ((?x2624 ((_ extract 127 67) ?x601124)))\n (let ((?x328605 (concat (_ bv0 67) ?x2624)))\n (let ((?x5844 (bvmul (_ bv14757395258967641293 128) ?x328605)))\n (let ((?x710634 ((_ extract 127 67) ?x5844)))\n (let ((?x29536 (concat (_ bv0 67) ?x710634)))\n (let ((?x694514 (bvmul (_ bv14757395258967641293 128) ?x29536)))\n (let ((?x483437 ((_ extract 127 67) ?x694514)))\n (let ((?x926947 (concat (_ bv0 67) ?x483437)))\n (let ((?x18016 (bvmul (_ bv14757395258967641293 128) ?x926947)))\n (let ((?x220435 ((_ extract 127 67) ?x18016)))\n (bvule (_ bv10 61) ?x220435))))))))))))))\n(assert\n (let ((?x1056750 (concat (_ bv0 64) mem_c0000ff0_2137_64)))\n (let ((?x601124 (bvmul (_ bv14757395258967641293 128) ?x1056750)))\n (let ((?x2624 ((_ extract 127 67) ?x601124)))\n (let ((?x328605 (concat (_ bv0 67) ?x2624)))\n (let ((?x5844 (bvmul (_ bv14757395258967641293 128) ?x328605)))\n (let ((?x710634 ((_ extract 127 67) ?x5844)))\n (let ((?x29536 (concat (_ bv0 67) ?x710634)))\n (let ((?x694514 (bvmul (_ bv14757395258967641293 128) ?x29536)))\n (let ((?x483437 ((_ extract 127 67) ?x694514)))\n (let ((?x926947 (concat (_ bv0 67) ?x483437)))\n (let ((?x18016 (bvmul (_ bv14757395258967641293 128) ?x926947)))\n (let ((?x220435 ((_ extract 127 67) ?x18016)))\n (let ((?x447397 (concat (_ bv0 67) ?x220435)))\n (let ((?x455804 (bvmul (_ bv14757395258967641293 128) ?x447397)))\n (let ((?x82310 ((_ extract 127 67) ?x455804)))\n (bvule (_ bv10 61) ?x82310)))))))))))))))))\n(assert\n (let ((?x1056750 (concat (_ bv0 64) mem_c0000ff0_2137_64)))\n (let ((?x601124 (bvmul (_ bv14757395258967641293 128) ?x1056750)))\n (let ((?x2624 ((_ extract 127 67) ?x601124)))\n (let ((?x328605 (concat (_ bv0 67) ?x2624)))\n (let ((?x5844 (bvmul (_ bv14757395258967641293 128) ?x328605)))\n (let ((?x710634 ((_ extract 127 67) ?x5844)))\n (let ((?x29536 (concat (_ bv0 67) ?x710634)))\n (let ((?x694514 (bvmul (_ bv14757395258967641293 128) ?x29536)))\n (let ((?x483437 ((_ extract 127 67) ?x694514)))\n (let ((?x926947 (concat (_ bv0 67) ?x483437)))\n (let ((?x18016 (bvmul (_ bv14757395258967641293 128) ?x926947)))\n (let ((?x220435 ((_ extract 127 67) ?x18016)))\n (let ((?x447397 (concat (_ bv0 67) ?x220435)))\n (let ((?x455804 (bvmul (_ bv14757395258967641293 128) ?x447397)))\n (let ((?x82310 ((_ extract 127 67) ?x455804)))\n (let ((?x741477 (concat (_ bv0 67) ?x82310)))\n (let ((?x220930 (bvmul (_ bv14757395258967641293 128) ?x741477)))\n (let ((?x685848 ((_ extract 127 67) ?x220930)))\n (bvule (_ bv10 61) ?x685848))))))))))))))))))))\n(check-sat)\n",
    "time": 23.372380018234253,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=4, tm_hour=12, tm_min=40, tm_sec=50, tm_wday=4, tm_yday=339, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            17.31248664855957
        ]
    }
}