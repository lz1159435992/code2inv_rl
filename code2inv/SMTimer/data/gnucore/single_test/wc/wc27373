{
    "filename": "wc",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun mem_c0000ff0_2545_64 () (_ BitVec 64))\n(assert\n (bvule (_ bv10 64) mem_c0000ff0_2545_64))\n(assert\n (let ((?x296328 (concat (_ bv0 64) mem_c0000ff0_2545_64)))\n (let ((?x224435 (bvmul (_ bv14757395258967641293 128) ?x296328)))\n (let ((?x389730 ((_ extract 127 67) ?x224435)))\n (bvule (_ bv10 61) ?x389730)))))\n(assert\n (let ((?x296328 (concat (_ bv0 64) mem_c0000ff0_2545_64)))\n (let ((?x224435 (bvmul (_ bv14757395258967641293 128) ?x296328)))\n (let ((?x389730 ((_ extract 127 67) ?x224435)))\n (let ((?x308705 (concat (_ bv0 67) ?x389730)))\n (let ((?x111127 (bvmul (_ bv14757395258967641293 128) ?x308705)))\n (let ((?x302874 ((_ extract 127 67) ?x111127)))\n (bvule (_ bv10 61) ?x302874))))))))\n(assert\n (let ((?x296328 (concat (_ bv0 64) mem_c0000ff0_2545_64)))\n (let ((?x224435 (bvmul (_ bv14757395258967641293 128) ?x296328)))\n (let ((?x389730 ((_ extract 127 67) ?x224435)))\n (let ((?x308705 (concat (_ bv0 67) ?x389730)))\n (let ((?x111127 (bvmul (_ bv14757395258967641293 128) ?x308705)))\n (let ((?x302874 ((_ extract 127 67) ?x111127)))\n (let ((?x779220 (concat (_ bv0 67) ?x302874)))\n (let ((?x170375 (bvmul (_ bv14757395258967641293 128) ?x779220)))\n (let ((?x923598 ((_ extract 127 67) ?x170375)))\n (bvule (_ bv10 61) ?x923598)))))))))))\n(assert\n (let ((?x296328 (concat (_ bv0 64) mem_c0000ff0_2545_64)))\n (let ((?x224435 (bvmul (_ bv14757395258967641293 128) ?x296328)))\n (let ((?x389730 ((_ extract 127 67) ?x224435)))\n (let ((?x308705 (concat (_ bv0 67) ?x389730)))\n (let ((?x111127 (bvmul (_ bv14757395258967641293 128) ?x308705)))\n (let ((?x302874 ((_ extract 127 67) ?x111127)))\n (let ((?x779220 (concat (_ bv0 67) ?x302874)))\n (let ((?x170375 (bvmul (_ bv14757395258967641293 128) ?x779220)))\n (let ((?x923598 ((_ extract 127 67) ?x170375)))\n (let ((?x262493 (concat (_ bv0 67) ?x923598)))\n (let ((?x200369 (bvmul (_ bv14757395258967641293 128) ?x262493)))\n (let ((?x313833 ((_ extract 127 67) ?x200369)))\n (bvule (_ bv10 61) ?x313833))))))))))))))\n(assert\n (let ((?x296328 (concat (_ bv0 64) mem_c0000ff0_2545_64)))\n (let ((?x224435 (bvmul (_ bv14757395258967641293 128) ?x296328)))\n (let ((?x389730 ((_ extract 127 67) ?x224435)))\n (let ((?x308705 (concat (_ bv0 67) ?x389730)))\n (let ((?x111127 (bvmul (_ bv14757395258967641293 128) ?x308705)))\n (let ((?x302874 ((_ extract 127 67) ?x111127)))\n (let ((?x779220 (concat (_ bv0 67) ?x302874)))\n (let ((?x170375 (bvmul (_ bv14757395258967641293 128) ?x779220)))\n (let ((?x923598 ((_ extract 127 67) ?x170375)))\n (let ((?x262493 (concat (_ bv0 67) ?x923598)))\n (let ((?x200369 (bvmul (_ bv14757395258967641293 128) ?x262493)))\n (let ((?x313833 ((_ extract 127 67) ?x200369)))\n (let ((?x265241 (concat (_ bv0 67) ?x313833)))\n (let ((?x14734 (bvmul (_ bv14757395258967641293 128) ?x265241)))\n (let ((?x254815 ((_ extract 127 67) ?x14734)))\n (bvule (_ bv10 61) ?x254815)))))))))))))))))\n(assert\n (let ((?x296328 (concat (_ bv0 64) mem_c0000ff0_2545_64)))\n (let ((?x224435 (bvmul (_ bv14757395258967641293 128) ?x296328)))\n (let ((?x389730 ((_ extract 127 67) ?x224435)))\n (let ((?x308705 (concat (_ bv0 67) ?x389730)))\n (let ((?x111127 (bvmul (_ bv14757395258967641293 128) ?x308705)))\n (let ((?x302874 ((_ extract 127 67) ?x111127)))\n (let ((?x779220 (concat (_ bv0 67) ?x302874)))\n (let ((?x170375 (bvmul (_ bv14757395258967641293 128) ?x779220)))\n (let ((?x923598 ((_ extract 127 67) ?x170375)))\n (let ((?x262493 (concat (_ bv0 67) ?x923598)))\n (let ((?x200369 (bvmul (_ bv14757395258967641293 128) ?x262493)))\n (let ((?x313833 ((_ extract 127 67) ?x200369)))\n (let ((?x265241 (concat (_ bv0 67) ?x313833)))\n (let ((?x14734 (bvmul (_ bv14757395258967641293 128) ?x265241)))\n (let ((?x254815 ((_ extract 127 67) ?x14734)))\n (let ((?x787418 (concat (_ bv0 67) ?x254815)))\n (let ((?x323149 (bvmul (_ bv14757395258967641293 128) ?x787418)))\n (let ((?x204644 ((_ extract 127 67) ?x323149)))\n (let (($x216011 (bvule (_ bv10 61) ?x204644)))\n (not $x216011)))))))))))))))))))))\n(check-sat)\n",
    "time": 100.0329487323761,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=4, tm_hour=13, tm_min=46, tm_sec=17, tm_wday=4, tm_yday=339, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            300.011750459671
        ]
    }
}