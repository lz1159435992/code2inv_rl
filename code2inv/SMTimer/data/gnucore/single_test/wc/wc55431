{
    "filename": "wc",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun mem_c0000ff0_5338_64 () (_ BitVec 64))\n(assert\n (bvule (_ bv10 64) mem_c0000ff0_5338_64))\n(assert\n (let ((?x725589 (concat (_ bv0 64) mem_c0000ff0_5338_64)))\n (let ((?x962885 (bvmul (_ bv14757395258967641293 128) ?x725589)))\n (let ((?x152944 ((_ extract 127 67) ?x962885)))\n (bvule (_ bv10 61) ?x152944)))))\n(assert\n (let ((?x725589 (concat (_ bv0 64) mem_c0000ff0_5338_64)))\n (let ((?x962885 (bvmul (_ bv14757395258967641293 128) ?x725589)))\n (let ((?x152944 ((_ extract 127 67) ?x962885)))\n (let ((?x492618 (concat (_ bv0 67) ?x152944)))\n (let ((?x717574 (bvmul (_ bv14757395258967641293 128) ?x492618)))\n (let ((?x186104 ((_ extract 127 67) ?x717574)))\n (bvule (_ bv10 61) ?x186104))))))))\n(assert\n (let ((?x725589 (concat (_ bv0 64) mem_c0000ff0_5338_64)))\n (let ((?x962885 (bvmul (_ bv14757395258967641293 128) ?x725589)))\n (let ((?x152944 ((_ extract 127 67) ?x962885)))\n (let ((?x492618 (concat (_ bv0 67) ?x152944)))\n (let ((?x717574 (bvmul (_ bv14757395258967641293 128) ?x492618)))\n (let ((?x186104 ((_ extract 127 67) ?x717574)))\n (let ((?x974579 (concat (_ bv0 67) ?x186104)))\n (let ((?x765133 (bvmul (_ bv14757395258967641293 128) ?x974579)))\n (let ((?x655168 ((_ extract 127 67) ?x765133)))\n (bvule (_ bv10 61) ?x655168)))))))))))\n(assert\n (let ((?x725589 (concat (_ bv0 64) mem_c0000ff0_5338_64)))\n (let ((?x962885 (bvmul (_ bv14757395258967641293 128) ?x725589)))\n (let ((?x152944 ((_ extract 127 67) ?x962885)))\n (let ((?x492618 (concat (_ bv0 67) ?x152944)))\n (let ((?x717574 (bvmul (_ bv14757395258967641293 128) ?x492618)))\n (let ((?x186104 ((_ extract 127 67) ?x717574)))\n (let ((?x974579 (concat (_ bv0 67) ?x186104)))\n (let ((?x765133 (bvmul (_ bv14757395258967641293 128) ?x974579)))\n (let ((?x655168 ((_ extract 127 67) ?x765133)))\n (let ((?x314670 (concat (_ bv0 67) ?x655168)))\n (let ((?x390410 (bvmul (_ bv14757395258967641293 128) ?x314670)))\n (let ((?x215541 ((_ extract 127 67) ?x390410)))\n (bvule (_ bv10 61) ?x215541))))))))))))))\n(assert\n (let ((?x725589 (concat (_ bv0 64) mem_c0000ff0_5338_64)))\n (let ((?x962885 (bvmul (_ bv14757395258967641293 128) ?x725589)))\n (let ((?x152944 ((_ extract 127 67) ?x962885)))\n (let ((?x492618 (concat (_ bv0 67) ?x152944)))\n (let ((?x717574 (bvmul (_ bv14757395258967641293 128) ?x492618)))\n (let ((?x186104 ((_ extract 127 67) ?x717574)))\n (let ((?x974579 (concat (_ bv0 67) ?x186104)))\n (let ((?x765133 (bvmul (_ bv14757395258967641293 128) ?x974579)))\n (let ((?x655168 ((_ extract 127 67) ?x765133)))\n (let ((?x314670 (concat (_ bv0 67) ?x655168)))\n (let ((?x390410 (bvmul (_ bv14757395258967641293 128) ?x314670)))\n (let ((?x215541 ((_ extract 127 67) ?x390410)))\n (let ((?x678455 (concat (_ bv0 67) ?x215541)))\n (let ((?x209795 (bvmul (_ bv14757395258967641293 128) ?x678455)))\n (let ((?x741395 ((_ extract 127 67) ?x209795)))\n (bvule (_ bv10 61) ?x741395)))))))))))))))))\n(assert\n (let ((?x725589 (concat (_ bv0 64) mem_c0000ff0_5338_64)))\n (let ((?x962885 (bvmul (_ bv14757395258967641293 128) ?x725589)))\n (let ((?x152944 ((_ extract 127 67) ?x962885)))\n (let ((?x492618 (concat (_ bv0 67) ?x152944)))\n (let ((?x717574 (bvmul (_ bv14757395258967641293 128) ?x492618)))\n (let ((?x186104 ((_ extract 127 67) ?x717574)))\n (let ((?x974579 (concat (_ bv0 67) ?x186104)))\n (let ((?x765133 (bvmul (_ bv14757395258967641293 128) ?x974579)))\n (let ((?x655168 ((_ extract 127 67) ?x765133)))\n (let ((?x314670 (concat (_ bv0 67) ?x655168)))\n (let ((?x390410 (bvmul (_ bv14757395258967641293 128) ?x314670)))\n (let ((?x215541 ((_ extract 127 67) ?x390410)))\n (let ((?x678455 (concat (_ bv0 67) ?x215541)))\n (let ((?x209795 (bvmul (_ bv14757395258967641293 128) ?x678455)))\n (let ((?x741395 ((_ extract 127 67) ?x209795)))\n (let ((?x507414 (concat (_ bv0 67) ?x741395)))\n (let ((?x448532 (bvmul (_ bv14757395258967641293 128) ?x507414)))\n (let ((?x442687 ((_ extract 127 67) ?x448532)))\n (bvule (_ bv10 61) ?x442687))))))))))))))))))))\n(check-sat)\n",
    "time": 35.92195224761963,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=4, tm_hour=21, tm_min=7, tm_sec=52, tm_wday=4, tm_yday=339, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            25.914705753326416
        ]
    }
}