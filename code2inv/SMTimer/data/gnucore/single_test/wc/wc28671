{
    "filename": "wc",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun mem_c0000ff0_2708_64 () (_ BitVec 64))\n(assert\n (bvule (_ bv10 64) mem_c0000ff0_2708_64))\n(assert\n (let ((?x606049 (concat (_ bv0 64) mem_c0000ff0_2708_64)))\n (let ((?x767259 (bvmul (_ bv14757395258967641293 128) ?x606049)))\n (let ((?x46519 ((_ extract 127 67) ?x767259)))\n (bvule (_ bv10 61) ?x46519)))))\n(assert\n (let ((?x606049 (concat (_ bv0 64) mem_c0000ff0_2708_64)))\n (let ((?x767259 (bvmul (_ bv14757395258967641293 128) ?x606049)))\n (let ((?x46519 ((_ extract 127 67) ?x767259)))\n (let ((?x523682 (concat (_ bv0 67) ?x46519)))\n (let ((?x582391 (bvmul (_ bv14757395258967641293 128) ?x523682)))\n (let ((?x713153 ((_ extract 127 67) ?x582391)))\n (bvule (_ bv10 61) ?x713153))))))))\n(assert\n (let ((?x606049 (concat (_ bv0 64) mem_c0000ff0_2708_64)))\n (let ((?x767259 (bvmul (_ bv14757395258967641293 128) ?x606049)))\n (let ((?x46519 ((_ extract 127 67) ?x767259)))\n (let ((?x523682 (concat (_ bv0 67) ?x46519)))\n (let ((?x582391 (bvmul (_ bv14757395258967641293 128) ?x523682)))\n (let ((?x713153 ((_ extract 127 67) ?x582391)))\n (let ((?x945101 (concat (_ bv0 67) ?x713153)))\n (let ((?x430208 (bvmul (_ bv14757395258967641293 128) ?x945101)))\n (let ((?x295338 ((_ extract 127 67) ?x430208)))\n (bvule (_ bv10 61) ?x295338)))))))))))\n(assert\n (let ((?x606049 (concat (_ bv0 64) mem_c0000ff0_2708_64)))\n (let ((?x767259 (bvmul (_ bv14757395258967641293 128) ?x606049)))\n (let ((?x46519 ((_ extract 127 67) ?x767259)))\n (let ((?x523682 (concat (_ bv0 67) ?x46519)))\n (let ((?x582391 (bvmul (_ bv14757395258967641293 128) ?x523682)))\n (let ((?x713153 ((_ extract 127 67) ?x582391)))\n (let ((?x945101 (concat (_ bv0 67) ?x713153)))\n (let ((?x430208 (bvmul (_ bv14757395258967641293 128) ?x945101)))\n (let ((?x295338 ((_ extract 127 67) ?x430208)))\n (let ((?x950576 (concat (_ bv0 67) ?x295338)))\n (let ((?x943721 (bvmul (_ bv14757395258967641293 128) ?x950576)))\n (let ((?x941081 ((_ extract 127 67) ?x943721)))\n (bvule (_ bv10 61) ?x941081))))))))))))))\n(assert\n (let ((?x606049 (concat (_ bv0 64) mem_c0000ff0_2708_64)))\n (let ((?x767259 (bvmul (_ bv14757395258967641293 128) ?x606049)))\n (let ((?x46519 ((_ extract 127 67) ?x767259)))\n (let ((?x523682 (concat (_ bv0 67) ?x46519)))\n (let ((?x582391 (bvmul (_ bv14757395258967641293 128) ?x523682)))\n (let ((?x713153 ((_ extract 127 67) ?x582391)))\n (let ((?x945101 (concat (_ bv0 67) ?x713153)))\n (let ((?x430208 (bvmul (_ bv14757395258967641293 128) ?x945101)))\n (let ((?x295338 ((_ extract 127 67) ?x430208)))\n (let ((?x950576 (concat (_ bv0 67) ?x295338)))\n (let ((?x943721 (bvmul (_ bv14757395258967641293 128) ?x950576)))\n (let ((?x941081 ((_ extract 127 67) ?x943721)))\n (let ((?x945481 (concat (_ bv0 67) ?x941081)))\n (let ((?x591605 (bvmul (_ bv14757395258967641293 128) ?x945481)))\n (let ((?x635027 ((_ extract 127 67) ?x591605)))\n (bvule (_ bv10 61) ?x635027)))))))))))))))))\n(assert\n (let ((?x606049 (concat (_ bv0 64) mem_c0000ff0_2708_64)))\n (let ((?x767259 (bvmul (_ bv14757395258967641293 128) ?x606049)))\n (let ((?x46519 ((_ extract 127 67) ?x767259)))\n (let ((?x523682 (concat (_ bv0 67) ?x46519)))\n (let ((?x582391 (bvmul (_ bv14757395258967641293 128) ?x523682)))\n (let ((?x713153 ((_ extract 127 67) ?x582391)))\n (let ((?x945101 (concat (_ bv0 67) ?x713153)))\n (let ((?x430208 (bvmul (_ bv14757395258967641293 128) ?x945101)))\n (let ((?x295338 ((_ extract 127 67) ?x430208)))\n (let ((?x950576 (concat (_ bv0 67) ?x295338)))\n (let ((?x943721 (bvmul (_ bv14757395258967641293 128) ?x950576)))\n (let ((?x941081 ((_ extract 127 67) ?x943721)))\n (let ((?x945481 (concat (_ bv0 67) ?x941081)))\n (let ((?x591605 (bvmul (_ bv14757395258967641293 128) ?x945481)))\n (let ((?x635027 ((_ extract 127 67) ?x591605)))\n (let ((?x16777 (concat (_ bv0 67) ?x635027)))\n (let ((?x709898 (bvmul (_ bv14757395258967641293 128) ?x16777)))\n (let ((?x832737 ((_ extract 127 67) ?x709898)))\n (bvule (_ bv10 61) ?x832737))))))))))))))))))))\n(check-sat)\n",
    "time": 25.17917251586914,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=4, tm_hour=14, tm_min=12, tm_sec=15, tm_wday=4, tm_yday=339, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            53.8932671546936
        ]
    }
}