{
    "filename": "wc",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun mem_c0000ff0_2221_64 () (_ BitVec 64))\n(assert\n (bvule (_ bv10 64) mem_c0000ff0_2221_64))\n(assert\n (let ((?x727542 (concat (_ bv0 64) mem_c0000ff0_2221_64)))\n (let ((?x729770 (bvmul (_ bv14757395258967641293 128) ?x727542)))\n (let ((?x3191 ((_ extract 127 67) ?x729770)))\n (bvule (_ bv10 61) ?x3191)))))\n(assert\n (let ((?x727542 (concat (_ bv0 64) mem_c0000ff0_2221_64)))\n (let ((?x729770 (bvmul (_ bv14757395258967641293 128) ?x727542)))\n (let ((?x3191 ((_ extract 127 67) ?x729770)))\n (let ((?x714210 (concat (_ bv0 67) ?x3191)))\n (let ((?x728225 (bvmul (_ bv14757395258967641293 128) ?x714210)))\n (let ((?x285564 ((_ extract 127 67) ?x728225)))\n (bvule (_ bv10 61) ?x285564))))))))\n(assert\n (let ((?x727542 (concat (_ bv0 64) mem_c0000ff0_2221_64)))\n (let ((?x729770 (bvmul (_ bv14757395258967641293 128) ?x727542)))\n (let ((?x3191 ((_ extract 127 67) ?x729770)))\n (let ((?x714210 (concat (_ bv0 67) ?x3191)))\n (let ((?x728225 (bvmul (_ bv14757395258967641293 128) ?x714210)))\n (let ((?x285564 ((_ extract 127 67) ?x728225)))\n (let ((?x662233 (concat (_ bv0 67) ?x285564)))\n (let ((?x682808 (bvmul (_ bv14757395258967641293 128) ?x662233)))\n (let ((?x601224 ((_ extract 127 67) ?x682808)))\n (bvule (_ bv10 61) ?x601224)))))))))))\n(assert\n (let ((?x727542 (concat (_ bv0 64) mem_c0000ff0_2221_64)))\n (let ((?x729770 (bvmul (_ bv14757395258967641293 128) ?x727542)))\n (let ((?x3191 ((_ extract 127 67) ?x729770)))\n (let ((?x714210 (concat (_ bv0 67) ?x3191)))\n (let ((?x728225 (bvmul (_ bv14757395258967641293 128) ?x714210)))\n (let ((?x285564 ((_ extract 127 67) ?x728225)))\n (let ((?x662233 (concat (_ bv0 67) ?x285564)))\n (let ((?x682808 (bvmul (_ bv14757395258967641293 128) ?x662233)))\n (let ((?x601224 ((_ extract 127 67) ?x682808)))\n (let ((?x599982 (concat (_ bv0 67) ?x601224)))\n (let ((?x495070 (bvmul (_ bv14757395258967641293 128) ?x599982)))\n (let ((?x852249 ((_ extract 127 67) ?x495070)))\n (bvule (_ bv10 61) ?x852249))))))))))))))\n(assert\n (let ((?x727542 (concat (_ bv0 64) mem_c0000ff0_2221_64)))\n (let ((?x729770 (bvmul (_ bv14757395258967641293 128) ?x727542)))\n (let ((?x3191 ((_ extract 127 67) ?x729770)))\n (let ((?x714210 (concat (_ bv0 67) ?x3191)))\n (let ((?x728225 (bvmul (_ bv14757395258967641293 128) ?x714210)))\n (let ((?x285564 ((_ extract 127 67) ?x728225)))\n (let ((?x662233 (concat (_ bv0 67) ?x285564)))\n (let ((?x682808 (bvmul (_ bv14757395258967641293 128) ?x662233)))\n (let ((?x601224 ((_ extract 127 67) ?x682808)))\n (let ((?x599982 (concat (_ bv0 67) ?x601224)))\n (let ((?x495070 (bvmul (_ bv14757395258967641293 128) ?x599982)))\n (let ((?x852249 ((_ extract 127 67) ?x495070)))\n (let ((?x227819 (concat (_ bv0 67) ?x852249)))\n (let ((?x718299 (bvmul (_ bv14757395258967641293 128) ?x227819)))\n (let ((?x728830 ((_ extract 127 67) ?x718299)))\n (bvule (_ bv10 61) ?x728830)))))))))))))))))\n(assert\n (let ((?x727542 (concat (_ bv0 64) mem_c0000ff0_2221_64)))\n (let ((?x729770 (bvmul (_ bv14757395258967641293 128) ?x727542)))\n (let ((?x3191 ((_ extract 127 67) ?x729770)))\n (let ((?x714210 (concat (_ bv0 67) ?x3191)))\n (let ((?x728225 (bvmul (_ bv14757395258967641293 128) ?x714210)))\n (let ((?x285564 ((_ extract 127 67) ?x728225)))\n (let ((?x662233 (concat (_ bv0 67) ?x285564)))\n (let ((?x682808 (bvmul (_ bv14757395258967641293 128) ?x662233)))\n (let ((?x601224 ((_ extract 127 67) ?x682808)))\n (let ((?x599982 (concat (_ bv0 67) ?x601224)))\n (let ((?x495070 (bvmul (_ bv14757395258967641293 128) ?x599982)))\n (let ((?x852249 ((_ extract 127 67) ?x495070)))\n (let ((?x227819 (concat (_ bv0 67) ?x852249)))\n (let ((?x718299 (bvmul (_ bv14757395258967641293 128) ?x227819)))\n (let ((?x728830 ((_ extract 127 67) ?x718299)))\n (let ((?x466027 (concat (_ bv0 67) ?x728830)))\n (let ((?x624414 (bvmul (_ bv14757395258967641293 128) ?x466027)))\n (let ((?x719790 ((_ extract 127 67) ?x624414)))\n (let (($x930786 (bvule (_ bv10 61) ?x719790)))\n (not $x930786)))))))))))))))))))))\n(check-sat)\n",
    "time": 100.04991316795349,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=4, tm_hour=12, tm_min=55, tm_sec=41, tm_wday=4, tm_yday=339, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            183.59227061271667
        ]
    }
}