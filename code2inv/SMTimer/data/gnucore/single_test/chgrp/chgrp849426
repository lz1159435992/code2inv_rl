{
    "filename": "chgrp",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun unconstrained_ret_mbrtowc_14265_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_14045_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_14407_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_14545_64 () (_ BitVec 64))\n(declare-fun mem_fffffffff32fdfb0_3612_64 () (_ BitVec 64))\n(assert\n (let (($x347513 (= (_ bv0 64) unconstrained_ret_mbrtowc_14265_64)))\n (not $x347513)))\n(assert\n (let (($x326840 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_14265_64)))\n (not $x326840)))\n(assert\n (let (($x264768 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_14265_64)))\n (not $x264768)))\n(assert\n (let (($x362305 (= (_ bv0 64) unconstrained_ret_mbrtowc_14045_64)))\n (not $x362305)))\n(assert\n (let (($x382034 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_14045_64)))\n (not $x382034)))\n(assert\n (let (($x328451 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_14045_64)))\n (not $x328451)))\n(assert\n (let (($x335594 (= (_ bv0 64) unconstrained_ret_mbrtowc_14407_64)))\n (not $x335594)))\n(assert\n (let (($x374340 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_14407_64)))\n (not $x374340)))\n(assert\n (let (($x406774 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_14407_64)))\n (not $x406774)))\n(assert\n (let (($x329699 (= (_ bv0 64) unconstrained_ret_mbrtowc_14545_64)))\n (not $x329699)))\n(assert\n (let (($x325519 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_14545_64)))\n (not $x325519)))\n(assert\n (let (($x380196 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_14545_64)))\n (not $x380196)))\n(assert\n (let ((?x279603 (bvadd unconstrained_ret_mbrtowc_14045_64 unconstrained_ret_mbrtowc_14265_64)))\n (let ((?x378342 (bvadd ?x279603 unconstrained_ret_mbrtowc_14407_64)))\n (let ((?x341819 (bvadd ?x378342 unconstrained_ret_mbrtowc_14545_64)))\n (let (($x277824 (bvule (_ bv8 64) ?x341819)))\n (not $x277824))))))\n(assert\n (let ((?x379358 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_14545_64)))\n (let ((?x384967 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_14407_64)))\n (let ((?x371159 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_14265_64)))\n (let ((?x339028 (bvadd (_ bv4 64) ?x371159)))\n (let ((?x418365 (bvadd (bvadd ?x339028 ?x384967) ?x379358)))\n (let (($x394311 (= unconstrained_ret_mbrtowc_14045_64 ?x418365)))\n (let ((?x350474 (bvadd (bvadd (bvadd (_ bv2 64) ?x371159) ?x384967) ?x379358)))\n (let (($x385564 (= unconstrained_ret_mbrtowc_14045_64 ?x350474)))\n (let (($x381734 (or $x385564 $x394311)))\n (let ((?x167040 (bvadd (bvadd (bvadd (_ bv5 64) ?x371159) ?x384967) ?x379358)))\n (let (($x384171 (= unconstrained_ret_mbrtowc_14045_64 ?x167040)))\n (let (($x371473 (or $x384171 $x381734)))\n (let ((?x368516 (bvadd (bvadd (bvadd (_ bv7 64) ?x371159) ?x384967) ?x379358)))\n (let (($x410976 (= unconstrained_ret_mbrtowc_14045_64 ?x368516)))\n (let (($x384966 (or $x410976 $x371473)))\n (let ((?x363018 (bvadd (bvadd (bvadd (_ bv1 64) ?x371159) ?x384967) ?x379358)))\n (let (($x368504 (= unconstrained_ret_mbrtowc_14045_64 ?x363018)))\n (let (($x335929 (or $x368504 $x384966)))\n (let ((?x375858 (bvadd (bvadd (bvadd (_ bv6 64) ?x371159) ?x384967) ?x379358)))\n (let (($x392888 (= unconstrained_ret_mbrtowc_14045_64 ?x375858)))\n (let (($x340839 (or $x392888 $x335929)))\n (let ((?x357492 (bvadd (bvadd (bvadd (_ bv3 64) ?x371159) ?x384967) ?x379358)))\n (let (($x395851 (= unconstrained_ret_mbrtowc_14045_64 ?x357492)))\n (let (($x353585 (or $x395851 $x340839)))\n (let ((?x410291 (bvadd (bvadd ?x371159 ?x384967) ?x379358)))\n (let (($x412344 (= unconstrained_ret_mbrtowc_14045_64 ?x410291)))\n (or $x412344 $x353585))))))))))))))))))))))))))))\n(assert\n (let ((?x379358 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_14545_64)))\n (let ((?x384967 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_14407_64)))\n (let ((?x371159 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_14265_64)))\n (let ((?x410291 (bvadd (bvadd ?x371159 ?x384967) ?x379358)))\n (let (($x412344 (= unconstrained_ret_mbrtowc_14045_64 ?x410291)))\n (let ((?x340806 (ite $x412344 (_ bv128 8) (_ bv190 8))))\n (let ((?x368516 (bvadd (bvadd (bvadd (_ bv7 64) ?x371159) ?x384967) ?x379358)))\n (let (($x410976 (= unconstrained_ret_mbrtowc_14045_64 ?x368516)))\n (let ((?x388822 (ite $x410976 (_ bv255 8) ?x340806)))\n (let ((?x363018 (bvadd (bvadd (bvadd (_ bv1 64) ?x371159) ?x384967) ?x379358)))\n (let (($x368504 (= unconstrained_ret_mbrtowc_14045_64 ?x363018)))\n (let ((?x382085 (ite $x368504 (_ bv223 8) ?x388822)))\n (let ((?x375858 (bvadd (bvadd (bvadd (_ bv6 64) ?x371159) ?x384967) ?x379358)))\n (let (($x392888 (= unconstrained_ret_mbrtowc_14045_64 ?x375858)))\n (let ((?x392827 (ite $x392888 (_ bv255 8) ?x382085)))\n (let ((?x350474 (bvadd (bvadd (bvadd (_ bv2 64) ?x371159) ?x384967) ?x379358)))\n (let (($x385564 (= unconstrained_ret_mbrtowc_14045_64 ?x350474)))\n (let ((?x382338 (ite $x385564 (_ bv47 8) ?x392827)))\n (let ((?x167040 (bvadd (bvadd (bvadd (_ bv5 64) ?x371159) ?x384967) ?x379358)))\n (let (($x384171 (= unconstrained_ret_mbrtowc_14045_64 ?x167040)))\n (let ((?x393528 (ite $x384171 (_ bv255 8) ?x382338)))\n (let ((?x357492 (bvadd (bvadd (bvadd (_ bv3 64) ?x371159) ?x384967) ?x379358)))\n (let (($x395851 (= unconstrained_ret_mbrtowc_14045_64 ?x357492)))\n (let ((?x364607 (ite $x395851 (_ bv243 8) ?x393528)))\n (let ((?x418365 (bvadd (bvadd (bvadd (_ bv4 64) ?x371159) ?x384967) ?x379358)))\n (let (($x394311 (= unconstrained_ret_mbrtowc_14045_64 ?x418365)))\n (let ((?x399065 (ite $x394311 (_ bv255 8) ?x364607)))\n (let (($x384987 (= (_ bv0 8) ?x399065)))\n (not $x384987))))))))))))))))))))))))))))))\n(assert\n (let ((?x368840 (bvadd (bvadd (_ bv1 64) unconstrained_ret_mbrtowc_14045_64) unconstrained_ret_mbrtowc_14265_64)))\n (let ((?x394038 (bvadd (bvadd ?x368840 unconstrained_ret_mbrtowc_14407_64) unconstrained_ret_mbrtowc_14545_64)))\n (let (($x366943 (bvule (_ bv8 64) ?x394038)))\n (not $x366943)))))\n(assert\n (= (_ bv0 64) mem_fffffffff32fdfb0_3612_64))\n(assert\n (let ((?x333618 (bvadd (bvadd mem_fffffffff32fdfb0_3612_64 unconstrained_ret_mbrtowc_14045_64) unconstrained_ret_mbrtowc_14265_64)))\n (let ((?x210125 (bvadd ?x333618 unconstrained_ret_mbrtowc_14407_64)))\n (let ((?x407173 (bvadd ?x210125 unconstrained_ret_mbrtowc_14545_64)))\n (let ((?x383803 (bvadd ?x407173 (_ bv1 64))))\n (let (($x380759 (and (distinct (_ bv7 64) ?x383803) true)))\n (let (($x341314 (and (distinct (_ bv6 64) ?x383803) true)))\n (let (($x338578 (and (distinct (_ bv5 64) ?x383803) true)))\n (let (($x377822 (and (distinct (_ bv4 64) ?x383803) true)))\n (let (($x268158 (and (distinct (_ bv3 64) ?x383803) true)))\n (let (($x397327 (and (distinct (_ bv2 64) ?x383803) true)))\n (let (($x341160 (and (distinct (_ bv1 64) ?x383803) true)))\n (and $x341160 $x397327 $x268158 $x377822 $x338578 $x341314 $x380759)))))))))))))\n(check-sat)\n",
    "time": 100.00047993659973,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=2, tm_hour=6, tm_min=34, tm_sec=27, tm_wday=2, tm_yday=337, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            0.35376811027526855
        ]
    }
}