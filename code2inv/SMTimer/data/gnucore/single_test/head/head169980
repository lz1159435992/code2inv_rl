{
    "filename": "head",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun mem_7fffffffffefed0_1322_64 () (_ BitVec 64))\n(assert\n (let ((?x226446 ((_ extract 63 63) mem_7fffffffffefed0_1322_64)))\n (= ?x226446 (_ bv0 1))))\n(assert\n (let ((?x49061 ((_ extract 20 0) mem_7fffffffffefed0_1322_64)))\n (let (($x72799 (bvule ?x49061 (_ bv1048576 21))))\n (let (($x222131 (not $x72799)))\n (let ((?x75400 ((_ extract 63 21) mem_7fffffffffefed0_1322_64)))\n (let (($x44772 (= ?x75400 (_ bv0 43))))\n (let (($x72186 (not $x44772)))\n (or $x72186 $x222131))))))))\n(assert\n (let ((?x63942 ((_ extract 12 0) mem_7fffffffffefed0_1322_64)))\n (let ((?x90522 (concat (_ bv0 51) ?x63942)))\n (let ((?x95402 (bvmul (_ bv18446744073709551615 64) ?x90522)))\n (let ((?x39053 (bvadd (_ bv8192 64) (bvadd mem_7fffffffffefed0_1322_64 ?x95402))))\n (let ((?x215296 ((_ extract 63 13) ?x39053)))\n (let ((?x72373 (concat (_ bv0 13) ?x215296)))\n (let ((?x92793 (bvadd (_ bv1 64) ?x72373)))\n (let ((?x1771908 ((_ extract 63 51) ?x92793)))\n (= ?x1771908 (_ bv0 13)))))))))))\n(assert\n (let ((?x63942 ((_ extract 12 0) mem_7fffffffffefed0_1322_64)))\n (let ((?x90522 (concat (_ bv0 51) ?x63942)))\n (let ((?x95402 (bvmul (_ bv18446744073709551615 64) ?x90522)))\n (let ((?x39053 (bvadd (_ bv8192 64) (bvadd mem_7fffffffffefed0_1322_64 ?x95402))))\n (let ((?x215296 ((_ extract 63 13) ?x39053)))\n (let ((?x243075 (bvadd (_ bv1 51) ?x215296)))\n (bvule ?x243075 (_ bv1125899906842625 51)))))))))\n(assert\n (let ((?x63942 ((_ extract 12 0) mem_7fffffffffefed0_1322_64)))\n (let ((?x90522 (concat (_ bv0 51) ?x63942)))\n (let ((?x95402 (bvmul (_ bv18446744073709551615 64) ?x90522)))\n (let ((?x39053 (bvadd (_ bv8192 64) (bvadd mem_7fffffffffefed0_1322_64 ?x95402))))\n (let ((?x215296 ((_ extract 63 13) ?x39053)))\n (not (= ?x215296 (_ bv0 51)))))))))\n(assert\n (let ((?x63942 ((_ extract 12 0) mem_7fffffffffefed0_1322_64)))\n (let ((?x90522 (concat (_ bv0 51) ?x63942)))\n (let ((?x95402 (bvmul (_ bv18446744073709551615 64) ?x90522)))\n (let ((?x39053 (bvadd (_ bv8192 64) (bvadd mem_7fffffffffefed0_1322_64 ?x95402))))\n (let ((?x215296 ((_ extract 63 13) ?x39053)))\n (not (= ?x215296 (_ bv1 51)))))))))\n(assert\n (let ((?x63942 ((_ extract 12 0) mem_7fffffffffefed0_1322_64)))\n (let ((?x90522 (concat (_ bv0 51) ?x63942)))\n (let ((?x95402 (bvmul (_ bv18446744073709551615 64) ?x90522)))\n (let ((?x39053 (bvadd (_ bv8192 64) (bvadd mem_7fffffffffefed0_1322_64 ?x95402))))\n (let ((?x215296 ((_ extract 63 13) ?x39053)))\n (let ((?x72373 (concat (_ bv0 13) ?x215296)))\n (let ((?x92793 (bvadd (_ bv1 64) ?x72373)))\n (let ((?x848198 (concat (_ bv0 64) ?x92793)))\n (let ((?x1257212 (bvurem (_ bv2 128) ?x848198)))\n (let ((?x1645122 ((_ extract 63 0) ?x1257212)))\n (= ?x1645122 ?x72373))))))))))))\n(check-sat)\n",
    "time": 2.287583351135254,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=4, tm_hour=2, tm_min=15, tm_sec=27, tm_wday=4, tm_yday=339, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            2.341139316558838
        ]
    }
}