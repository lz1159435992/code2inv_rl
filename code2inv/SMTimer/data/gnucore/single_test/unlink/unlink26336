{
    "filename": "unlink",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun unconstrained_ret_mbrtowc_886_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_958_64 () (_ BitVec 64))\n(declare-fun sym_argv_0_80 () (_ BitVec 80))\n(declare-fun strlen_873_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_1030_64 () (_ BitVec 64))\n(assert\n (let (($x28158 (= (_ bv0 64) unconstrained_ret_mbrtowc_886_64)))\n (not $x28158)))\n(assert\n (let (($x7728 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_886_64)))\n (not $x7728)))\n(assert\n (let (($x19106 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_886_64)))\n (not $x19106)))\n(assert\n (let (($x32037 (= (_ bv0 64) unconstrained_ret_mbrtowc_958_64)))\n (not $x32037)))\n(assert\n (let (($x15915 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_958_64)))\n (not $x15915)))\n(assert\n (let (($x22959 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_958_64)))\n (not $x22959)))\n(assert\n (let ((?x404 ((_ extract 47 47) sym_argv_0_80)))\n (= (_ bv0 1) ?x404)))\n(assert\n (let ((?x350 ((_ extract 39 39) sym_argv_0_80)))\n (= (_ bv0 1) ?x350)))\n(assert\n (let ((?x411 ((_ extract 31 31) sym_argv_0_80)))\n (= (_ bv0 1) ?x411)))\n(assert\n (let ((?x467 ((_ extract 23 23) sym_argv_0_80)))\n (= (_ bv0 1) ?x467)))\n(assert\n (let ((?x387 ((_ extract 15 15) sym_argv_0_80)))\n (= (_ bv0 1) ?x387)))\n(assert\n (let ((?x576 ((_ extract 7 7) sym_argv_0_80)))\n (= (_ bv0 1) ?x576)))\n(assert\n (let ((?x322 ((_ extract 46 40) sym_argv_0_80)))\n (bvule ?x322 (_ bv126 7))))\n(assert\n (let ((?x229 ((_ extract 38 32) sym_argv_0_80)))\n (bvule ?x229 (_ bv126 7))))\n(assert\n (let ((?x382 ((_ extract 30 24) sym_argv_0_80)))\n (bvule ?x382 (_ bv126 7))))\n(assert\n (let ((?x251 ((_ extract 22 16) sym_argv_0_80)))\n (bvule ?x251 (_ bv126 7))))\n(assert\n (let ((?x310 ((_ extract 14 8) sym_argv_0_80)))\n (bvule ?x310 (_ bv126 7))))\n(assert\n (let ((?x312 ((_ extract 6 0) sym_argv_0_80)))\n (bvule ?x312 (_ bv126 7))))\n(assert\n (let ((?x16 ((_ extract 79 72) sym_argv_0_80)))\n (= (_ bv12 8) ?x16)))\n(assert\n (let ((?x24 ((_ extract 71 64) sym_argv_0_80)))\n (= (_ bv12 8) ?x24)))\n(assert\n (let ((?x2621 ((_ extract 61 56) sym_argv_0_80)))\n (let (($x4714 (bvule ?x2621 (_ bv39 6))))\n (let ((?x1489 ((_ extract 63 62) sym_argv_0_80)))\n (let (($x1576 (= (_ bv0 2) ?x1489)))\n (let (($x3533 (and $x1576 $x4714)))\n (let ((?x4468 (ite $x3533 (_ bv2 8) (_ bv1 8))))\n (let (($x4539 (= (_ bv0 8) ?x4468)))\n (not $x4539)))))))))\n(assert\n (let ((?x18 ((_ extract 63 56) sym_argv_0_80)))\n (= (_ bv92 8) ?x18)))\n(assert\n (let ((?x10021 ((_ extract 53 48) sym_argv_0_80)))\n (let (($x7324 (bvule ?x10021 (_ bv39 6))))\n (let ((?x3618 ((_ extract 55 54) sym_argv_0_80)))\n (let (($x4621 (= (_ bv0 2) ?x3618)))\n (let (($x4303 (and $x4621 $x7324)))\n (let ((?x12579 (ite $x4303 (_ bv2 8) (_ bv1 8))))\n (let (($x13725 (= (_ bv0 8) ?x12579)))\n (not $x13725)))))))))\n(assert\n (let ((?x31 ((_ extract 55 48) sym_argv_0_80)))\n (= (_ bv64 8) ?x31)))\n(assert\n (let ((?x25903 (bvadd (_ bv576460752303357897 64) strlen_873_64)))\n (let ((?x35 ((_ extract 7 0) sym_argv_0_80)))\n (let (($x2259 (= (_ bv0 8) ?x35)))\n (let ((?x1867 (ite $x2259 (_ bv576460752303357906 64) (_ bv576460752303357907 64))))\n (let ((?x19 ((_ extract 15 8) sym_argv_0_80)))\n (let (($x2377 (= (_ bv0 8) ?x19)))\n (let ((?x2327 (ite $x2377 (_ bv576460752303357905 64) ?x1867)))\n (let ((?x21 ((_ extract 23 16) sym_argv_0_80)))\n (let (($x2538 (= (_ bv0 8) ?x21)))\n (let ((?x2181 (ite $x2538 (_ bv576460752303357904 64) ?x2327)))\n (let ((?x23 ((_ extract 31 24) sym_argv_0_80)))\n (let (($x2318 (= (_ bv0 8) ?x23)))\n (let ((?x581 (ite $x2318 (_ bv576460752303357903 64) ?x2181)))\n (let ((?x27 ((_ extract 39 32) sym_argv_0_80)))\n (let (($x412 (= (_ bv0 8) ?x27)))\n (let ((?x425 (ite $x412 (_ bv576460752303357902 64) ?x581)))\n (let ((?x29 ((_ extract 47 40) sym_argv_0_80)))\n (let (($x2319 (= (_ bv0 8) ?x29)))\n (let ((?x569 (ite $x2319 (_ bv576460752303357901 64) ?x425)))\n (= ?x569 ?x25903)))))))))))))))))))))\n(assert\n (let (($x26534 (= (_ bv0 64) unconstrained_ret_mbrtowc_1030_64)))\n (not $x26534)))\n(assert\n (let (($x29162 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_1030_64)))\n (not $x29162)))\n(assert\n (let (($x12155 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_1030_64)))\n (not $x12155)))\n(assert\n (let ((?x7139 (bvadd (_ bv3 64) unconstrained_ret_mbrtowc_886_64)))\n (let ((?x24032 (bvadd ?x7139 unconstrained_ret_mbrtowc_958_64)))\n (let ((?x40055 (bvadd ?x24032 unconstrained_ret_mbrtowc_1030_64)))\n (let (($x31766 (bvule strlen_873_64 ?x40055)))\n (not $x31766))))))\n(assert\n (let ((?x8754 (bvadd (_ bv576460752303357900 64) unconstrained_ret_mbrtowc_886_64)))\n (let ((?x32262 (bvadd ?x8754 unconstrained_ret_mbrtowc_958_64)))\n (let ((?x20492 (bvadd ?x32262 unconstrained_ret_mbrtowc_1030_64)))\n (bvule (_ bv576460752303357897 64) ?x20492)))))\n(assert\n (let ((?x8754 (bvadd (_ bv576460752303357900 64) unconstrained_ret_mbrtowc_886_64)))\n (let ((?x32262 (bvadd ?x8754 unconstrained_ret_mbrtowc_958_64)))\n (let ((?x20492 (bvadd ?x32262 unconstrained_ret_mbrtowc_1030_64)))\n (let ((?x35350 ((_ extract 63 59) ?x20492)))\n (= (_ bv0 5) ?x35350))))))\n(assert\n (let ((?x19224 ((_ extract 58 0) unconstrained_ret_mbrtowc_1030_64)))\n (let ((?x31881 ((_ extract 58 0) unconstrained_ret_mbrtowc_958_64)))\n (let ((?x27135 ((_ extract 58 0) unconstrained_ret_mbrtowc_886_64)))\n (let ((?x23258 (bvadd (_ bv576460752303357900 59) ?x27135)))\n (let ((?x9166 (bvadd ?x23258 ?x31881)))\n (let ((?x8109 (bvadd ?x9166 ?x19224)))\n (bvule ?x8109 (_ bv576460752303357906 59)))))))))\n(assert\n (let ((?x4168 (bvadd unconstrained_ret_mbrtowc_886_64 unconstrained_ret_mbrtowc_958_64)))\n (let ((?x19466 (bvadd ?x4168 unconstrained_ret_mbrtowc_1030_64)))\n (let ((?x5504 (bvadd ?x19466 (_ bv576460752303357900 64))))\n (let (($x17172 (and (distinct (_ bv576460752303357906 64) ?x5504) true)))\n (let (($x24068 (and (distinct (_ bv576460752303357900 64) ?x5504) true)))\n (let (($x42042 (and (distinct (_ bv576460752303357899 64) ?x5504) true)))\n (let (($x20032 (and (distinct (_ bv576460752303357904 64) ?x5504) true)))\n (let (($x40341 (and (distinct (_ bv576460752303357897 64) ?x5504) true)))\n (and $x40341 $x20032 $x42042 $x24068 $x17172))))))))))\n(assert\n (let ((?x4168 (bvadd unconstrained_ret_mbrtowc_886_64 unconstrained_ret_mbrtowc_958_64)))\n (let ((?x19466 (bvadd ?x4168 unconstrained_ret_mbrtowc_1030_64)))\n (let ((?x5504 (bvadd ?x19466 (_ bv576460752303357900 64))))\n (and (distinct ?x5504 (_ bv576460752303357898 64)) true)))))\n(assert\n (let ((?x4168 (bvadd unconstrained_ret_mbrtowc_886_64 unconstrained_ret_mbrtowc_958_64)))\n (let ((?x19466 (bvadd ?x4168 unconstrained_ret_mbrtowc_1030_64)))\n (let ((?x5504 (bvadd ?x19466 (_ bv576460752303357900 64))))\n (and (distinct ?x5504 (_ bv576460752303357902 64)) true)))))\n(assert\n (let ((?x4168 (bvadd unconstrained_ret_mbrtowc_886_64 unconstrained_ret_mbrtowc_958_64)))\n (let ((?x19466 (bvadd ?x4168 unconstrained_ret_mbrtowc_1030_64)))\n (let ((?x5504 (bvadd ?x19466 (_ bv576460752303357900 64))))\n (and (distinct ?x5504 (_ bv576460752303357901 64)) true)))))\n(assert\n (let ((?x4168 (bvadd unconstrained_ret_mbrtowc_886_64 unconstrained_ret_mbrtowc_958_64)))\n (let ((?x19466 (bvadd ?x4168 unconstrained_ret_mbrtowc_1030_64)))\n (let ((?x5504 (bvadd ?x19466 (_ bv576460752303357900 64))))\n (and (distinct ?x5504 (_ bv576460752303357905 64)) true)))))\n(assert\n (let ((?x4168 (bvadd unconstrained_ret_mbrtowc_886_64 unconstrained_ret_mbrtowc_958_64)))\n (let ((?x19466 (bvadd ?x4168 unconstrained_ret_mbrtowc_1030_64)))\n (let ((?x5504 (bvadd ?x19466 (_ bv576460752303357900 64))))\n (and (distinct ?x5504 (_ bv576460752303357903 64)) true)))))\n(check-sat)\n",
    "time": 100.00027322769165,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=2, tm_hour=4, tm_min=30, tm_sec=59, tm_wday=2, tm_yday=337, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            16.960769653320312
        ]
    }
}