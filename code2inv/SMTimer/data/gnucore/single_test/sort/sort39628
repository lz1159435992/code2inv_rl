{
    "filename": "sort",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun unconstrained_ret_fread_unlocked_1671_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_fread_unlocked_2075_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_fread_unlocked_2256_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_fread_unlocked_2613_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_fread_unlocked_1473_64 () (_ BitVec 64))\n(assert\n (let (($x59188 (= (_ bv7703 64) unconstrained_ret_fread_unlocked_1671_64)))\n (not $x59188)))\n(assert\n (let ((?x219114 ((_ extract 5 0) unconstrained_ret_fread_unlocked_1671_64)))\n (let ((?x122535 (bvmul (_ bv63 6) ?x219114)))\n (let ((?x81992 (bvadd (_ bv24 6) ?x122535)))\n (let (($x77676 (bvule ?x81992 (_ bv33 6))))\n (let (($x104988 (not $x77676)))\n (let ((?x147189 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_1671_64)))\n (let ((?x80081 (bvadd (_ bv254168 64) ?x147189)))\n (let ((?x44832 ((_ extract 63 6) ?x80081)))\n (let (($x14891 (= (_ bv0 58) ?x44832)))\n (let (($x152636 (not $x14891)))\n (or $x152636 $x104988))))))))))))\n(assert\n (let ((?x147189 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_1671_64)))\n (let ((?x143106 (bvadd (_ bv254167 64) ?x147189)))\n (let ((?x59925 (concat (_ bv0 64) ?x143106)))\n (let ((?x69472 (bvudiv ?x59925 (_ bv33 128))))\n (let ((?x127355 ((_ extract 63 0) ?x69472)))\n (= unconstrained_ret_fread_unlocked_2075_64 ?x127355)))))))\n(assert\n (let ((?x3084963 ((_ extract 5 0) unconstrained_ret_fread_unlocked_2075_64)))\n (let ((?x760964 (bvmul (_ bv63 6) ?x3084963)))\n (let ((?x219114 ((_ extract 5 0) unconstrained_ret_fread_unlocked_1671_64)))\n (let ((?x122535 (bvmul (_ bv63 6) ?x219114)))\n (let ((?x337794 (bvadd (_ bv56 6) ?x122535)))\n (let ((?x3097431 (bvadd ?x337794 ?x760964)))\n (let (($x761617 (bvule ?x3097431 (_ bv33 6))))\n (let (($x3112313 (not $x761617)))\n (let ((?x99914 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_2075_64)))\n (let ((?x144822 (bvadd (bvadd (_ bv254136 64) (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_1671_64)) ?x99914)))\n (let ((?x1406275 ((_ extract 63 6) ?x144822)))\n (let (($x3086433 (= (_ bv0 58) ?x1406275)))\n (let (($x3110368 (not $x3086433)))\n (or $x3110368 $x3112313)))))))))))))))\n(assert\n (let ((?x99914 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_2075_64)))\n (let ((?x763783 (bvadd (bvadd (_ bv254135 64) (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_1671_64)) ?x99914)))\n (let ((?x3113236 (concat (_ bv0 64) ?x763783)))\n (let ((?x3101768 (bvudiv ?x3113236 (_ bv33 128))))\n (let ((?x3099210 ((_ extract 63 0) ?x3101768)))\n (let (($x2863621 (= unconstrained_ret_fread_unlocked_2256_64 ?x3099210)))\n (not $x2863621))))))))\n(assert\n (let ((?x1922475 ((_ extract 5 0) unconstrained_ret_fread_unlocked_2256_64)))\n (let ((?x368160 (bvmul (_ bv63 6) ?x1922475)))\n (let ((?x3084963 ((_ extract 5 0) unconstrained_ret_fread_unlocked_2075_64)))\n (let ((?x760964 (bvmul (_ bv63 6) ?x3084963)))\n (let ((?x219114 ((_ extract 5 0) unconstrained_ret_fread_unlocked_1671_64)))\n (let ((?x122535 (bvmul (_ bv63 6) ?x219114)))\n (let ((?x81992 (bvadd (_ bv24 6) ?x122535)))\n (let ((?x108806 (bvadd ?x81992 ?x760964)))\n (let ((?x3182024 (bvadd ?x108806 ?x368160)))\n (let (($x770514 (bvule ?x3182024 (_ bv33 6))))\n (let (($x2884556 (not $x770514)))\n (let ((?x82630 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_2256_64)))\n (let ((?x99914 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_2075_64)))\n (let ((?x1377833 (bvadd (bvadd (_ bv254104 64) (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_1671_64)) ?x99914)))\n (let ((?x1794100 (bvadd ?x1377833 ?x82630)))\n (let ((?x2875820 ((_ extract 63 6) ?x1794100)))\n (let (($x3580910 (= (_ bv0 58) ?x2875820)))\n (let (($x1905908 (not $x3580910)))\n (or $x1905908 $x2884556))))))))))))))))))))\n(assert\n (let ((?x82630 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_2256_64)))\n (let ((?x99914 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_2075_64)))\n (let ((?x2858827 (bvadd (bvadd (_ bv254103 64) (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_1671_64)) ?x99914)))\n (let ((?x3099607 (bvadd ?x2858827 ?x82630)))\n (let ((?x1905336 (concat (_ bv0 64) ?x3099607)))\n (let ((?x3102964 (bvudiv ?x1905336 (_ bv33 128))))\n (let ((?x1397555 ((_ extract 63 0) ?x3102964)))\n (let (($x3091702 (= unconstrained_ret_fread_unlocked_2613_64 ?x1397555)))\n (not $x3091702))))))))))\n(assert\n (let ((?x384323 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_2613_64)))\n (let ((?x82630 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_2256_64)))\n (let ((?x99914 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_2075_64)))\n (let ((?x112715 (bvadd (_ bv18446744073709543672 64) ?x99914)))\n (let ((?x1387537 (bvadd ?x112715 ?x82630)))\n (let ((?x3548147 (bvadd ?x1387537 ?x384323)))\n (let (($x3802458 (= unconstrained_ret_fread_unlocked_1671_64 ?x3548147)))\n (not $x3802458)))))))))\n(assert\n (= (_ bv7944 64) unconstrained_ret_fread_unlocked_1473_64))\n(assert\n (let ((?x98685 (bvadd unconstrained_ret_fread_unlocked_1473_64 unconstrained_ret_fread_unlocked_1671_64)))\n (let ((?x32859 (bvadd ?x98685 unconstrained_ret_fread_unlocked_2075_64)))\n (let ((?x41999 (bvadd ?x32859 unconstrained_ret_fread_unlocked_2256_64)))\n (let ((?x1405377 (bvadd (bvadd ?x41999 unconstrained_ret_fread_unlocked_2613_64) (_ bv3221229535 64))))\n (bvule ?x1405377 (_ bv14195346016881888509 64)))))))\n(assert\n (let ((?x98685 (bvadd unconstrained_ret_fread_unlocked_1473_64 unconstrained_ret_fread_unlocked_1671_64)))\n (let ((?x32859 (bvadd ?x98685 unconstrained_ret_fread_unlocked_2075_64)))\n (let ((?x41999 (bvadd ?x32859 unconstrained_ret_fread_unlocked_2256_64)))\n (let ((?x1405377 (bvadd (bvadd ?x41999 unconstrained_ret_fread_unlocked_2613_64) (_ bv3221229535 64))))\n (bvule ?x1405377 (_ bv12718216284757761711 64)))))))\n(assert\n (let ((?x98685 (bvadd unconstrained_ret_fread_unlocked_1473_64 unconstrained_ret_fread_unlocked_1671_64)))\n (let ((?x32859 (bvadd ?x98685 unconstrained_ret_fread_unlocked_2075_64)))\n (let ((?x41999 (bvadd ?x32859 unconstrained_ret_fread_unlocked_2256_64)))\n (let ((?x1405377 (bvadd (bvadd ?x41999 unconstrained_ret_fread_unlocked_2613_64) (_ bv3221229535 64))))\n (bvuge ?x1405377 (_ bv0 64)))))))\n(assert\n (let ((?x98685 (bvadd unconstrained_ret_fread_unlocked_1473_64 unconstrained_ret_fread_unlocked_1671_64)))\n (let ((?x32859 (bvadd ?x98685 unconstrained_ret_fread_unlocked_2075_64)))\n (let ((?x41999 (bvadd ?x32859 unconstrained_ret_fread_unlocked_2256_64)))\n (let ((?x1405377 (bvadd (bvadd ?x41999 unconstrained_ret_fread_unlocked_2613_64) (_ bv3221229535 64))))\n (bvule ?x1405377 (_ bv9223372036854775807 64)))))))\n(check-sat)\n",
    "time": 2.2951390743255615,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=13, tm_hour=6, tm_min=38, tm_sec=15, tm_wday=6, tm_yday=348, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            0.4827287197113037
        ]
    }
}