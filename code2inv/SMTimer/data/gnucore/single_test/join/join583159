{
    "filename": "join",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun unconstrained_ret_mbrtowc_10344_64 () (_ BitVec 64))\n(declare-fun sym_argv_0_80 () (_ BitVec 80))\n(declare-fun strlen_8536_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_mbrtowc_10255_64 () (_ BitVec 64))\n(assert\n (let (($x122702 (= (_ bv0 64) unconstrained_ret_mbrtowc_10344_64)))\n (not $x122702)))\n(assert\n (let (($x137081 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_10344_64)))\n (not $x137081)))\n(assert\n (let (($x199777 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_10344_64)))\n (not $x199777)))\n(assert\n (let ((?x8813 ((_ extract 71 71) sym_argv_0_80)))\n (= (_ bv0 1) ?x8813)))\n(assert\n (let ((?x7528 ((_ extract 63 63) sym_argv_0_80)))\n (= (_ bv0 1) ?x7528)))\n(assert\n (let ((?x29485 ((_ extract 55 55) sym_argv_0_80)))\n (= (_ bv0 1) ?x29485)))\n(assert\n (let ((?x8511 ((_ extract 47 47) sym_argv_0_80)))\n (= (_ bv0 1) ?x8511)))\n(assert\n (let ((?x6997 ((_ extract 39 39) sym_argv_0_80)))\n (= (_ bv0 1) ?x6997)))\n(assert\n (let ((?x17068 ((_ extract 31 31) sym_argv_0_80)))\n (= (_ bv0 1) ?x17068)))\n(assert\n (let ((?x34850 ((_ extract 23 23) sym_argv_0_80)))\n (= (_ bv0 1) ?x34850)))\n(assert\n (let ((?x34536 ((_ extract 15 15) sym_argv_0_80)))\n (= (_ bv0 1) ?x34536)))\n(assert\n (let ((?x20048 ((_ extract 7 7) sym_argv_0_80)))\n (= (_ bv0 1) ?x20048)))\n(assert\n (let ((?x33908 ((_ extract 70 64) sym_argv_0_80)))\n (bvule ?x33908 (_ bv126 7))))\n(assert\n (let ((?x3421 ((_ extract 62 56) sym_argv_0_80)))\n (bvule ?x3421 (_ bv126 7))))\n(assert\n (let ((?x32588 ((_ extract 54 48) sym_argv_0_80)))\n (bvule ?x32588 (_ bv126 7))))\n(assert\n (let ((?x35644 ((_ extract 46 40) sym_argv_0_80)))\n (bvule ?x35644 (_ bv126 7))))\n(assert\n (let ((?x34864 ((_ extract 38 32) sym_argv_0_80)))\n (bvule ?x34864 (_ bv126 7))))\n(assert\n (let ((?x31196 ((_ extract 30 24) sym_argv_0_80)))\n (bvule ?x31196 (_ bv126 7))))\n(assert\n (let ((?x30743 ((_ extract 22 16) sym_argv_0_80)))\n (bvule ?x30743 (_ bv126 7))))\n(assert\n (let ((?x30099 ((_ extract 14 8) sym_argv_0_80)))\n (bvule ?x30099 (_ bv126 7))))\n(assert\n (let ((?x21621 ((_ extract 6 0) sym_argv_0_80)))\n (bvule ?x21621 (_ bv126 7))))\n(assert\n (let ((?x169548 ((_ extract 77 72) sym_argv_0_80)))\n (let (($x219294 (bvule ?x169548 (_ bv39 6))))\n (let ((?x264011 ((_ extract 79 78) sym_argv_0_80)))\n (let (($x108184 (= (_ bv0 2) ?x264011)))\n (let (($x249203 (and $x108184 $x219294)))\n (let ((?x4984 (ite $x249203 (_ bv2 8) (_ bv1 8))))\n (let (($x102032 (= (_ bv0 8) ?x4984)))\n (not $x102032)))))))))\n(assert\n (let ((?x16 ((_ extract 79 72) sym_argv_0_80)))\n (= (_ bv64 8) ?x16)))\n(assert\n (let ((?x176105 (bvadd (_ bv576460752303357895 64) strlen_8536_64)))\n (let ((?x35 ((_ extract 7 0) sym_argv_0_80)))\n (let (($x13101 (= (_ bv0 8) ?x35)))\n (let ((?x17999 (ite $x13101 (_ bv576460752303357904 64) (_ bv576460752303357905 64))))\n (let ((?x19 ((_ extract 15 8) sym_argv_0_80)))\n (let (($x19820 (= (_ bv0 8) ?x19)))\n (let ((?x18591 (ite $x19820 (_ bv576460752303357903 64) ?x17999)))\n (let ((?x21 ((_ extract 23 16) sym_argv_0_80)))\n (let (($x18078 (= (_ bv0 8) ?x21)))\n (let ((?x32017 (ite $x18078 (_ bv576460752303357902 64) ?x18591)))\n (let ((?x23 ((_ extract 31 24) sym_argv_0_80)))\n (let (($x13397 (= (_ bv0 8) ?x23)))\n (let ((?x13252 (ite $x13397 (_ bv576460752303357901 64) ?x32017)))\n (let ((?x27 ((_ extract 39 32) sym_argv_0_80)))\n (let (($x34304 (= (_ bv0 8) ?x27)))\n (let ((?x34136 (ite $x34304 (_ bv576460752303357900 64) ?x13252)))\n (let ((?x29 ((_ extract 47 40) sym_argv_0_80)))\n (let (($x11135 (= (_ bv0 8) ?x29)))\n (let ((?x26905 (ite $x11135 (_ bv576460752303357899 64) ?x34136)))\n (let ((?x31 ((_ extract 55 48) sym_argv_0_80)))\n (let (($x22608 (= (_ bv0 8) ?x31)))\n (let ((?x33002 (ite $x22608 (_ bv576460752303357898 64) ?x26905)))\n (let ((?x18 ((_ extract 63 56) sym_argv_0_80)))\n (let (($x20801 (= (_ bv0 8) ?x18)))\n (let ((?x7560 (ite $x20801 (_ bv576460752303357897 64) ?x33002)))\n (let ((?x24 ((_ extract 71 64) sym_argv_0_80)))\n (let (($x13918 (= (_ bv0 8) ?x24)))\n (let ((?x22556 (ite $x13918 (_ bv576460752303357896 64) ?x7560)))\n (= ?x22556 ?x176105))))))))))))))))))))))))))))))\n(assert\n (let (($x49785 (= (_ bv18 64) strlen_8536_64)))\n (not $x49785)))\n(assert\n (let (($x155763 (bvule (_ bv22 64) strlen_8536_64)))\n (not $x155763)))\n(assert\n (let (($x213924 (= (_ bv0 64) unconstrained_ret_mbrtowc_10255_64)))\n (not $x213924)))\n(assert\n (let (($x82112 (= (_ bv18446744073709551615 64) unconstrained_ret_mbrtowc_10255_64)))\n (not $x82112)))\n(assert\n (let (($x123897 (= (_ bv18446744073709551614 64) unconstrained_ret_mbrtowc_10255_64)))\n (not $x123897)))\n(assert\n (let ((?x165743 (bvadd (_ bv21 64) unconstrained_ret_mbrtowc_10255_64)))\n (let ((?x262058 (bvadd ?x165743 unconstrained_ret_mbrtowc_10344_64)))\n (let (($x52443 (bvule strlen_8536_64 ?x262058)))\n (not $x52443)))))\n(assert\n (let ((?x156710 ((_ extract 4 0) strlen_8536_64)))\n (bvule ?x156710 (_ bv18 5))))\n(assert\n (let ((?x139531 (bvadd (_ bv576460752303357916 64) unconstrained_ret_mbrtowc_10255_64)))\n (let ((?x40620 (bvadd ?x139531 unconstrained_ret_mbrtowc_10344_64)))\n (bvule (_ bv576460752303357895 64) ?x40620))))\n(assert\n (let ((?x139531 (bvadd (_ bv576460752303357916 64) unconstrained_ret_mbrtowc_10255_64)))\n (let ((?x40620 (bvadd ?x139531 unconstrained_ret_mbrtowc_10344_64)))\n (let ((?x144477 ((_ extract 63 59) ?x40620)))\n (= (_ bv0 5) ?x144477)))))\n(assert\n (let ((?x46972 ((_ extract 58 0) unconstrained_ret_mbrtowc_10344_64)))\n (let ((?x84745 (bvadd (bvadd (_ bv576460752303357916 59) ((_ extract 58 0) unconstrained_ret_mbrtowc_10255_64)) ?x46972)))\n (bvule ?x84745 (_ bv576460752303357904 59)))))\n(assert\n (let ((?x114888 (bvadd unconstrained_ret_mbrtowc_10255_64 unconstrained_ret_mbrtowc_10344_64)))\n (let ((?x130743 (bvadd ?x114888 (_ bv576460752303357916 64))))\n (let (($x52955 (and (distinct (_ bv576460752303357901 64) ?x130743) true)))\n (let (($x267447 (and (distinct (_ bv576460752303357895 64) ?x130743) true)))\n (let (($x188673 (and (distinct (_ bv576460752303357900 64) ?x130743) true)))\n (let (($x144597 (and (distinct (_ bv576460752303357904 64) ?x130743) true)))\n (let (($x172368 (and (distinct (_ bv576460752303357897 64) ?x130743) true)))\n (let (($x11624 (and (distinct (_ bv576460752303357896 64) ?x130743) true)))\n (and $x11624 $x172368 $x144597 $x188673 $x267447 $x52955))))))))))\n(assert\n (let ((?x114888 (bvadd unconstrained_ret_mbrtowc_10255_64 unconstrained_ret_mbrtowc_10344_64)))\n (let ((?x130743 (bvadd ?x114888 (_ bv576460752303357916 64))))\n (and (distinct ?x130743 (_ bv576460752303357902 64)) true))))\n(assert\n (let ((?x114888 (bvadd unconstrained_ret_mbrtowc_10255_64 unconstrained_ret_mbrtowc_10344_64)))\n (let ((?x130743 (bvadd ?x114888 (_ bv576460752303357916 64))))\n (and (distinct ?x130743 (_ bv576460752303357898 64)) true))))\n(assert\n (let ((?x114888 (bvadd unconstrained_ret_mbrtowc_10255_64 unconstrained_ret_mbrtowc_10344_64)))\n (let ((?x130743 (bvadd ?x114888 (_ bv576460752303357916 64))))\n (and (distinct ?x130743 (_ bv576460752303357899 64)) true))))\n(assert\n (let ((?x114888 (bvadd unconstrained_ret_mbrtowc_10255_64 unconstrained_ret_mbrtowc_10344_64)))\n (let ((?x130743 (bvadd ?x114888 (_ bv576460752303357916 64))))\n (and (distinct ?x130743 (_ bv576460752303357903 64)) true))))\n(check-sat)\n",
    "time": 2.144242286682129,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=1, tm_hour=17, tm_min=50, tm_sec=37, tm_wday=1, tm_yday=336, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            1.5252249240875244
        ]
    }
}