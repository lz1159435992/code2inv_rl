{
    "filename": "od",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun unconstrained_ret_fread_unlocked_970_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_fread_unlocked_1424_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_fread_unlocked_1844_64 () (_ BitVec 64))\n(assert\n (let (($x37617 (= (_ bv16 64) unconstrained_ret_fread_unlocked_970_64)))\n (not $x37617)))\n(assert\n (let ((?x32793 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_970_64)))\n (let ((?x33950 (bvadd (_ bv16 64) ?x32793)))\n (let (($x11708 (= unconstrained_ret_fread_unlocked_1424_64 ?x33950)))\n (not $x11708)))))\n(assert\n (let ((?x11803 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_1424_64)))\n (let ((?x32793 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_970_64)))\n (let ((?x33950 (bvadd (_ bv16 64) ?x32793)))\n (let ((?x42393 (bvadd ?x33950 ?x11803)))\n (let (($x36733 (= unconstrained_ret_fread_unlocked_1844_64 ?x42393)))\n (not $x36733)))))))\n(assert\n (let ((?x13157 (bvadd unconstrained_ret_fread_unlocked_970_64 unconstrained_ret_fread_unlocked_1424_64)))\n (let ((?x7983 (bvadd ?x13157 unconstrained_ret_fread_unlocked_1844_64)))\n (let (($x11380 (bvule (_ bv16 64) ?x7983)))\n (not $x11380)))))\n(assert\n (let ((?x49516 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_1844_64)))\n (let ((?x11803 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_1424_64)))\n (let ((?x1426 (bvadd ?x11803 ?x49516)))\n (let (($x24439 (= unconstrained_ret_fread_unlocked_970_64 ?x1426)))\n (not $x24439))))))\n(assert\n (let ((?x49516 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_1844_64)))\n (let ((?x11803 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_1424_64)))\n (let ((?x32793 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_970_64)))\n (let ((?x11446 (bvadd (_ bv1 64) unconstrained_ret_fread_unlocked_970_64)))\n (let ((?x14211 (bvadd (bvadd ?x11446 unconstrained_ret_fread_unlocked_1424_64) unconstrained_ret_fread_unlocked_1844_64)))\n (let ((?x31091 ((_ extract 63 1) ?x14211)))\n (let ((?x15177 (concat (_ bv0 1) ?x31091)))\n (let ((?x23951 (bvmul (_ bv2 64) ?x15177)))\n (let ((?x35465 (bvadd (bvadd (bvadd ?x23951 ?x32793) ?x11803) ?x49516)))\n (let (($x10239 (and (distinct (_ bv1 64) ?x35465) true)))\n (let (($x40897 (and (distinct (_ bv0 64) ?x35465) true)))\n (and $x40897 $x10239)))))))))))))\n(assert\n (let ((?x49516 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_1844_64)))\n (let ((?x11803 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_1424_64)))\n (let ((?x32793 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_970_64)))\n (let ((?x11446 (bvadd (_ bv1 64) unconstrained_ret_fread_unlocked_970_64)))\n (let ((?x14211 (bvadd (bvadd ?x11446 unconstrained_ret_fread_unlocked_1424_64) unconstrained_ret_fread_unlocked_1844_64)))\n (let ((?x31091 ((_ extract 63 1) ?x14211)))\n (let ((?x15177 (concat (_ bv0 1) ?x31091)))\n (let ((?x23951 (bvmul (_ bv2 64) ?x15177)))\n (let ((?x35465 (bvadd (bvadd (bvadd ?x23951 ?x32793) ?x11803) ?x49516)))\n (bvule ?x35465 (_ bv384 64))))))))))))\n(check-sat)\n",
    "time": 100.00029110908508,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=13, tm_hour=4, tm_min=18, tm_sec=29, tm_wday=6, tm_yday=348, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            0.5184996128082275
        ]
    }
}