{
    "filename": "od",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun unconstrained_ret_fread_unlocked_995_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_fread_unlocked_1449_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_fread_unlocked_1868_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_fread_unlocked_2442_64 () (_ BitVec 64))\n(assert\n (let (($x40731 (= unconstrained_ret_fread_unlocked_995_64 (_ bv16 64))))\n (not $x40731)))\n(assert\n (let ((?x48265 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_995_64)))\n (let ((?x43600 (bvadd (_ bv16 64) ?x48265)))\n (let (($x54231 (= unconstrained_ret_fread_unlocked_1449_64 ?x43600)))\n (not $x54231)))))\n(assert\n (let ((?x34738 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_1449_64)))\n (let ((?x48265 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_995_64)))\n (let ((?x19566 (bvadd (_ bv16 64) (bvadd ?x48265 ?x34738))))\n (= unconstrained_ret_fread_unlocked_1868_64 ?x19566)))))\n(assert\n (let ((?x50809 (bvadd unconstrained_ret_fread_unlocked_995_64 unconstrained_ret_fread_unlocked_1449_64)))\n (let ((?x39450 (bvadd ?x50809 unconstrained_ret_fread_unlocked_1868_64)))\n (bvule (_ bv16 64) ?x39450))))\n(assert\n (let ((?x20486 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_1868_64)))\n (let ((?x34738 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_1449_64)))\n (let ((?x26757 (bvadd ?x34738 ?x20486)))\n (= unconstrained_ret_fread_unlocked_995_64 (bvadd (_ bv16 64) ?x26757))))))\n(assert\n (let (($x8700 (bvule (_ bv16 64) unconstrained_ret_fread_unlocked_2442_64)))\n (not $x8700)))\n(assert\n (let (($x41881 (= unconstrained_ret_fread_unlocked_2442_64 (_ bv0 64))))\n (not $x41881)))\n(assert\n (= ((_ extract 63 32) (bvadd (_ bv3221229400 64) unconstrained_ret_fread_unlocked_2442_64)) (_ bv0 32)))\n(assert\n (let (($x13359 (= unconstrained_ret_fread_unlocked_2442_64 (_ bv15 64))))\n (let ((?x51524 (bvadd (_ bv1 64) unconstrained_ret_fread_unlocked_2442_64)))\n (let ((?x54147 ((_ extract 63 1) ?x51524)))\n (let ((?x48280 (concat (_ bv0 1) ?x54147)))\n (let ((?x29363 (bvmul (_ bv18446744073709551614 64) ?x48280)))\n (let (($x53759 (= ?x29363 (bvadd (_ bv18446744073709551615 64) (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_2442_64)))))\n (or (not $x53759) $x13359))))))))\n(assert\n (let ((?x51524 (bvadd (_ bv1 64) unconstrained_ret_fread_unlocked_2442_64)))\n (let ((?x54147 ((_ extract 63 1) ?x51524)))\n (let ((?x48280 (concat (_ bv0 1) ?x54147)))\n (let ((?x42677 (bvmul (_ bv2 64) ?x48280)))\n (= ?x42677 (_ bv16 64)))))))\n(assert\n (let ((?x50809 (bvadd unconstrained_ret_fread_unlocked_995_64 unconstrained_ret_fread_unlocked_1449_64)))\n (let ((?x39450 (bvadd ?x50809 unconstrained_ret_fread_unlocked_1868_64)))\n (let ((?x11539 (bvadd (_ bv48 64) (bvadd ?x39450 unconstrained_ret_fread_unlocked_2442_64))))\n (not (= ((_ extract 63 3) ?x11539) (_ bv0 61)))))))\n(assert\n (let ((?x50809 (bvadd unconstrained_ret_fread_unlocked_995_64 unconstrained_ret_fread_unlocked_1449_64)))\n (let ((?x39450 (bvadd ?x50809 unconstrained_ret_fread_unlocked_1868_64)))\n (let ((?x11539 (bvadd (_ bv48 64) (bvadd ?x39450 unconstrained_ret_fread_unlocked_2442_64))))\n (not (= ((_ extract 63 6) ?x11539) (_ bv0 58)))))))\n(assert\n (let ((?x50809 (bvadd unconstrained_ret_fread_unlocked_995_64 unconstrained_ret_fread_unlocked_1449_64)))\n (let ((?x39450 (bvadd ?x50809 unconstrained_ret_fread_unlocked_1868_64)))\n (let ((?x11539 (bvadd (_ bv48 64) (bvadd ?x39450 unconstrained_ret_fread_unlocked_2442_64))))\n (not (= ((_ extract 63 9) ?x11539) (_ bv0 55)))))))\n(assert\n (let ((?x4794 ((_ extract 31 0) unconstrained_ret_fread_unlocked_2442_64)))\n (let ((?x31014 (bvadd (_ bv3221229400 32) ?x4794)))\n (bvule ?x31014 (_ bv3221229415 32)))))\n(check-sat)\n",
    "time": 2.2878501415252686,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=13, tm_hour=4, tm_min=37, tm_sec=0, tm_wday=6, tm_yday=348, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            1.3090031147003174
        ]
    }
}