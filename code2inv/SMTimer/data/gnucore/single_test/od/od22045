{
    "filename": "od",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun unconstrained_ret_fread_unlocked_970_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_fread_unlocked_1398_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_fread_unlocked_1789_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_fread_unlocked_2010_64 () (_ BitVec 64))\n(assert\n (let (($x34960 (= unconstrained_ret_fread_unlocked_970_64 (_ bv16 64))))\n (not $x34960)))\n(assert\n (let ((?x32793 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_970_64)))\n (let ((?x33950 (bvadd (_ bv16 64) ?x32793)))\n (let (($x39311 (= unconstrained_ret_fread_unlocked_1398_64 ?x33950)))\n (not $x39311)))))\n(assert\n (let ((?x45699 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_1398_64)))\n (let ((?x32793 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_970_64)))\n (= unconstrained_ret_fread_unlocked_1789_64 (bvadd (_ bv16 64) (bvadd ?x32793 ?x45699))))))\n(assert\n (let ((?x35398 (bvadd unconstrained_ret_fread_unlocked_970_64 unconstrained_ret_fread_unlocked_1398_64)))\n (let ((?x51191 (bvadd ?x35398 unconstrained_ret_fread_unlocked_1789_64)))\n (bvule (_ bv16 64) ?x51191))))\n(assert\n (let ((?x8280 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_1789_64)))\n (let ((?x45699 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_1398_64)))\n (let ((?x36859 (bvadd ?x45699 ?x8280)))\n (= unconstrained_ret_fread_unlocked_970_64 (bvadd (_ bv16 64) ?x36859))))))\n(assert\n (let (($x31360 (bvule (_ bv16 64) unconstrained_ret_fread_unlocked_2010_64)))\n (not $x31360)))\n(assert\n (let (($x47971 (= unconstrained_ret_fread_unlocked_2010_64 (_ bv0 64))))\n (not $x47971)))\n(assert\n (= ((_ extract 63 32) (bvadd (_ bv3221229400 64) unconstrained_ret_fread_unlocked_2010_64)) (_ bv0 32)))\n(assert\n (let (($x12761 (= unconstrained_ret_fread_unlocked_2010_64 (_ bv15 64))))\n (let ((?x4621 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_2010_64)))\n (let ((?x10644 (bvadd (_ bv18446744073709551615 64) ?x4621)))\n (let ((?x53251 (bvadd (_ bv1 64) unconstrained_ret_fread_unlocked_2010_64)))\n (let ((?x51249 ((_ extract 63 1) ?x53251)))\n (let ((?x24738 (concat (_ bv0 1) ?x51249)))\n (let ((?x49260 (bvmul (_ bv18446744073709551614 64) ?x24738)))\n (let (($x4597 (= ?x49260 ?x10644)))\n (let (($x14744 (not $x4597)))\n (or $x14744 $x12761)))))))))))\n(assert\n (let ((?x53251 (bvadd (_ bv1 64) unconstrained_ret_fread_unlocked_2010_64)))\n (let ((?x51249 ((_ extract 63 1) ?x53251)))\n (let ((?x24738 (concat (_ bv0 1) ?x51249)))\n (let ((?x10814 (bvmul (_ bv2 64) ?x24738)))\n (= ?x10814 (_ bv16 64)))))))\n(assert\n (let ((?x35398 (bvadd unconstrained_ret_fread_unlocked_970_64 unconstrained_ret_fread_unlocked_1398_64)))\n (let ((?x51191 (bvadd ?x35398 unconstrained_ret_fread_unlocked_1789_64)))\n (let ((?x39734 (bvadd (_ bv16 64) (bvadd ?x51191 unconstrained_ret_fread_unlocked_2010_64))))\n (not (= ((_ extract 63 3) ?x39734) (_ bv0 61)))))))\n(assert\n (let ((?x35398 (bvadd unconstrained_ret_fread_unlocked_970_64 unconstrained_ret_fread_unlocked_1398_64)))\n (let ((?x51191 (bvadd ?x35398 unconstrained_ret_fread_unlocked_1789_64)))\n (let ((?x39734 (bvadd (_ bv16 64) (bvadd ?x51191 unconstrained_ret_fread_unlocked_2010_64))))\n (not (= ((_ extract 63 6) ?x39734) (_ bv0 58)))))))\n(assert\n (let ((?x41533 ((_ extract 31 0) unconstrained_ret_fread_unlocked_2010_64)))\n (let ((?x10641 (bvadd (_ bv3221229400 32) ?x41533)))\n (bvule ?x10641 (_ bv3221229415 32)))))\n(check-sat)\n",
    "time": 2.203080415725708,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=13, tm_hour=4, tm_min=25, tm_sec=28, tm_wday=6, tm_yday=348, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            1.0946471691131592
        ]
    }
}