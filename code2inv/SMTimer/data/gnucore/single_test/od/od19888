{
    "filename": "od",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun unconstrained_ret_fread_unlocked_995_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_fread_unlocked_1449_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_fread_unlocked_1889_64 () (_ BitVec 64))\n(assert\n (let (($x33058 (= (_ bv16 64) unconstrained_ret_fread_unlocked_995_64)))\n (not $x33058)))\n(assert\n (let ((?x48265 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_995_64)))\n (let ((?x43600 (bvadd (_ bv16 64) ?x48265)))\n (let (($x54231 (= unconstrained_ret_fread_unlocked_1449_64 ?x43600)))\n (not $x54231)))))\n(assert\n (let ((?x34738 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_1449_64)))\n (let ((?x48265 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_995_64)))\n (let ((?x43600 (bvadd (_ bv16 64) ?x48265)))\n (let ((?x43303 (bvadd ?x43600 ?x34738)))\n (let (($x21690 (= unconstrained_ret_fread_unlocked_1889_64 ?x43303)))\n (not $x21690)))))))\n(assert\n (let ((?x50809 (bvadd unconstrained_ret_fread_unlocked_995_64 unconstrained_ret_fread_unlocked_1449_64)))\n (let ((?x6532 (bvadd ?x50809 unconstrained_ret_fread_unlocked_1889_64)))\n (let (($x34311 (bvule (_ bv16 64) ?x6532)))\n (not $x34311)))))\n(assert\n (let ((?x39088 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_1889_64)))\n (let ((?x34738 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_1449_64)))\n (let ((?x52468 (bvadd ?x34738 ?x39088)))\n (let (($x39607 (= unconstrained_ret_fread_unlocked_995_64 ?x52468)))\n (not $x39607))))))\n(assert\n (let ((?x39088 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_1889_64)))\n (let ((?x34738 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_1449_64)))\n (let ((?x48265 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_995_64)))\n (let ((?x6061 (bvadd (bvadd (_ bv1 64) unconstrained_ret_fread_unlocked_995_64) unconstrained_ret_fread_unlocked_1449_64)))\n (let ((?x14823 (bvadd ?x6061 unconstrained_ret_fread_unlocked_1889_64)))\n (let ((?x19249 ((_ extract 63 1) ?x14823)))\n (let ((?x15592 (concat (_ bv0 1) ?x19249)))\n (let ((?x16462 (bvmul (_ bv2 64) ?x15592)))\n (let ((?x12767 (bvadd (bvadd (bvadd ?x16462 ?x48265) ?x34738) ?x39088)))\n (let (($x36172 (and (distinct (_ bv1 64) ?x12767) true)))\n (let (($x41963 (and (distinct (_ bv0 64) ?x12767) true)))\n (and $x41963 $x36172)))))))))))))\n(assert\n (let ((?x39088 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_1889_64)))\n (let ((?x34738 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_1449_64)))\n (let ((?x48265 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_995_64)))\n (let ((?x6061 (bvadd (bvadd (_ bv1 64) unconstrained_ret_fread_unlocked_995_64) unconstrained_ret_fread_unlocked_1449_64)))\n (let ((?x14823 (bvadd ?x6061 unconstrained_ret_fread_unlocked_1889_64)))\n (let ((?x19249 ((_ extract 63 1) ?x14823)))\n (let ((?x15592 (concat (_ bv0 1) ?x19249)))\n (let ((?x16462 (bvmul (_ bv2 64) ?x15592)))\n (let ((?x12767 (bvadd (bvadd (bvadd ?x16462 ?x48265) ?x34738) ?x39088)))\n (bvule ?x12767 (_ bv384 64))))))))))))\n(check-sat)\n",
    "time": 100.00030493736267,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=13, tm_hour=4, tm_min=21, tm_sec=6, tm_wday=6, tm_yday=348, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            0.362438440322876
        ]
    }
}