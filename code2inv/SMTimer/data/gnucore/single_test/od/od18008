{
    "filename": "od",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun unconstrained_ret_fread_unlocked_818_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_fread_unlocked_1267_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_fread_unlocked_1682_64 () (_ BitVec 64))\n(assert\n (let (($x35876 (= (_ bv16 64) unconstrained_ret_fread_unlocked_818_64)))\n (not $x35876)))\n(assert\n (let ((?x16149 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_818_64)))\n (let ((?x15515 (bvadd (_ bv16 64) ?x16149)))\n (let (($x39081 (= unconstrained_ret_fread_unlocked_1267_64 ?x15515)))\n (not $x39081)))))\n(assert\n (let ((?x48910 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_1267_64)))\n (let ((?x16149 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_818_64)))\n (let ((?x15515 (bvadd (_ bv16 64) ?x16149)))\n (let ((?x49726 (bvadd ?x15515 ?x48910)))\n (let (($x35256 (= unconstrained_ret_fread_unlocked_1682_64 ?x49726)))\n (not $x35256)))))))\n(assert\n (let ((?x4568 (bvadd unconstrained_ret_fread_unlocked_818_64 unconstrained_ret_fread_unlocked_1267_64)))\n (let ((?x51133 (bvadd ?x4568 unconstrained_ret_fread_unlocked_1682_64)))\n (let (($x37902 (bvule (_ bv16 64) ?x51133)))\n (not $x37902)))))\n(assert\n (let ((?x42135 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_1682_64)))\n (let ((?x48910 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_1267_64)))\n (let ((?x36222 (bvadd ?x48910 ?x42135)))\n (let (($x38984 (= unconstrained_ret_fread_unlocked_818_64 ?x36222)))\n (not $x38984))))))\n(assert\n (let ((?x42135 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_1682_64)))\n (let ((?x48910 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_1267_64)))\n (let ((?x16149 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_818_64)))\n (let ((?x22488 (bvadd (bvadd (_ bv1 64) unconstrained_ret_fread_unlocked_818_64) unconstrained_ret_fread_unlocked_1267_64)))\n (let ((?x33758 (bvadd ?x22488 unconstrained_ret_fread_unlocked_1682_64)))\n (let ((?x18490 ((_ extract 63 1) ?x33758)))\n (let ((?x875 (concat (_ bv0 1) ?x18490)))\n (let ((?x11568 (bvmul (_ bv2 64) ?x875)))\n (let ((?x13202 (bvadd (bvadd (bvadd ?x11568 ?x16149) ?x48910) ?x42135)))\n (let (($x34038 (and (distinct (_ bv1 64) ?x13202) true)))\n (let (($x40234 (and (distinct (_ bv0 64) ?x13202) true)))\n (and $x40234 $x34038)))))))))))))\n(assert\n (let ((?x42135 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_1682_64)))\n (let ((?x48910 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_1267_64)))\n (let ((?x16149 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_818_64)))\n (let ((?x22488 (bvadd (bvadd (_ bv1 64) unconstrained_ret_fread_unlocked_818_64) unconstrained_ret_fread_unlocked_1267_64)))\n (let ((?x33758 (bvadd ?x22488 unconstrained_ret_fread_unlocked_1682_64)))\n (let ((?x18490 ((_ extract 63 1) ?x33758)))\n (let ((?x875 (concat (_ bv0 1) ?x18490)))\n (let ((?x11568 (bvmul (_ bv2 64) ?x875)))\n (let ((?x13202 (bvadd (bvadd (bvadd ?x11568 ?x16149) ?x48910) ?x42135)))\n (bvule ?x13202 (_ bv384 64))))))))))))\n(check-sat)\n",
    "time": 3.1715946197509766,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=13, tm_hour=4, tm_min=15, tm_sec=51, tm_wday=6, tm_yday=348, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            0.3653275966644287
        ]
    }
}