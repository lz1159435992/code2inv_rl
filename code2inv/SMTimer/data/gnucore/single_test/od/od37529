{
    "filename": "od",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun unconstrained_ret_fread_unlocked_1811_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_fread_unlocked_2088_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_fread_unlocked_2380_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_fread_unlocked_3025_64 () (_ BitVec 64))\n(assert\n (let (($x30177 (= unconstrained_ret_fread_unlocked_1811_64 (_ bv16 64))))\n (not $x30177)))\n(assert\n (let ((?x29502 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_1811_64)))\n (let ((?x40641 (bvadd (_ bv16 64) ?x29502)))\n (let (($x33918 (= unconstrained_ret_fread_unlocked_2088_64 ?x40641)))\n (not $x33918)))))\n(assert\n (let ((?x50275 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_2088_64)))\n (let ((?x29502 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_1811_64)))\n (= unconstrained_ret_fread_unlocked_2380_64 (bvadd (_ bv16 64) (bvadd ?x29502 ?x50275))))))\n(assert\n (let ((?x34083 (bvadd unconstrained_ret_fread_unlocked_1811_64 unconstrained_ret_fread_unlocked_2088_64)))\n (let ((?x21749 (bvadd ?x34083 unconstrained_ret_fread_unlocked_2380_64)))\n (bvule (_ bv16 64) ?x21749))))\n(assert\n (let ((?x28545 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_2380_64)))\n (let ((?x50275 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_2088_64)))\n (let ((?x29347 (bvadd ?x50275 ?x28545)))\n (= unconstrained_ret_fread_unlocked_1811_64 (bvadd (_ bv16 64) ?x29347))))))\n(assert\n (let (($x21112 (bvule (_ bv16 64) unconstrained_ret_fread_unlocked_3025_64)))\n (not $x21112)))\n(assert\n (let (($x20282 (= unconstrained_ret_fread_unlocked_3025_64 (_ bv0 64))))\n (not $x20282)))\n(assert\n (= ((_ extract 63 32) (bvadd (_ bv3221229416 64) unconstrained_ret_fread_unlocked_3025_64)) (_ bv0 32)))\n(assert\n (let (($x39671 (= unconstrained_ret_fread_unlocked_3025_64 (_ bv15 64))))\n (let ((?x14808 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_3025_64)))\n (let ((?x43324 (bvadd (_ bv18446744073709551615 64) ?x14808)))\n (let ((?x35976 (bvadd (_ bv1 64) unconstrained_ret_fread_unlocked_3025_64)))\n (let ((?x13736 ((_ extract 63 1) ?x35976)))\n (let ((?x39352 (concat (_ bv0 1) ?x13736)))\n (let ((?x52489 (bvmul (_ bv18446744073709551614 64) ?x39352)))\n (let (($x51119 (= ?x52489 ?x43324)))\n (let (($x41983 (not $x51119)))\n (or $x41983 $x39671)))))))))))\n(assert\n (let ((?x35976 (bvadd (_ bv1 64) unconstrained_ret_fread_unlocked_3025_64)))\n (let ((?x13736 ((_ extract 63 1) ?x35976)))\n (let ((?x39352 (concat (_ bv0 1) ?x13736)))\n (let ((?x37881 (bvmul (_ bv2 64) ?x39352)))\n (= ?x37881 (_ bv16 64)))))))\n(assert\n (let ((?x34083 (bvadd unconstrained_ret_fread_unlocked_1811_64 unconstrained_ret_fread_unlocked_2088_64)))\n (let ((?x21749 (bvadd ?x34083 unconstrained_ret_fread_unlocked_2380_64)))\n (let ((?x3190 (bvadd (_ bv128 64) (bvadd ?x21749 unconstrained_ret_fread_unlocked_3025_64))))\n (not (= ((_ extract 63 3) ?x3190) (_ bv0 61)))))))\n(assert\n (let ((?x34083 (bvadd unconstrained_ret_fread_unlocked_1811_64 unconstrained_ret_fread_unlocked_2088_64)))\n (let ((?x21749 (bvadd ?x34083 unconstrained_ret_fread_unlocked_2380_64)))\n (let ((?x3190 (bvadd (_ bv128 64) (bvadd ?x21749 unconstrained_ret_fread_unlocked_3025_64))))\n (not (= ((_ extract 63 6) ?x3190) (_ bv0 58)))))))\n(assert\n (let ((?x34083 (bvadd unconstrained_ret_fread_unlocked_1811_64 unconstrained_ret_fread_unlocked_2088_64)))\n (let ((?x21749 (bvadd ?x34083 unconstrained_ret_fread_unlocked_2380_64)))\n (let ((?x3190 (bvadd (_ bv128 64) (bvadd ?x21749 unconstrained_ret_fread_unlocked_3025_64))))\n (not (= ((_ extract 63 9) ?x3190) (_ bv0 55)))))))\n(assert\n (let ((?x31589 ((_ extract 31 0) unconstrained_ret_fread_unlocked_3025_64)))\n (let ((?x19944 (bvadd (_ bv3221229416 32) ?x31589)))\n (bvule ?x19944 (_ bv3221229431 32)))))\n(check-sat)\n",
    "time": 1.2050137519836426,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=13, tm_hour=4, tm_min=48, tm_sec=59, tm_wday=6, tm_yday=348, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            0.861332893371582
        ]
    }
}