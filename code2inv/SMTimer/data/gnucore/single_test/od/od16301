{
    "filename": "od",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun unconstrained_ret_fread_unlocked_818_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_fread_unlocked_1267_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_fread_unlocked_1634_64 () (_ BitVec 64))\n(assert\n (let (($x35876 (= (_ bv16 64) unconstrained_ret_fread_unlocked_818_64)))\n (not $x35876)))\n(assert\n (let ((?x16149 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_818_64)))\n (let ((?x15515 (bvadd (_ bv16 64) ?x16149)))\n (let (($x39081 (= unconstrained_ret_fread_unlocked_1267_64 ?x15515)))\n (not $x39081)))))\n(assert\n (let ((?x48910 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_1267_64)))\n (let ((?x16149 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_818_64)))\n (let ((?x15515 (bvadd (_ bv16 64) ?x16149)))\n (let ((?x49726 (bvadd ?x15515 ?x48910)))\n (let (($x29363 (= unconstrained_ret_fread_unlocked_1634_64 ?x49726)))\n (not $x29363)))))))\n(assert\n (let ((?x4568 (bvadd unconstrained_ret_fread_unlocked_818_64 unconstrained_ret_fread_unlocked_1267_64)))\n (let ((?x28277 (bvadd ?x4568 unconstrained_ret_fread_unlocked_1634_64)))\n (let (($x5927 (bvule (_ bv16 64) ?x28277)))\n (not $x5927)))))\n(assert\n (let ((?x38793 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_1634_64)))\n (let ((?x48910 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_1267_64)))\n (let ((?x24790 (bvadd ?x48910 ?x38793)))\n (let (($x30385 (= unconstrained_ret_fread_unlocked_818_64 ?x24790)))\n (not $x30385))))))\n(assert\n (let ((?x38793 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_1634_64)))\n (let ((?x48910 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_1267_64)))\n (let ((?x16149 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_818_64)))\n (let ((?x22488 (bvadd (bvadd (_ bv1 64) unconstrained_ret_fread_unlocked_818_64) unconstrained_ret_fread_unlocked_1267_64)))\n (let ((?x36868 (bvadd ?x22488 unconstrained_ret_fread_unlocked_1634_64)))\n (let ((?x36844 ((_ extract 63 1) ?x36868)))\n (let ((?x27667 (concat (_ bv0 1) ?x36844)))\n (let ((?x33688 (bvmul (_ bv2 64) ?x27667)))\n (let ((?x5719 (bvadd (bvadd (bvadd ?x33688 ?x16149) ?x48910) ?x38793)))\n (let (($x34290 (and (distinct (_ bv1 64) ?x5719) true)))\n (let (($x46286 (and (distinct (_ bv0 64) ?x5719) true)))\n (and $x46286 $x34290)))))))))))))\n(assert\n (let ((?x38793 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_1634_64)))\n (let ((?x48910 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_1267_64)))\n (let ((?x16149 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_818_64)))\n (let ((?x22488 (bvadd (bvadd (_ bv1 64) unconstrained_ret_fread_unlocked_818_64) unconstrained_ret_fread_unlocked_1267_64)))\n (let ((?x36868 (bvadd ?x22488 unconstrained_ret_fread_unlocked_1634_64)))\n (let ((?x36844 ((_ extract 63 1) ?x36868)))\n (let ((?x27667 (concat (_ bv0 1) ?x36844)))\n (let ((?x33688 (bvmul (_ bv2 64) ?x27667)))\n (let ((?x5719 (bvadd (bvadd (bvadd ?x33688 ?x16149) ?x48910) ?x38793)))\n (bvule ?x5719 (_ bv384 64))))))))))))\n(check-sat)\n",
    "time": 2.2175800800323486,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=13, tm_hour=4, tm_min=11, tm_sec=46, tm_wday=6, tm_yday=348, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            0.38776302337646484
        ]
    }
}