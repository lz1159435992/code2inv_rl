{
    "filename": "od",
    "script": "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun unconstrained_ret_fread_unlocked_1811_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_fread_unlocked_2088_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_fread_unlocked_2380_64 () (_ BitVec 64))\n(declare-fun unconstrained_ret_fread_unlocked_2560_64 () (_ BitVec 64))\n(assert\n (let (($x30177 (= unconstrained_ret_fread_unlocked_1811_64 (_ bv16 64))))\n (not $x30177)))\n(assert\n (let ((?x29502 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_1811_64)))\n (let ((?x40641 (bvadd (_ bv16 64) ?x29502)))\n (let (($x33918 (= unconstrained_ret_fread_unlocked_2088_64 ?x40641)))\n (not $x33918)))))\n(assert\n (let ((?x50275 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_2088_64)))\n (let ((?x29502 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_1811_64)))\n (= unconstrained_ret_fread_unlocked_2380_64 (bvadd (_ bv16 64) (bvadd ?x29502 ?x50275))))))\n(assert\n (let ((?x34083 (bvadd unconstrained_ret_fread_unlocked_1811_64 unconstrained_ret_fread_unlocked_2088_64)))\n (let ((?x21749 (bvadd ?x34083 unconstrained_ret_fread_unlocked_2380_64)))\n (bvule (_ bv16 64) ?x21749))))\n(assert\n (let ((?x28545 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_2380_64)))\n (let ((?x50275 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_2088_64)))\n (let ((?x29347 (bvadd ?x50275 ?x28545)))\n (= unconstrained_ret_fread_unlocked_1811_64 (bvadd (_ bv16 64) ?x29347))))))\n(assert\n (let (($x15945 (bvule (_ bv16 64) unconstrained_ret_fread_unlocked_2560_64)))\n (not $x15945)))\n(assert\n (let (($x35823 (= unconstrained_ret_fread_unlocked_2560_64 (_ bv0 64))))\n (not $x35823)))\n(assert\n (= ((_ extract 63 32) (bvadd (_ bv3221229416 64) unconstrained_ret_fread_unlocked_2560_64)) (_ bv0 32)))\n(assert\n (let (($x30303 (= unconstrained_ret_fread_unlocked_2560_64 (_ bv15 64))))\n (let ((?x19819 (bvmul (_ bv18446744073709551615 64) unconstrained_ret_fread_unlocked_2560_64)))\n (let ((?x6367 (bvadd (_ bv18446744073709551615 64) ?x19819)))\n (let ((?x47893 (bvadd (_ bv1 64) unconstrained_ret_fread_unlocked_2560_64)))\n (let ((?x18514 ((_ extract 63 1) ?x47893)))\n (let ((?x16608 (concat (_ bv0 1) ?x18514)))\n (let ((?x20944 (bvmul (_ bv18446744073709551614 64) ?x16608)))\n (let (($x17053 (= ?x20944 ?x6367)))\n (let (($x4910 (not $x17053)))\n (or $x4910 $x30303)))))))))))\n(assert\n (let ((?x47893 (bvadd (_ bv1 64) unconstrained_ret_fread_unlocked_2560_64)))\n (let ((?x18514 ((_ extract 63 1) ?x47893)))\n (let ((?x16608 (concat (_ bv0 1) ?x18514)))\n (let ((?x37064 (bvmul (_ bv2 64) ?x16608)))\n (= ?x37064 (_ bv16 64)))))))\n(assert\n (let ((?x34083 (bvadd unconstrained_ret_fread_unlocked_1811_64 unconstrained_ret_fread_unlocked_2088_64)))\n (let ((?x21749 (bvadd ?x34083 unconstrained_ret_fread_unlocked_2380_64)))\n (let ((?x39924 (bvadd (_ bv64 64) (bvadd ?x21749 unconstrained_ret_fread_unlocked_2560_64))))\n (not (= ((_ extract 63 3) ?x39924) (_ bv0 61)))))))\n(assert\n (let ((?x34083 (bvadd unconstrained_ret_fread_unlocked_1811_64 unconstrained_ret_fread_unlocked_2088_64)))\n (let ((?x21749 (bvadd ?x34083 unconstrained_ret_fread_unlocked_2380_64)))\n (let ((?x39924 (bvadd (_ bv64 64) (bvadd ?x21749 unconstrained_ret_fread_unlocked_2560_64))))\n (not (= ((_ extract 63 6) ?x39924) (_ bv0 58)))))))\n(assert\n (let ((?x34083 (bvadd unconstrained_ret_fread_unlocked_1811_64 unconstrained_ret_fread_unlocked_2088_64)))\n (let ((?x21749 (bvadd ?x34083 unconstrained_ret_fread_unlocked_2380_64)))\n (let ((?x39924 (bvadd (_ bv64 64) (bvadd ?x21749 unconstrained_ret_fread_unlocked_2560_64))))\n (not (= ((_ extract 63 9) ?x39924) (_ bv0 55)))))))\n(assert\n (let ((?x26221 ((_ extract 31 0) unconstrained_ret_fread_unlocked_2560_64)))\n (let ((?x48601 (bvadd (_ bv3221229416 32) ?x26221)))\n (bvule ?x48601 (_ bv3221229431 32)))))\n(check-sat)\n",
    "time": 1.9337704181671143,
    "stamp": "time.struct_time(tm_year=2020, tm_mon=12, tm_mday=13, tm_hour=4, tm_min=38, tm_sec=38, tm_wday=6, tm_yday=348, tm_isdst=0)",
    "solving_time_dic": {
        "z3": [
            1.1344797611236572
        ]
    }
}